{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\nvar InputLabel = function InputLabel(props) {\n  var labeled = props.labeled,\n    wiggle = props.wiggle,\n    error = props.error,\n    focused = props.focused,\n    opacity = props.opacity,\n    labelLayoutWidth = props.labelLayoutWidth,\n    labelBackground = props.labelBackground,\n    label = props.label,\n    labelError = props.labelError,\n    onLayoutAnimatedText = props.onLayoutAnimatedText,\n    onLabelTextLayout = props.onLabelTextLayout,\n    hasActiveOutline = props.hasActiveOutline,\n    activeColor = props.activeColor,\n    placeholderStyle = props.placeholderStyle,\n    baseLabelTranslateX = props.baseLabelTranslateX,\n    baseLabelTranslateY = props.baseLabelTranslateY,\n    font = props.font,\n    fontSize = props.fontSize,\n    lineHeight = props.lineHeight,\n    fontWeight = props.fontWeight,\n    placeholderOpacity = props.placeholderOpacity,\n    wiggleOffsetX = props.wiggleOffsetX,\n    labelScale = props.labelScale,\n    topPosition = props.topPosition,\n    paddingLeft = props.paddingLeft,\n    paddingRight = props.paddingRight,\n    backgroundColor = props.backgroundColor,\n    roundness = props.roundness,\n    placeholderColor = props.placeholderColor,\n    errorColor = props.errorColor,\n    labelTranslationXOffset = props.labelTranslationXOffset,\n    maxFontSizeMultiplier = props.maxFontSizeMultiplier,\n    testID = props.testID;\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n  var paddingOffset = paddingLeft && paddingRight ? {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  } : {};\n  var labelTranslationX = {\n    transform: [{\n      translateX: labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]\n      })\n    }]\n  };\n  var labelStyle = Object.assign({}, font, {\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0]\n    }),\n    transform: [{\n      translateX: wiggle ? error.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, wiggleOffsetX, 0]\n      }) : 0\n    }, {\n      translateY: baseLabelTranslateY !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateY, 0]\n      }) : 0\n    }, {\n      scale: labelScale !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelScale, 1]\n      }) : labeled\n    }]\n  });\n  var textColor = labelError && errorColor ? errorColor : placeholderColor;\n  return _react.default.createElement(_reactNative.Animated.View, {\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.labelContainer, {\n      opacity: opacity,\n      width: width\n    }, labelTranslationX]\n  }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({\n    labeled: labeled,\n    labelLayoutWidth: labelLayoutWidth,\n    labelStyle: labelStyle,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateX: baseLabelTranslateX,\n    topPosition: topPosition,\n    label: label,\n    backgroundColor: backgroundColor,\n    roundness: roundness,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: testID\n  }), _react.default.createElement(_AnimatedText.default, {\n    variant: \"bodySmall\",\n    onLayout: onLayoutAnimatedText,\n    onTextLayout: onLabelTextLayout,\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset || {}, {\n      color: activeColor\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: testID + \"-label-active\"\n  }, label), _react.default.createElement(_AnimatedText.default, {\n    variant: focused ? 'bodyLarge' : 'bodySmall',\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset, {\n      color: textColor,\n      opacity: placeholderOpacity\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: testID + \"-label-inactive\"\n  }, label));\n};\nvar styles = _reactNative.StyleSheet.create({\n  labelContainer: {\n    zIndex: 3\n  }\n});\nvar _default = exports.default = _react.default.memo(InputLabel);","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_AnimatedText","InputLabel","props","labeled","wiggle","error","focused","opacity","labelLayoutWidth","labelBackground","label","labelError","onLayoutAnimatedText","onLabelTextLayout","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","lineHeight","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingLeft","paddingRight","backgroundColor","roundness","placeholderColor","errorColor","labelTranslationXOffset","maxFontSizeMultiplier","testID","_Dimensions$get","Dimensions","get","width","paddingOffset","labelTranslationX","transform","translateX","interpolate","inputRange","outputRange","labelStyle","Object","assign","translateY","scale","textColor","React","createElement","Animated","View","pointerEvents","style","StyleSheet","absoluteFill","styles","labelContainer","AnimatedText","variant","onLayout","onTextLayout","top","color","numberOfLines","create","zIndex","_default","exports","default","memo"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet, Dimensions } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n  } = props;\n\n  const { width } = Dimensions.get('window');\n\n  const paddingOffset =\n    paddingLeft && paddingRight ? { paddingLeft, paddingRight } : {};\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0],\n    }),\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: wiggle\n          ? error.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [0, wiggleOffsetX, 0],\n            })\n          : 0,\n      },\n      {\n        // Move label to top\n        translateY:\n          baseLabelTranslateY !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [baseLabelTranslateY, 0],\n              })\n            : 0,\n      },\n      {\n        // Make label smaller\n        scale:\n          labelScale !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelScale, 1],\n              })\n            : labeled,\n      },\n    ],\n  };\n\n  const textColor = labelError && errorColor ? errorColor : placeholderColor;\n\n  return (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <Animated.View\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.labelContainer,\n        { opacity, width },\n        labelTranslationX,\n      ]}\n    >\n      {labelBackground?.({\n        labeled,\n        labelLayoutWidth,\n        labelStyle,\n        placeholderStyle,\n        baseLabelTranslateX,\n        topPosition,\n        label,\n        backgroundColor,\n        roundness,\n        maxFontSizeMultiplier: maxFontSizeMultiplier,\n        testID,\n      })}\n      <AnimatedText\n        variant=\"bodySmall\"\n        onLayout={onLayoutAnimatedText}\n        onTextLayout={onLabelTextLayout}\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset || {},\n          {\n            color: activeColor,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-active`}\n      >\n        {label}\n      </AnimatedText>\n      <AnimatedText\n        variant={focused ? 'bodyLarge' : 'bodySmall'}\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset,\n          {\n            color: textColor,\n            opacity: placeholderOpacity,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-inactive`}\n      >\n        {label}\n      </AnimatedText>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default React.memo(InputLabel);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}