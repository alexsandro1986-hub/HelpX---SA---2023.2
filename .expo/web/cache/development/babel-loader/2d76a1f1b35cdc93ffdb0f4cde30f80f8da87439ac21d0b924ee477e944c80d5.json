{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar MenuItem = function MenuItem(_ref) {\n  var leadingIcon = _ref.leadingIcon,\n    trailingIcon = _ref.trailingIcon,\n    dense = _ref.dense,\n    title = _ref.title,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    contentStyle = _ref.contentStyle,\n    titleStyle = _ref.titleStyle,\n    customRippleColor = _ref.rippleColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'menu-item' : _ref$testID,\n    accessibilityLabel = _ref.accessibilityLabel,\n    accessibilityState = _ref.accessibilityState,\n    themeOverrides = _ref.theme,\n    _ref$titleMaxFontSize = _ref.titleMaxFontSizeMultiplier,\n    titleMaxFontSizeMultiplier = _ref$titleMaxFontSize === void 0 ? 1.5 : _ref$titleMaxFontSize;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _getMenuItemColor = (0, _utils.getMenuItemColor)({\n      theme: theme,\n      disabled: disabled,\n      customRippleColor: customRippleColor\n    }),\n    titleColor = _getMenuItemColor.titleColor,\n    iconColor = _getMenuItemColor.iconColor,\n    rippleColor = _getMenuItemColor.rippleColor;\n  var isV3 = theme.isV3;\n  var containerPadding = isV3 ? 12 : 8;\n  var iconWidth = isV3 ? 24 : 40;\n  var minWidth = _utils.MIN_WIDTH - (isV3 ? 12 : 16);\n  var maxWidth = (0, _utils.getContentMaxWidth)({\n    isV3: isV3,\n    iconWidth: iconWidth,\n    leadingIcon: leadingIcon,\n    trailingIcon: trailingIcon\n  });\n  var titleTextStyle = Object.assign({\n    color: titleColor\n  }, isV3 ? theme.fonts.bodyLarge : {});\n  var newAccessibilityState = Object.assign({}, accessibilityState, {\n    disabled: disabled\n  });\n  return React.createElement(_TouchableRipple.default, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: newAccessibilityState,\n    rippleColor: rippleColor\n  }, React.createElement(_reactNative.View, {\n    style: styles.row\n  }, leadingIcon ? React.createElement(_reactNative.View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(_Icon.default, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(_reactNative.View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(_Text.default, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    testID: testID + \"-title\",\n    style: [!isV3 && styles.title, titleTextStyle, titleStyle],\n    maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n  }, title)), isV3 && trailingIcon ? React.createElement(_reactNative.View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(_Icon.default, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\nMenuItem.displayName = 'Menu.Item';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    minWidth: _utils.MIN_WIDTH,\n    maxWidth: _utils.MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\nvar _default = exports.default = MenuItem;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_utils","_theming","_Icon","_interopRequireDefault","_TouchableRipple","_Text","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MenuItem","_ref","leadingIcon","trailingIcon","dense","title","disabled","onPress","style","contentStyle","titleStyle","customRippleColor","rippleColor","_ref$testID","testID","accessibilityLabel","accessibilityState","themeOverrides","theme","_ref$titleMaxFontSize","titleMaxFontSizeMultiplier","useInternalTheme","_getMenuItemColor","getMenuItemColor","titleColor","iconColor","isV3","containerPadding","iconWidth","minWidth","MIN_WIDTH","maxWidth","getContentMaxWidth","titleTextStyle","assign","color","fonts","bodyLarge","newAccessibilityState","createElement","TouchableRipple","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","View","row","item","width","pointerEvents","Icon","source","size","content","md3LeadingIcon","md3WithoutLeadingIcon","Text","variant","selectable","numberOfLines","maxFontSizeMultiplier","displayName","StyleSheet","create","MAX_WIDTH","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft","_default","exports"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\Menu\\MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  ColorValue,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityState?: AccessibilityState;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  onPress,\n  style,\n  contentStyle,\n  titleStyle,\n  rippleColor: customRippleColor,\n  testID = 'menu-item',\n  accessibilityLabel,\n  accessibilityState,\n  theme: themeOverrides,\n  titleMaxFontSizeMultiplier = 1.5,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { titleColor, iconColor, rippleColor } = getMenuItemColor({\n    theme,\n    disabled,\n    customRippleColor,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\n  };\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={newAccessibilityState}\n      rippleColor={rippleColor}\n    >\n      <View style={styles.row}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            testID={`${testID}-title`}\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\n            maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default MenuItem;\n"],"mappings":";;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAWA,IAAAE,MAAA,GAAAF,OAAA;AAMA,IAAAG,QAAA,GAAAH,OAAA;AAEA,IAAAI,KAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,gBAAA,GAAAD,sBAAA,CAAAL,OAAA;AACA,IAAAO,KAAA,GAAAF,sBAAA,CAAAL,OAAA;AAAqC,SAAAQ,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAV,wBAAAc,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAuFrC,IAAMW,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,IAAA,EAgBJ;EAAA,IAfXC,WAAW,GAeLD,IAAA,CAfNC,WAAW;IACXC,YAAY,GAcNF,IAAA,CAdNE,YAAY;IACZC,KAAK,GAaCH,IAAA,CAbNG,KAAK;IACLC,KAAK,GAYCJ,IAAA,CAZNI,KAAK;IACLC,QAAQ,GAWFL,IAAA,CAXNK,QAAQ;IACRC,OAAO,GAUDN,IAAA,CAVNM,OAAO;IACPC,KAAK,GASCP,IAAA,CATNO,KAAK;IACLC,YAAY,GAQNR,IAAA,CARNQ,YAAY;IACZC,UAAU,GAOJT,IAAA,CAPNS,UAAU;IACGC,iBAAiB,GAMxBV,IAAA,CANNW,WAAW;IAAAC,WAAA,GAMLZ,IAAA,CALNa,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,WAAW,GAAAA,WAAA;IACpBE,kBAAkB,GAIZd,IAAA,CAJNc,kBAAkB;IAClBC,kBAAkB,GAGZf,IAAA,CAHNe,kBAAkB;IACXC,cAAc,GAEfhB,IAAA,CAFNiB,KAAK;IAAAC,qBAAA,GAEClB,IAAA,CADNmB,0BAA0B;IAA1BA,0BAA0B,GAAAD,qBAAA,cAAG,MAAAA,qBAAA;EAE7B,IAAMD,KAAK,GAAG,IAAAG,yBAAgB,EAACJ,cAAc,CAAC;EAC9C,IAAAK,iBAAA,GAA+C,IAAAC,uBAAgB,EAAC;MAC9DL,KAAK,EAALA,KAAK;MACLZ,QAAQ,EAARA,QAAQ;MACRK,iBAAA,EAAAA;IACF,CAAC,CAAC;IAJMa,UAAU,GAAAF,iBAAA,CAAVE,UAAU;IAAEC,SAAS,GAAAH,iBAAA,CAATG,SAAS;IAAEb,WAAA,GAAAU,iBAAA,CAAAV,WAAA;EAK/B,IAAQc,IAAA,GAASR,KAAK,CAAdQ,IAAA;EAER,IAAMC,gBAAgB,GAAGD,IAAI,GAAG,EAAE,GAAG,CAAC;EAEtC,IAAME,SAAS,GAAGF,IAAI,GAAG,EAAE,GAAG,EAAE;EAEhC,IAAMG,QAAQ,GAAGC,gBAAS,IAAIJ,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAE7C,IAAMK,QAAQ,GAAG,IAAAC,yBAAkB,EAAC;IAClCN,IAAI,EAAJA,IAAI;IACJE,SAAS,EAATA,SAAS;IACT1B,WAAW,EAAXA,WAAW;IACXC,YAAA,EAAAA;EACF,CAAC,CAAC;EAEF,IAAM8B,cAAc,GAAA1C,MAAA,CAAA2C,MAAA;IAClBC,KAAK,EAAEX;EAAU,GACbE,IAAI,GAAGR,KAAK,CAACkB,KAAK,CAACC,SAAS,GAAG,CAAC,CAAC,CACtC;EAED,IAAMC,qBAAqB,GAAA/C,MAAA,CAAA2C,MAAA,KAAQlB,kBAAkB;IAAEV,QAAA,EAAAA;EAAA,EAAU;EAEjE,OACEtC,KAAA,CAAAuE,aAAA,CAACC,wBAAe;IACdhC,KAAK,EAAE,CACLiC,MAAM,CAACC,SAAS,EAChB;MAAEC,iBAAiB,EAAEhB;IAAiB,CAAC,EACvCvB,KAAK,IAAIqC,MAAM,CAACG,iBAAiB,EACjCpC,KAAK,CACL;IACFD,OAAO,EAAEA,OAAQ;IACjBD,QAAQ,EAAEA,QAAS;IACnBQ,MAAM,EAAEA,MAAO;IACfC,kBAAkB,EAAEA,kBAAmB;IACvC8B,iBAAiB,EAAC,UAAU;IAC5B7B,kBAAkB,EAAEsB,qBAAsB;IAC1C1B,WAAW,EAAEA;EAAY,GAEzB5C,KAAA,CAAAuE,aAAA,CAACO,iBAAI;IAACtC,KAAK,EAAEiC,MAAM,CAACM;EAAI,GACrB7C,WAAW,GACVlC,KAAA,CAAAuE,aAAA,CAACO,iBAAI;IACHtC,KAAK,EAAE,CAAC,CAACkB,IAAI,IAAIe,MAAM,CAACO,IAAI,EAAE;MAAEC,KAAK,EAAErB;IAAU,CAAC,CAAE;IACpDsB,aAAa,EAAC;EAAU,GAExBlF,KAAA,CAAAuE,aAAA,CAACY,aAAI;IAACC,MAAM,EAAElD,WAAY;IAACmD,IAAI,EAAE,EAAG;IAAClB,KAAK,EAAEV;EAAU,CAAE,CACpD,CAAC,GACL,IAAI,EACRzD,KAAA,CAAAuE,aAAA,CAACO,iBAAI;IACHtC,KAAK,EAAE,CACL,CAACkB,IAAI,IAAIe,MAAM,CAACO,IAAI,EACpBP,MAAM,CAACa,OAAO,EACd;MAAEzB,QAAQ,EAARA,QAAQ;MAAEE,QAAA,EAAAA;IAAS,CAAC,EACtBL,IAAI,KACDxB,WAAW,GACRuC,MAAM,CAACc,cAAc,GACrBd,MAAM,CAACe,qBAAqB,CAAC,EACnC/C,YAAY,CACZ;IACFyC,aAAa,EAAC;EAAM,GAEpBlF,KAAA,CAAAuE,aAAA,CAACkB,aAAI;IACHC,OAAO,EAAC,WAAW;IACnBC,UAAU,EAAE,KAAM;IAClBC,aAAa,EAAE,CAAE;IACjB9C,MAAM,EAAKA,MAAO,WAAQ;IAC1BN,KAAK,EAAE,CAAC,CAACkB,IAAI,IAAIe,MAAM,CAACpC,KAAK,EAAE4B,cAAc,EAAEvB,UAAU,CAAE;IAC3DmD,qBAAqB,EAAEzC;EAA2B,GAEjDf,KACG,CACF,CAAC,EACNqB,IAAI,IAAIvB,YAAY,GACnBnC,KAAA,CAAAuE,aAAA,CAACO,iBAAI;IACHtC,KAAK,EAAE,CAAC,CAACkB,IAAI,IAAIe,MAAM,CAACO,IAAI,EAAE;MAAEC,KAAK,EAAErB;IAAU,CAAC,CAAE;IACpDsB,aAAa,EAAC;EAAU,GAExBlF,KAAA,CAAAuE,aAAA,CAACY,aAAI;IAACC,MAAM,EAAEjD,YAAa;IAACkD,IAAI,EAAE,EAAG;IAAClB,KAAK,EAAEV;EAAU,CAAE,CACrD,CAAC,GACL,IACA,CACS,CAAC;AAEtB,CAAC;AAEDzB,QAAQ,CAAC8D,WAAW,GAAG,WAAW;AAElC,IAAMrB,MAAM,GAAGsB,uBAAU,CAACC,MAAM,CAAC;EAC/BtB,SAAS,EAAE;IACTb,QAAQ,EAAEC,gBAAS;IACnBC,QAAQ,EAAEkC,gBAAS;IACnBC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;EAClB,CAAC;EACDvB,iBAAiB,EAAE;IACjBsB,MAAM,EAAE;EACV,CAAC;EACDnB,GAAG,EAAE;IACHqB,aAAa,EAAE;EACjB,CAAC;EACD/D,KAAK,EAAE;IACLgE,QAAQ,EAAE;EACZ,CAAC;EACDrB,IAAI,EAAE;IACJsB,gBAAgB,EAAE;EACpB,CAAC;EACDhB,OAAO,EAAE;IACPa,cAAc,EAAE;EAClB,CAAC;EACDZ,cAAc,EAAE;IACdgB,UAAU,EAAE;EACd,CAAC;EACDf,qBAAqB,EAAE;IACrBe,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAAA,IAAAC,QAAA,GAAAC,OAAA,CAAAxF,OAAA,GAEae,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}