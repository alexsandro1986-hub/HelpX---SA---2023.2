{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _hooks = require(\"./hooks\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\erick_ribeiro-souza\\\\Desktop\\\\s.a 2\\\\sa.ReactNative2semestre-1\\\\node_modules\\\\react-native-lightbox-v2\\\\dist\\\\LightboxOverlay.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n  WINDOW_WIDTH = _Dimensions$get.width,\n  WINDOW_HEIGHT = _Dimensions$get.height;\nvar isIOS = _reactNative.Platform.OS === \"ios\";\nvar getDefaultTarget = function getDefaultTarget() {\n  return {\n    x: 0,\n    y: 0,\n    opacity: 1\n  };\n};\nvar styles = _reactNative.StyleSheet.create({\n  background: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    height: WINDOW_HEIGHT\n  },\n  open: {\n    position: \"absolute\",\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\"\n  },\n  header: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    backgroundColor: \"transparent\"\n  },\n  closeButton: {\n    fontSize: 35,\n    color: \"white\",\n    lineHeight: 60,\n    width: 70,\n    textAlign: \"center\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 1.5,\n    shadowColor: \"black\",\n    shadowOpacity: 0.8\n  }\n});\nvar LightboxOverlay = function LightboxOverlay(_ref) {\n  var useNativeDriver = _ref.useNativeDriver,\n    dragDismissThreshold = _ref.dragDismissThreshold,\n    springConfig = _ref.springConfig,\n    isOpen = _ref.isOpen,\n    onClose = _ref.onClose,\n    willClose = _ref.willClose,\n    didOpen = _ref.didOpen,\n    swipeToDismiss = _ref.swipeToDismiss,\n    origin = _ref.origin,\n    backgroundColor = _ref.backgroundColor,\n    renderHeader = _ref.renderHeader,\n    modalProps = _ref.modalProps,\n    children = _ref.children,\n    doubleTapZoomEnabled = _ref.doubleTapZoomEnabled,\n    doubleTapGapTimer = _ref.doubleTapGapTimer,\n    doubleTapCallback = _ref.doubleTapCallback,\n    doubleTapZoomToCenter = _ref.doubleTapZoomToCenter,\n    doubleTapMaxZoom = _ref.doubleTapMaxZoom,\n    doubleTapZoomStep = _ref.doubleTapZoomStep,\n    doubleTapInitialScale = _ref.doubleTapInitialScale,\n    doubleTapAnimationDuration = _ref.doubleTapAnimationDuration,\n    longPressGapTimer = _ref.longPressGapTimer,\n    longPressCallback = _ref.longPressCallback;\n  var _panResponder = (0, _react.useRef)();\n  var pan = (0, _react.useRef)(new _reactNative.Animated.Value(0));\n  var openVal = (0, _react.useRef)(new _reactNative.Animated.Value(0));\n  var handlers = (0, _react.useRef)();\n  var _useGesture = (0, _hooks.useGesture)({\n      useNativeDriver: useNativeDriver,\n      doubleTapZoomEnabled: doubleTapZoomEnabled,\n      doubleTapGapTimer: doubleTapGapTimer,\n      doubleTapCallback: doubleTapCallback,\n      doubleTapZoomToCenter: doubleTapZoomToCenter,\n      doubleTapMaxZoom: doubleTapMaxZoom,\n      doubleTapZoomStep: doubleTapZoomStep,\n      doubleTapInitialScale: doubleTapInitialScale,\n      doubleTapAnimationDuration: doubleTapAnimationDuration,\n      longPressGapTimer: longPressGapTimer,\n      longPressCallback: longPressCallback\n    }),\n    _useGesture2 = (0, _slicedToArray2.default)(_useGesture, 2),\n    gesture = _useGesture2[0],\n    animations = _useGesture2[1];\n  var _useState = (0, _react.useState)({\n      isAnimating: false,\n      isPanning: false,\n      target: getDefaultTarget()\n    }),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    _useState2$ = _useState2[0],\n    isAnimating = _useState2$.isAnimating,\n    isPanning = _useState2$.isPanning,\n    target = _useState2$.target,\n    setState = _useState2[1];\n  var handleCloseNextTick = (0, _hooks.useNextTick)(onClose);\n  var close = function close() {\n    willClose();\n    if (isIOS) {\n      _reactNative.StatusBar.setHidden(false, \"fade\");\n    }\n    gesture.reset();\n    setState(function (s) {\n      return Object.assign({}, s, {\n        isAnimating: true\n      });\n    });\n    _reactNative.Animated.spring(openVal.current, Object.assign({\n      toValue: 0\n    }, springConfig, {\n      useNativeDriver: useNativeDriver\n    })).start(function (_ref2) {\n      var finished = _ref2.finished;\n      if (finished) {\n        setState(function (s) {\n          return Object.assign({}, s, {\n            isAnimating: false\n          });\n        });\n        handleCloseNextTick();\n      }\n    });\n  };\n  var open = function open() {\n    if (isIOS) {\n      _reactNative.StatusBar.setHidden(true, \"fade\");\n    }\n    pan.current.setValue(0);\n    setState(function (s) {\n      return Object.assign({}, s, {\n        isAnimating: true,\n        target: getDefaultTarget()\n      });\n    });\n    _reactNative.Animated.spring(openVal.current, Object.assign({\n      toValue: 1\n    }, springConfig, {\n      useNativeDriver: useNativeDriver\n    })).start(function (_ref3) {\n      var finished = _ref3.finished;\n      if (finished) {\n        setState(function (s) {\n          return Object.assign({}, s, {\n            isAnimating: false\n          });\n        });\n        didOpen();\n      }\n    });\n  };\n  var initPanResponder = function initPanResponder() {\n    _panResponder.current = _reactNative.PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return !isAnimating;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {\n        return !isAnimating;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n        return !isAnimating;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return !isAnimating;\n      },\n      onPanResponderGrant: function onPanResponderGrant(e, gestureState) {\n        gesture.init();\n        pan.current.setValue(0);\n        setState(function (s) {\n          return Object.assign({}, s, {\n            isPanning: true\n          });\n        });\n        gesture.onLongPress(e, gestureState);\n        gesture.onDoubleTap(e, gestureState);\n      },\n      onPanResponderMove: _reactNative.Animated.event([null, {\n        dy: pan.current\n      }], {\n        useNativeDriver: useNativeDriver\n      }),\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        gesture.release();\n        if (gesture.isDoubleTaped) return;\n        if (gesture.isLongPressed) return;\n        if (Math.abs(gestureState.dy) > dragDismissThreshold) {\n          setState(function (s) {\n            return Object.assign({}, s, {\n              isPanning: false,\n              target: {\n                y: gestureState.dy,\n                x: gestureState.dx,\n                opacity: 1 - Math.abs(gestureState.dy / WINDOW_HEIGHT)\n              }\n            });\n          });\n          close();\n        } else {\n          _reactNative.Animated.spring(pan.current, Object.assign({\n            toValue: 0\n          }, springConfig, {\n            useNativeDriver: useNativeDriver\n          })).start(function (_ref4) {\n            var finished = _ref4.finished;\n            finished && setState(function (s) {\n              return Object.assign({}, s, {\n                isPanning: false\n              });\n            });\n          });\n        }\n      }\n    });\n  };\n  (0, _react.useEffect)(function () {\n    initPanResponder();\n  }, [useNativeDriver, isAnimating]);\n  (0, _react.useEffect)(function () {\n    isOpen && open();\n  }, [isOpen]);\n  (0, _react.useEffect)(function () {\n    if (_panResponder.current && swipeToDismiss) {\n      handlers.current = _panResponder.current.panHandlers;\n    }\n  }, [swipeToDismiss, _panResponder.current]);\n  var lightboxOpacityStyle = {\n    opacity: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, target.opacity]\n    })\n  };\n  var dragStyle;\n  if (isPanning) {\n    dragStyle = {\n      top: pan.current\n    };\n    lightboxOpacityStyle.opacity = pan.current.interpolate({\n      inputRange: [-WINDOW_HEIGHT, 0, WINDOW_HEIGHT],\n      outputRange: [0, 1, 0]\n    });\n  }\n  var openStyle = [styles.open, {\n    left: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.x, target.x]\n    }),\n    top: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.y, target.y]\n    }),\n    width: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.width, WINDOW_WIDTH]\n    }),\n    height: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.height, WINDOW_HEIGHT]\n    })\n  }];\n  var background = (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n    style: [styles.background, {\n      backgroundColor: backgroundColor\n    }, lightboxOpacityStyle]\n  });\n  var header = (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n    style: [styles.header, lightboxOpacityStyle],\n    children: renderHeader ? renderHeader(close) : (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      onPress: close,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.closeButton,\n        children: \"\\xD7\"\n      })\n    })\n  });\n  var content = (0, _jsxRuntime.jsx)(_reactNative.Animated.View, Object.assign({\n    style: [openStyle, dragStyle, animations]\n  }, handlers.current, {\n    children: children\n  }));\n  return (0, _jsxRuntime.jsxs)(_reactNative.Modal, Object.assign({\n    visible: isOpen,\n    transparent: true,\n    onRequestClose: close\n  }, modalProps, {\n    children: [background, content, header]\n  }));\n};\nvar _default = exports.default = LightboxOverlay;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_hooks","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_Dimensions$get","Dimensions","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","isIOS","Platform","OS","getDefaultTarget","x","y","opacity","styles","StyleSheet","create","background","position","top","left","open","flex","justifyContent","backgroundColor","header","closeButton","fontSize","color","lineHeight","textAlign","shadowOffset","shadowRadius","shadowColor","shadowOpacity","LightboxOverlay","_ref","useNativeDriver","dragDismissThreshold","springConfig","isOpen","onClose","willClose","didOpen","swipeToDismiss","origin","renderHeader","modalProps","children","doubleTapZoomEnabled","doubleTapGapTimer","doubleTapCallback","doubleTapZoomToCenter","doubleTapMaxZoom","doubleTapZoomStep","doubleTapInitialScale","doubleTapAnimationDuration","longPressGapTimer","longPressCallback","_panResponder","useRef","pan","Animated","Value","openVal","handlers","_useGesture","useGesture","_useGesture2","_slicedToArray2","gesture","animations","_useState","useState","isAnimating","isPanning","target","_useState2","_useState2$","setState","handleCloseNextTick","useNextTick","close","StatusBar","setHidden","reset","s","assign","spring","current","toValue","start","_ref2","finished","setValue","_ref3","initPanResponder","PanResponder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","e","gestureState","init","onLongPress","onDoubleTap","onPanResponderMove","event","dy","onPanResponderTerminationRequest","onPanResponderRelease","evt","release","isDoubleTaped","isLongPressed","Math","abs","dx","_ref4","useEffect","panHandlers","lightboxOpacityStyle","interpolate","inputRange","outputRange","dragStyle","openStyle","jsx","View","style","TouchableOpacity","onPress","Text","content","jsxs","Modal","visible","transparent","onRequestClose","_default","exports"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/node_modules/react-native-lightbox-v2/dist/LightboxOverlay.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { Animated, Dimensions, PanResponder, Platform, StyleSheet, StatusBar, TouchableOpacity, Text, Modal, } from \"react-native\";\nimport { useGesture, useNextTick } from \"./hooks\";\nconst { width: WINDOW_WIDTH, height: WINDOW_HEIGHT } = Dimensions.get(\"window\");\nconst isIOS = Platform.OS === \"ios\";\nconst getDefaultTarget = () => ({ x: 0, y: 0, opacity: 1 });\nconst styles = StyleSheet.create({\n    background: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT,\n    },\n    open: {\n        position: \"absolute\",\n        flex: 1,\n        justifyContent: \"center\",\n        // Android pan handlers crash without this declaration:\n        backgroundColor: \"transparent\",\n    },\n    header: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: WINDOW_WIDTH,\n        backgroundColor: \"transparent\",\n    },\n    closeButton: {\n        fontSize: 35,\n        color: \"white\",\n        lineHeight: 60,\n        width: 70,\n        textAlign: \"center\",\n        shadowOffset: {\n            width: 0,\n            height: 0,\n        },\n        shadowRadius: 1.5,\n        shadowColor: \"black\",\n        shadowOpacity: 0.8,\n    },\n});\nconst LightboxOverlay = ({ useNativeDriver, dragDismissThreshold, springConfig, isOpen, onClose, willClose, didOpen, swipeToDismiss, origin, backgroundColor, renderHeader, modalProps, children, doubleTapZoomEnabled, doubleTapGapTimer, doubleTapCallback, doubleTapZoomToCenter, doubleTapMaxZoom, doubleTapZoomStep, doubleTapInitialScale, doubleTapAnimationDuration, longPressGapTimer, longPressCallback }) => {\n    const _panResponder = useRef();\n    const pan = useRef(new Animated.Value(0));\n    const openVal = useRef(new Animated.Value(0));\n    const handlers = useRef();\n    const [gesture, animations] = useGesture({\n        useNativeDriver,\n        doubleTapZoomEnabled,\n        doubleTapGapTimer,\n        doubleTapCallback,\n        doubleTapZoomToCenter,\n        doubleTapMaxZoom,\n        doubleTapZoomStep,\n        doubleTapInitialScale,\n        doubleTapAnimationDuration,\n        longPressGapTimer,\n        longPressCallback\n    });\n    const [{ isAnimating, isPanning, target }, setState] = useState({\n        isAnimating: false,\n        isPanning: false,\n        target: getDefaultTarget(),\n    });\n    const handleCloseNextTick = useNextTick(onClose);\n    const close = () => {\n        willClose();\n        if (isIOS) {\n            StatusBar.setHidden(false, \"fade\");\n        }\n        gesture.reset();\n        setState((s) => ({\n            ...s,\n            isAnimating: true,\n        }));\n        Animated.spring(openVal.current, {\n            toValue: 0,\n            ...springConfig,\n            useNativeDriver,\n        }).start(({ finished }) => {\n            if (finished) {\n                setState((s) => ({ ...s, isAnimating: false }));\n                handleCloseNextTick();\n            }\n        });\n    };\n    const open = () => {\n        if (isIOS) {\n            StatusBar.setHidden(true, \"fade\");\n        }\n        pan.current.setValue(0);\n        setState((s) => ({\n            ...s,\n            isAnimating: true,\n            target: getDefaultTarget(),\n        }));\n        Animated.spring(openVal.current, {\n            toValue: 1,\n            ...springConfig,\n            useNativeDriver,\n        }).start(({ finished }) => {\n            if (finished) {\n                setState((s) => ({ ...s, isAnimating: false }));\n                didOpen();\n            }\n        });\n    };\n    const initPanResponder = () => {\n        _panResponder.current = PanResponder.create({\n            // Ask to be the responder:\n            onStartShouldSetPanResponder: () => !isAnimating,\n            onStartShouldSetPanResponderCapture: () => !isAnimating,\n            onMoveShouldSetPanResponder: () => !isAnimating,\n            onMoveShouldSetPanResponderCapture: () => !isAnimating,\n            onPanResponderGrant: (e, gestureState) => {\n                gesture.init();\n                pan.current.setValue(0);\n                setState((s) => ({ ...s, isPanning: true }));\n                gesture.onLongPress(e, gestureState);\n                gesture.onDoubleTap(e, gestureState);\n            },\n            onPanResponderMove: Animated.event([null, { dy: pan.current }], {\n                useNativeDriver,\n            }),\n            onPanResponderTerminationRequest: () => true,\n            onPanResponderRelease: (evt, gestureState) => {\n                gesture.release();\n                if (gesture.isDoubleTaped)\n                    return;\n                if (gesture.isLongPressed)\n                    return;\n                if (Math.abs(gestureState.dy) > dragDismissThreshold) {\n                    setState((s) => ({\n                        ...s,\n                        isPanning: false,\n                        target: {\n                            y: gestureState.dy,\n                            x: gestureState.dx,\n                            opacity: 1 - Math.abs(gestureState.dy / WINDOW_HEIGHT),\n                        },\n                    }));\n                    close();\n                }\n                else {\n                    Animated.spring(pan.current, {\n                        toValue: 0,\n                        ...springConfig,\n                        useNativeDriver,\n                    }).start(({ finished }) => {\n                        finished && setState((s) => ({ ...s, isPanning: false }));\n                    });\n                }\n            },\n        });\n    };\n    useEffect(() => {\n        initPanResponder();\n    }, [useNativeDriver, isAnimating]);\n    useEffect(() => {\n        isOpen && open();\n    }, [isOpen]);\n    useEffect(() => {\n        if (_panResponder.current && swipeToDismiss) {\n            handlers.current = _panResponder.current.panHandlers;\n        }\n    }, [swipeToDismiss, _panResponder.current]);\n    const lightboxOpacityStyle = {\n        opacity: openVal.current.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, target.opacity],\n        }),\n    };\n    let dragStyle;\n    if (isPanning) {\n        dragStyle = {\n            top: pan.current,\n        };\n        lightboxOpacityStyle.opacity = pan.current.interpolate({\n            inputRange: [-WINDOW_HEIGHT, 0, WINDOW_HEIGHT],\n            outputRange: [0, 1, 0],\n        });\n    }\n    const openStyle = [\n        styles.open,\n        {\n            left: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.x, target.x],\n            }),\n            top: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.y, target.y],\n            }),\n            width: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.width, WINDOW_WIDTH],\n            }),\n            height: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.height, WINDOW_HEIGHT],\n            }),\n        },\n    ];\n    const background = (<Animated.View style={[styles.background, { backgroundColor }, lightboxOpacityStyle]}></Animated.View>);\n    const header = (<Animated.View style={[styles.header, lightboxOpacityStyle]}>\n      {renderHeader ? (renderHeader(close)) : (<TouchableOpacity onPress={close}>\n          <Text style={styles.closeButton}>×</Text>\n        </TouchableOpacity>)}\n    </Animated.View>);\n    const content = (<Animated.View style={[openStyle, dragStyle, animations]} {...handlers.current}>\n      {children}\n    </Animated.View>);\n    return (<Modal visible={isOpen} transparent={true} onRequestClose={close} {...modalProps}>\n      {background}\n      {content}\n      {header}\n    </Modal>);\n};\nexport default LightboxOverlay;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}