{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getButtonColors = void 0;\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _colors = require(\"../../styles/themes/v2/colors\");\nvar isDark = function isDark(_ref) {\n  var dark = _ref.dark,\n    backgroundColor = _ref.backgroundColor;\n  if (typeof dark === 'boolean') {\n    return dark;\n  }\n  if (backgroundColor === 'transparent') {\n    return false;\n  }\n  if (backgroundColor !== 'transparent') {\n    return !(0, _color.default)(backgroundColor).isLight();\n  }\n  return false;\n};\nvar getButtonBackgroundColor = function getButtonBackgroundColor(_ref2) {\n  var isMode = _ref2.isMode,\n    theme = _ref2.theme,\n    disabled = _ref2.disabled,\n    customButtonColor = _ref2.customButtonColor;\n  if (customButtonColor && !disabled) {\n    return customButtonColor;\n  }\n  if (theme.isV3) {\n    if (disabled) {\n      if (isMode('outlined') || isMode('text')) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n    if (isMode('elevated')) {\n      return theme.colors.elevation.level1;\n    }\n    if (isMode('contained')) {\n      return theme.colors.primary;\n    }\n    if (isMode('contained-tonal')) {\n      return theme.colors.secondaryContainer;\n    }\n  }\n  if (isMode('contained')) {\n    if (disabled) {\n      return (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();\n    }\n    return theme.colors.primary;\n  }\n  return 'transparent';\n};\nvar getButtonTextColor = function getButtonTextColor(_ref3) {\n  var isMode = _ref3.isMode,\n    theme = _ref3.theme,\n    disabled = _ref3.disabled,\n    customTextColor = _ref3.customTextColor,\n    backgroundColor = _ref3.backgroundColor,\n    dark = _ref3.dark;\n  if (customTextColor && !disabled) {\n    return customTextColor;\n  }\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (typeof dark === 'boolean') {\n      if (isMode('contained') || isMode('contained-tonal') || isMode('elevated')) {\n        return isDark({\n          dark: dark,\n          backgroundColor: backgroundColor\n        }) ? _colors.white : _colors.black;\n      }\n    }\n    if (isMode('outlined') || isMode('text') || isMode('elevated')) {\n      return theme.colors.primary;\n    }\n    if (isMode('contained')) {\n      return theme.colors.onPrimary;\n    }\n    if (isMode('contained-tonal')) {\n      return theme.colors.onSecondaryContainer;\n    }\n  }\n  if (disabled) {\n    return (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.32).rgb().string();\n  }\n  if (isMode('contained')) {\n    return isDark({\n      dark: dark,\n      backgroundColor: backgroundColor\n    }) ? _colors.white : _colors.black;\n  }\n  return theme.colors.primary;\n};\nvar getButtonBorderColor = function getButtonBorderColor(_ref4) {\n  var isMode = _ref4.isMode,\n    disabled = _ref4.disabled,\n    theme = _ref4.theme;\n  if (theme.isV3) {\n    if (disabled && isMode('outlined')) {\n      return theme.colors.surfaceDisabled;\n    }\n    if (isMode('outlined')) {\n      return theme.colors.outline;\n    }\n  }\n  if (isMode('outlined')) {\n    return (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.29).rgb().string();\n  }\n  return 'transparent';\n};\nvar getButtonBorderWidth = function getButtonBorderWidth(_ref5) {\n  var isMode = _ref5.isMode,\n    theme = _ref5.theme;\n  if (theme.isV3) {\n    if (isMode('outlined')) {\n      return 1;\n    }\n  }\n  if (isMode('outlined')) {\n    return _reactNative.StyleSheet.hairlineWidth;\n  }\n  return 0;\n};\nvar getButtonColors = exports.getButtonColors = function getButtonColors(_ref6) {\n  var theme = _ref6.theme,\n    mode = _ref6.mode,\n    customButtonColor = _ref6.customButtonColor,\n    customTextColor = _ref6.customTextColor,\n    disabled = _ref6.disabled,\n    dark = _ref6.dark;\n  var isMode = function isMode(modeToCompare) {\n    return mode === modeToCompare;\n  };\n  var backgroundColor = getButtonBackgroundColor({\n    isMode: isMode,\n    theme: theme,\n    disabled: disabled,\n    customButtonColor: customButtonColor\n  });\n  var textColor = getButtonTextColor({\n    isMode: isMode,\n    theme: theme,\n    disabled: disabled,\n    customTextColor: customTextColor,\n    backgroundColor: backgroundColor,\n    dark: dark\n  });\n  var borderColor = getButtonBorderColor({\n    isMode: isMode,\n    theme: theme,\n    disabled: disabled\n  });\n  var borderWidth = getButtonBorderWidth({\n    isMode: isMode,\n    theme: theme\n  });\n  return {\n    backgroundColor: backgroundColor,\n    borderColor: borderColor,\n    textColor: textColor,\n    borderWidth: borderWidth\n  };\n};","map":{"version":3,"names":["_reactNative","require","_color","_interopRequireDefault","_colors","isDark","_ref","dark","backgroundColor","color","isLight","getButtonBackgroundColor","_ref2","isMode","theme","disabled","customButtonColor","isV3","colors","surfaceDisabled","elevation","level1","primary","secondaryContainer","white","black","alpha","rgb","string","getButtonTextColor","_ref3","customTextColor","onSurfaceDisabled","onPrimary","onSecondaryContainer","getButtonBorderColor","_ref4","outline","getButtonBorderWidth","_ref5","StyleSheet","hairlineWidth","getButtonColors","exports","_ref6","mode","modeToCompare","textColor","borderColor","borderWidth"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\Button\\utils.tsx"],"sourcesContent":["import { StyleSheet } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\nexport type ButtonMode =\n  | 'text'\n  | 'outlined'\n  | 'contained'\n  | 'elevated'\n  | 'contained-tonal';\n\ntype BaseProps = {\n  isMode: (mode: ButtonMode) => boolean;\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\nconst isDark = ({\n  dark,\n  backgroundColor,\n}: {\n  dark?: boolean;\n  backgroundColor?: string;\n}) => {\n  if (typeof dark === 'boolean') {\n    return dark;\n  }\n\n  if (backgroundColor === 'transparent') {\n    return false;\n  }\n\n  if (backgroundColor !== 'transparent') {\n    return !color(backgroundColor).isLight();\n  }\n\n  return false;\n};\n\nconst getButtonBackgroundColor = ({\n  isMode,\n  theme,\n  disabled,\n  customButtonColor,\n}: BaseProps & {\n  customButtonColor?: string;\n}) => {\n  if (customButtonColor && !disabled) {\n    return customButtonColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isMode('outlined') || isMode('text')) {\n        return 'transparent';\n      }\n\n      return theme.colors.surfaceDisabled;\n    }\n\n    if (isMode('elevated')) {\n      return theme.colors.elevation.level1;\n    }\n\n    if (isMode('contained')) {\n      return theme.colors.primary;\n    }\n\n    if (isMode('contained-tonal')) {\n      return theme.colors.secondaryContainer;\n    }\n  }\n\n  if (isMode('contained')) {\n    if (disabled) {\n      return color(theme.dark ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n    }\n\n    return theme.colors.primary;\n  }\n\n  return 'transparent';\n};\n\nconst getButtonTextColor = ({\n  isMode,\n  theme,\n  disabled,\n  customTextColor,\n  backgroundColor,\n  dark,\n}: BaseProps & {\n  customTextColor?: string;\n  backgroundColor: string;\n  dark?: boolean;\n}) => {\n  if (customTextColor && !disabled) {\n    return customTextColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (typeof dark === 'boolean') {\n      if (\n        isMode('contained') ||\n        isMode('contained-tonal') ||\n        isMode('elevated')\n      ) {\n        return isDark({ dark, backgroundColor }) ? white : black;\n      }\n    }\n\n    if (isMode('outlined') || isMode('text') || isMode('elevated')) {\n      return theme.colors.primary;\n    }\n\n    if (isMode('contained')) {\n      return theme.colors.onPrimary;\n    }\n\n    if (isMode('contained-tonal')) {\n      return theme.colors.onSecondaryContainer;\n    }\n  }\n\n  if (disabled) {\n    return color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  }\n\n  if (isMode('contained')) {\n    return isDark({ dark, backgroundColor }) ? white : black;\n  }\n\n  return theme.colors.primary;\n};\n\nconst getButtonBorderColor = ({ isMode, disabled, theme }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled && isMode('outlined')) {\n      return theme.colors.surfaceDisabled;\n    }\n\n    if (isMode('outlined')) {\n      return theme.colors.outline;\n    }\n  }\n\n  if (isMode('outlined')) {\n    return color(theme.dark ? white : black)\n      .alpha(0.29)\n      .rgb()\n      .string();\n  }\n\n  return 'transparent';\n};\n\nconst getButtonBorderWidth = ({\n  isMode,\n  theme,\n}: Omit<BaseProps, 'disabled'>) => {\n  if (theme.isV3) {\n    if (isMode('outlined')) {\n      return 1;\n    }\n  }\n\n  if (isMode('outlined')) {\n    return StyleSheet.hairlineWidth;\n  }\n\n  return 0;\n};\n\nexport const getButtonColors = ({\n  theme,\n  mode,\n  customButtonColor,\n  customTextColor,\n  disabled,\n  dark,\n}: {\n  theme: InternalTheme;\n  mode: ButtonMode;\n  customButtonColor?: string;\n  customTextColor?: string;\n  disabled?: boolean;\n  dark?: boolean;\n}) => {\n  const isMode = (modeToCompare: ButtonMode) => {\n    return mode === modeToCompare;\n  };\n\n  const backgroundColor = getButtonBackgroundColor({\n    isMode,\n    theme,\n    disabled,\n    customButtonColor,\n  });\n\n  const textColor = getButtonTextColor({\n    isMode,\n    theme,\n    disabled,\n    customTextColor,\n    backgroundColor,\n    dark,\n  });\n\n  const borderColor = getButtonBorderColor({ isMode, theme, disabled });\n\n  const borderWidth = getButtonBorderWidth({ isMode, theme });\n\n  return {\n    backgroundColor,\n    borderColor,\n    textColor,\n    borderWidth,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}