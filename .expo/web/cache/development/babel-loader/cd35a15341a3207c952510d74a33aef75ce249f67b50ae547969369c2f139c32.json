{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\nvar _genMatrix = _interopRequireDefault(require(\"./genMatrix\"));\nvar _transformMatrixIntoPath = _interopRequireDefault(require(\"./transformMatrixIntoPath\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\erick_ribeiro-souza\\\\Desktop\\\\s.a 2\\\\sa.ReactNative2semestre-1\\\\node_modules\\\\react-native-qrcode-svg\\\\src\\\\index.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar renderLogo = function renderLogo(_ref) {\n  var size = _ref.size,\n    logo = _ref.logo,\n    logoSize = _ref.logoSize,\n    logoBackgroundColor = _ref.logoBackgroundColor,\n    logoMargin = _ref.logoMargin,\n    logoBorderRadius = _ref.logoBorderRadius;\n  var logoPosition = (size - logoSize - logoMargin * 2) / 2;\n  var logoBackgroundSize = logoSize + logoMargin * 2;\n  var logoBackgroundBorderRadius = logoBorderRadius + logoMargin / logoSize * logoBorderRadius;\n  return (0, _jsxRuntime.jsxs)(_reactNativeSvg.G, {\n    x: logoPosition,\n    y: logoPosition,\n    children: [(0, _jsxRuntime.jsxs)(_reactNativeSvg.Defs, {\n      children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.ClipPath, {\n        id: \"clip-logo-background\",\n        children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {\n          width: logoBackgroundSize,\n          height: logoBackgroundSize,\n          rx: logoBackgroundBorderRadius,\n          ry: logoBackgroundBorderRadius\n        })\n      }), (0, _jsxRuntime.jsx)(_reactNativeSvg.ClipPath, {\n        id: \"clip-logo\",\n        children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {\n          width: logoSize,\n          height: logoSize,\n          rx: logoBorderRadius,\n          ry: logoBorderRadius\n        })\n      })]\n    }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n      children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {\n        width: logoBackgroundSize,\n        height: logoBackgroundSize,\n        fill: logoBackgroundColor,\n        clipPath: \"url(#clip-logo-background)\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n      x: logoMargin,\n      y: logoMargin,\n      children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Image, {\n        width: logoSize,\n        height: logoSize,\n        preserveAspectRatio: \"xMidYMid slice\",\n        href: logo,\n        clipPath: \"url(#clip-logo)\"\n      })\n    })]\n  });\n};\nvar QRCode = function QRCode(_ref2) {\n  var _ref2$value = _ref2.value,\n    value = _ref2$value === void 0 ? 'this is a QR code' : _ref2$value,\n    _ref2$size = _ref2.size,\n    size = _ref2$size === void 0 ? 100 : _ref2$size,\n    _ref2$color = _ref2.color,\n    color = _ref2$color === void 0 ? 'black' : _ref2$color,\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? 'white' : _ref2$backgroundColor,\n    logo = _ref2.logo,\n    _ref2$logoSize = _ref2.logoSize,\n    logoSize = _ref2$logoSize === void 0 ? size * 0.2 : _ref2$logoSize,\n    _ref2$logoBackgroundC = _ref2.logoBackgroundColor,\n    logoBackgroundColor = _ref2$logoBackgroundC === void 0 ? 'transparent' : _ref2$logoBackgroundC,\n    _ref2$logoMargin = _ref2.logoMargin,\n    logoMargin = _ref2$logoMargin === void 0 ? 2 : _ref2$logoMargin,\n    _ref2$logoBorderRadiu = _ref2.logoBorderRadius,\n    logoBorderRadius = _ref2$logoBorderRadiu === void 0 ? 0 : _ref2$logoBorderRadiu,\n    _ref2$quietZone = _ref2.quietZone,\n    quietZone = _ref2$quietZone === void 0 ? 0 : _ref2$quietZone,\n    _ref2$enableLinearGra = _ref2.enableLinearGradient,\n    enableLinearGradient = _ref2$enableLinearGra === void 0 ? false : _ref2$enableLinearGra,\n    _ref2$gradientDirecti = _ref2.gradientDirection,\n    gradientDirection = _ref2$gradientDirecti === void 0 ? ['0%', '0%', '100%', '100%'] : _ref2$gradientDirecti,\n    _ref2$linearGradient = _ref2.linearGradient,\n    linearGradient = _ref2$linearGradient === void 0 ? ['rgb(255,0,0)', 'rgb(0,255,255)'] : _ref2$linearGradient,\n    _ref2$ecl = _ref2.ecl,\n    ecl = _ref2$ecl === void 0 ? 'M' : _ref2$ecl,\n    getRef = _ref2.getRef,\n    onError = _ref2.onError;\n  var result = (0, _react.useMemo)(function () {\n    try {\n      return (0, _transformMatrixIntoPath.default)((0, _genMatrix.default)(value, ecl), size);\n    } catch (error) {\n      if (onError && typeof onError === 'function') {\n        onError(error);\n      } else {\n        throw error;\n      }\n    }\n  }, [value, size, ecl]);\n  if (!result) {\n    return null;\n  }\n  var path = result.path,\n    cellSize = result.cellSize;\n  return (0, _jsxRuntime.jsxs)(_reactNativeSvg.default, {\n    ref: getRef,\n    viewBox: [-quietZone, -quietZone, size + quietZone * 2, size + quietZone * 2].join(' '),\n    width: size,\n    height: size,\n    children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.Defs, {\n      children: (0, _jsxRuntime.jsxs)(_reactNativeSvg.LinearGradient, {\n        id: \"grad\",\n        x1: gradientDirection[0],\n        y1: gradientDirection[1],\n        x2: gradientDirection[2],\n        y2: gradientDirection[3],\n        children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n          offset: \"0\",\n          stopColor: linearGradient[0],\n          stopOpacity: \"1\"\n        }), (0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n          offset: \"1\",\n          stopColor: linearGradient[1],\n          stopOpacity: \"1\"\n        })]\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n      children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {\n        x: -quietZone,\n        y: -quietZone,\n        width: size + quietZone * 2,\n        height: size + quietZone * 2,\n        fill: backgroundColor\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n      children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Path, {\n        d: path,\n        strokeLinecap: \"butt\",\n        stroke: enableLinearGradient ? 'url(#grad)' : color,\n        strokeWidth: cellSize\n      })\n    }), logo && renderLogo({\n      size: size,\n      logo: logo,\n      logoSize: logoSize,\n      logoBackgroundColor: logoBackgroundColor,\n      logoMargin: logoMargin,\n      logoBorderRadius: logoBorderRadius\n    })]\n  });\n};\nvar _default = exports.default = QRCode;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNativeSvg","_genMatrix","_interopRequireDefault","_transformMatrixIntoPath","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","renderLogo","_ref","size","logo","logoSize","logoBackgroundColor","logoMargin","logoBorderRadius","logoPosition","logoBackgroundSize","logoBackgroundBorderRadius","jsxs","G","x","y","children","Defs","jsx","ClipPath","id","Rect","width","height","rx","ry","fill","clipPath","Image","preserveAspectRatio","href","QRCode","_ref2","_ref2$value","value","_ref2$size","_ref2$color","color","_ref2$backgroundColor","backgroundColor","_ref2$logoSize","_ref2$logoBackgroundC","_ref2$logoMargin","_ref2$logoBorderRadiu","_ref2$quietZone","quietZone","_ref2$enableLinearGra","enableLinearGradient","_ref2$gradientDirecti","gradientDirection","_ref2$linearGradient","linearGradient","_ref2$ecl","ecl","getRef","onError","result","useMemo","transformMatrixIntoPath","genMatrix","error","path","cellSize","ref","viewBox","join","LinearGradient","x1","y1","x2","y2","Stop","offset","stopColor","stopOpacity","Path","d","strokeLinecap","stroke","strokeWidth","_default","exports"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/node_modules/react-native-qrcode-svg/src/index.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport Svg, {\n  Defs,\n  G,\n  Path,\n  Rect,\n  Image,\n  ClipPath,\n  LinearGradient,\n  Stop\n} from 'react-native-svg'\nimport genMatrix from './genMatrix'\nimport transformMatrixIntoPath from './transformMatrixIntoPath'\n\nconst renderLogo = ({\n  size,\n  logo,\n  logoSize,\n  logoBackgroundColor,\n  logoMargin,\n  logoBorderRadius\n}) => {\n  const logoPosition = (size - logoSize - logoMargin * 2) / 2\n  const logoBackgroundSize = logoSize + logoMargin * 2\n  const logoBackgroundBorderRadius =\n    logoBorderRadius + (logoMargin / logoSize) * logoBorderRadius\n\n  return (\n    <G x={logoPosition} y={logoPosition}>\n      <Defs>\n        <ClipPath id='clip-logo-background'>\n          <Rect\n            width={logoBackgroundSize}\n            height={logoBackgroundSize}\n            rx={logoBackgroundBorderRadius}\n            ry={logoBackgroundBorderRadius}\n          />\n        </ClipPath>\n        <ClipPath id='clip-logo'>\n          <Rect\n            width={logoSize}\n            height={logoSize}\n            rx={logoBorderRadius}\n            ry={logoBorderRadius}\n          />\n        </ClipPath>\n      </Defs>\n      <G>\n        <Rect\n          width={logoBackgroundSize}\n          height={logoBackgroundSize}\n          fill={logoBackgroundColor}\n          clipPath='url(#clip-logo-background)'\n        />\n      </G>\n      <G x={logoMargin} y={logoMargin}>\n        <Image\n          width={logoSize}\n          height={logoSize}\n          preserveAspectRatio='xMidYMid slice'\n          href={logo}\n          clipPath='url(#clip-logo)'\n        />\n      </G>\n    </G>\n  )\n}\n\nconst QRCode = ({\n  value = 'this is a QR code',\n  size = 100,\n  color = 'black',\n  backgroundColor = 'white',\n  logo,\n  logoSize = size * 0.2,\n  logoBackgroundColor = 'transparent',\n  logoMargin = 2,\n  logoBorderRadius = 0,\n  quietZone = 0,\n  enableLinearGradient = false,\n  gradientDirection = ['0%', '0%', '100%', '100%'],\n  linearGradient = ['rgb(255,0,0)', 'rgb(0,255,255)'],\n  ecl = 'M',\n  getRef,\n  onError\n}) => {\n  const result = useMemo(() => {\n    try {\n      return transformMatrixIntoPath(genMatrix(value, ecl), size)\n    } catch (error) {\n      if (onError && typeof onError === 'function') {\n        onError(error)\n      } else {\n        // Pass the error when no handler presented\n        throw error\n      }\n    }\n  }, [value, size, ecl])\n\n  if (!result) {\n    return null\n  }\n\n  const { path, cellSize } = result\n\n  return (\n    <Svg\n      ref={getRef}\n      viewBox={[\n        -quietZone,\n        -quietZone,\n        size + quietZone * 2,\n        size + quietZone * 2\n      ].join(' ')}\n      width={size}\n      height={size}\n    >\n      <Defs>\n        <LinearGradient\n          id='grad'\n          x1={gradientDirection[0]}\n          y1={gradientDirection[1]}\n          x2={gradientDirection[2]}\n          y2={gradientDirection[3]}\n        >\n          <Stop offset='0' stopColor={linearGradient[0]} stopOpacity='1' />\n          <Stop offset='1' stopColor={linearGradient[1]} stopOpacity='1' />\n        </LinearGradient>\n      </Defs>\n      <G>\n        <Rect\n          x={-quietZone}\n          y={-quietZone}\n          width={size + quietZone * 2}\n          height={size + quietZone * 2}\n          fill={backgroundColor}\n        />\n      </G>\n      <G>\n        <Path\n          d={path}\n          strokeLinecap='butt'\n          stroke={enableLinearGradient ? 'url(#grad)' : color}\n          strokeWidth={cellSize}\n        />\n      </G>\n      {logo &&\n        renderLogo({\n          size,\n          logo,\n          logoSize,\n          logoBackgroundColor,\n          logoMargin,\n          logoBorderRadius\n        })}\n    </Svg>\n  )\n}\n\nexport default QRCode\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}