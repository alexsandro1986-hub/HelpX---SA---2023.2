{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport LinearGradient from 'react-native-linear-gradient';\nimport Svg, { Defs, Rect } from 'react-native-svg';\nimport { BarDefaults } from \"../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nif (Platform.OS === 'android') {\n  UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n}\nvar RenderStackBars = function RenderStackBars(props) {\n  var _ref3, _item$leftShiftForToo;\n  var barBackgroundPattern = props.barBackgroundPattern,\n    patternId = props.patternId,\n    item = props.item,\n    index = props.index,\n    containerHeight = props.containerHeight,\n    maxValue = props.maxValue,\n    spacing = props.spacing,\n    propSpacing = props.propSpacing,\n    rotateLabel = props.rotateLabel,\n    xAxisThickness = props.xAxisThickness,\n    label = props.label,\n    labelTextStyle = props.labelTextStyle,\n    xAxisTextNumberOfLines = props.xAxisTextNumberOfLines,\n    renderTooltip = props.renderTooltip,\n    leftShiftForTooltip = props.leftShiftForTooltip,\n    leftShiftForLastIndexTooltip = props.leftShiftForLastIndexTooltip,\n    initialSpacing = props.initialSpacing,\n    selectedIndex = props.selectedIndex,\n    setSelectedIndex = props.setSelectedIndex,\n    activeOpacity = props.activeOpacity,\n    stackData = props.stackData,\n    isAnimated = props.isAnimated,\n    _props$animationDurat = props.animationDuration,\n    animationDuration = _props$animationDurat === void 0 ? BarDefaults.animationDuration : _props$animationDurat;\n  var cotainsNegative = item.stacks.some(function (item) {\n    return item.value < 0;\n  });\n  var noAnimation = cotainsNegative || !isAnimated;\n  var leftSpacing = initialSpacing;\n  for (var i = 0; i < index; i++) {\n    var _ref, _stackData$i$spacing, _ref2, _stackData$i$stacks$;\n    leftSpacing += ((_ref = (_stackData$i$spacing = stackData[i].spacing) != null ? _stackData$i$spacing : propSpacing) != null ? _ref : 0) + ((_ref2 = (_stackData$i$stacks$ = stackData[i].stacks[0].barWidth) != null ? _stackData$i$stacks$ : props.barWidth) != null ? _ref2 : 30);\n  }\n  var disablePress = props.disablePress || false;\n  var renderLabel = function renderLabel(label, labelTextStyle) {\n    return _jsx(View, {\n      style: [{\n        width: (item.stacks[0].barWidth || props.barWidth || 30) + spacing / 2,\n        position: 'absolute',\n        bottom: rotateLabel ? -40 : -25\n      }, rotateLabel ? props.horizontal ? {\n        transform: [{\n          rotate: '330deg'\n        }]\n      } : {\n        transform: [{\n          rotate: '60deg'\n        }]\n      } : props.horizontal ? {\n        transform: [{\n          rotate: '-90deg'\n        }]\n      } : {}],\n      children: item.labelComponent ? item.labelComponent() : _jsx(Text, {\n        style: [labelTextStyle],\n        numberOfLines: xAxisTextNumberOfLines,\n        children: label || ''\n      })\n    });\n  };\n  var getPosition = function getPosition(index) {\n    var position = 0;\n    for (var _i = 0; _i < index; _i++) {\n      position += Math.abs(props.item.stacks[_i].value) * (containerHeight || 200) / (maxValue || 200);\n    }\n    return position;\n  };\n  var totalHeight = props.item.stacks.reduce(function (acc, stack) {\n    return acc + Math.abs(stack.value) * (containerHeight || 200) / (maxValue || 200);\n  }, 0);\n  var _useState = useState(noAnimation ? totalHeight : 1),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  useEffect(function () {\n    if (!noAnimation) {\n      layoutAppear();\n    }\n  }, [totalHeight]);\n  var elevate = function elevate() {\n    LayoutAnimation.configureNext({\n      duration: animationDuration,\n      update: {\n        type: 'linear',\n        property: 'scaleXY'\n      }\n    });\n    setHeight(totalHeight);\n  };\n  var layoutAppear = function layoutAppear() {\n    LayoutAnimation.configureNext({\n      duration: Platform.OS == 'ios' ? animationDuration : 20,\n      create: {\n        type: 'linear',\n        property: 'opacity'\n      },\n      update: {\n        type: 'linear',\n        property: 'scaleXY'\n      }\n    });\n    setTimeout(function () {\n      return elevate();\n    }, Platform.OS == 'ios' ? 10 : 100);\n  };\n  var barWrapper = function barWrapper() {\n    return noAnimation ? static2DSimple() : _jsx(View, {\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        height: height,\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: static2DSimple()\n    });\n  };\n  var static2DSimple = function static2DSimple() {\n    return _jsxs(_Fragment, {\n      children: [_jsxs(TouchableOpacity, {\n        disabled: disablePress,\n        activeOpacity: activeOpacity,\n        onPress: function onPress() {\n          setSelectedIndex(index);\n          if (item.onPress) {\n            item.onPress();\n          } else if (props.onPress) {\n            props.onPress(item, index);\n          }\n        },\n        style: [{\n          position: 'absolute',\n          width: item.stacks[0].barWidth || props.barWidth || 30,\n          height: '100%'\n        }, cotainsNegative && {\n          transform: [{\n            translateY: totalHeight + xAxisThickness / 2\n          }, {\n            rotate: '180deg'\n          }]\n        }],\n        children: [item.stacks.map(function (stackItem, index) {\n          return _jsxs(TouchableOpacity, {\n            onPress: stackItem.onPress,\n            activeOpacity: activeOpacity,\n            disabled: disablePress || !stackItem.onPress,\n            style: [{\n              position: 'absolute',\n              bottom: getPosition(index) + (stackItem.marginBottom || 0),\n              width: '100%',\n              height: Math.abs(stackItem.value) * (containerHeight || 200) / (maxValue || 200) - (stackItem.marginBottom || 0),\n              backgroundColor: stackItem.color || item.color || props.color || 'black',\n              borderRadius: stackItem.barBorderRadius || props.barBorderRadius || 0\n            }, !props.barBorderRadius && !stackItem.barBorderRadius && {\n              borderTopLeftRadius: stackItem.borderTopLeftRadius || 0,\n              borderTopRightRadius: stackItem.borderTopRightRadius || 0,\n              borderBottomLeftRadius: stackItem.borderBottomLeftRadius || 0,\n              borderBottomRightRadius: stackItem.borderBottomRightRadius || 0\n            }],\n            children: [stackItem.showGradient || item.showGradient || props.showGradient ? _jsx(LinearGradient, {\n              style: [{\n                position: 'absolute',\n                width: '100%',\n                height: '100%',\n                borderRadius: stackItem.barBorderRadius || item.barBorderRadius || props.barBorderRadius || 0\n              }],\n              start: {\n                x: 0,\n                y: 0\n              },\n              end: {\n                x: 0,\n                y: 1\n              },\n              colors: [stackItem.gradientColor || item.gradientColor || props.gradientColor || 'white', stackItem.color || item.color || props.color || 'black']\n            }) : null, stackItem.innerBarComponent && stackItem.innerBarComponent()]\n          }, index);\n        }), (item.barBackgroundPattern || barBackgroundPattern) && _jsxs(Svg, {\n          children: [_jsx(Defs, {\n            children: item.barBackgroundPattern ? item.barBackgroundPattern() : barBackgroundPattern == null ? void 0 : barBackgroundPattern()\n          }), _jsx(Rect, {\n            stroke: \"transparent\",\n            x: \"1\",\n            y: \"1\",\n            width: \"100%\",\n            height: \"100%\",\n            fill: \"url(#\" + (item.patternId || patternId) + \")\"\n          })]\n        })]\n      }), item.topLabelComponent && _jsx(View, {\n        style: [{\n          position: 'absolute',\n          top: cotainsNegative ? 0 : (item.barWidth || props.barWidth || 30) * -1,\n          height: item.barWidth || props.barWidth || 30,\n          width: item.barWidth || props.barWidth || 30,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }, cotainsNegative && {\n          transform: [{\n            translateY: totalHeight * 2\n          }]\n        }, props.horizontal && !props.intactTopLabel && {\n          transform: [{\n            rotate: '270deg'\n          }]\n        }, item.topLabelContainerStyle],\n        children: item.topLabelComponent()\n      })]\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: [{\n        marginBottom: 60,\n        width: item.stacks[0].barWidth || props.barWidth || 30,\n        height: totalHeight,\n        marginRight: spacing\n      }],\n      children: [(props.showXAxisIndices || item.showXAxisIndex) && _jsx(View, {\n        style: {\n          zIndex: 2,\n          position: 'absolute',\n          height: props.xAxisIndicesHeight,\n          width: props.xAxisIndicesWidth,\n          bottom: props.xAxisIndicesHeight / -2,\n          left: ((item.barWidth || props.barWidth || 30) - props.xAxisIndicesWidth) / 2,\n          backgroundColor: props.xAxisIndicesColor\n        }\n      }), barWrapper(), renderLabel(label || '', labelTextStyle)]\n    }), renderTooltip && selectedIndex === index && _jsx(View, {\n      style: {\n        position: 'absolute',\n        bottom: totalHeight + 60,\n        left: index === stackData.length - 1 ? leftSpacing - leftShiftForLastIndexTooltip : leftSpacing - ((_ref3 = (_item$leftShiftForToo = item.leftShiftForTooltip) != null ? _item$leftShiftForToo : leftShiftForTooltip) != null ? _ref3 : 0),\n        zIndex: 1000\n      },\n      children: renderTooltip(item, index)\n    })]\n  });\n};\nexport default RenderStackBars;","map":{"version":3,"names":["React","useEffect","useState","View","TouchableOpacity","Text","LayoutAnimation","Platform","UIManager","LinearGradient","Svg","Defs","Rect","BarDefaults","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OS","setLayoutAnimationEnabledExperimental","RenderStackBars","props","_ref3","_item$leftShiftForToo","barBackgroundPattern","patternId","item","index","containerHeight","maxValue","spacing","propSpacing","rotateLabel","xAxisThickness","label","labelTextStyle","xAxisTextNumberOfLines","renderTooltip","leftShiftForTooltip","leftShiftForLastIndexTooltip","initialSpacing","selectedIndex","setSelectedIndex","activeOpacity","stackData","isAnimated","_props$animationDurat","animationDuration","cotainsNegative","stacks","some","value","noAnimation","leftSpacing","i","_ref","_stackData$i$spacing","_ref2","_stackData$i$stacks$","barWidth","disablePress","renderLabel","style","width","position","bottom","horizontal","transform","rotate","children","labelComponent","numberOfLines","getPosition","Math","abs","totalHeight","reduce","acc","stack","_useState","_useState2","_slicedToArray","height","setHeight","layoutAppear","elevate","configureNext","duration","update","type","property","create","setTimeout","barWrapper","static2DSimple","overflow","disabled","onPress","translateY","map","stackItem","marginBottom","backgroundColor","color","borderRadius","barBorderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","showGradient","start","x","y","end","colors","gradientColor","innerBarComponent","stroke","fill","topLabelComponent","top","justifyContent","alignItems","intactTopLabel","topLabelContainerStyle","marginRight","showXAxisIndices","showXAxisIndex","zIndex","xAxisIndicesHeight","xAxisIndicesWidth","left","xAxisIndicesColor","length"],"sources":["C:/Users/gisele_anjos/Documents/sa.ReactNative2semestre/node_modules/react-native-gifted-charts/src/BarChart/RenderStackBars.tsx"],"sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  ColorValue,\n  GestureResponderEvent,\n  LayoutAnimation,\n  Platform,\n  UIManager,\n} from 'react-native';\nimport LinearGradient from 'react-native-linear-gradient';\nimport Svg, {Defs, Rect} from 'react-native-svg';\nimport {BarDefaults} from '../utils/constants';\n\nif (Platform.OS === 'android') {\n  UIManager.setLayoutAnimationEnabledExperimental &&\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\ntype Props = {\n  style?: any;\n  width?: number;\n  height?: number;\n  color?: ColorValue;\n  topLabelComponent?: Component;\n  topLabelContainerStyle?: any;\n  opacity?: number;\n  label: String;\n  labelTextStyle?: any;\n  disablePress?: boolean;\n\n  item: stackItemType;\n  index: number;\n  containerHeight?: number;\n  maxValue: number;\n  spacing: number;\n  propSpacing?: number;\n  data?: any;\n  barWidth?: number;\n  onPress?: Function;\n\n  rotateLabel?: boolean;\n  showXAxisIndices: boolean;\n  xAxisIndicesHeight: number;\n  xAxisIndicesWidth: number;\n  xAxisIndicesColor: ColorValue;\n  horizontal: boolean;\n  intactTopLabel: boolean;\n  barBorderRadius?: number;\n  xAxisThickness: number;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n  xAxisTextNumberOfLines: number;\n  renderTooltip: Function | undefined;\n  leftShiftForTooltip?: number;\n  leftShiftForLastIndexTooltip: number;\n  initialSpacing: number;\n  selectedIndex: number;\n  setSelectedIndex: Function;\n  activeOpacity: number;\n  showGradient?: boolean;\n  gradientColor?: any;\n  stackData: Array<stackItemType>;\n  isAnimated?: boolean;\n  animationDuration?: number;\n};\nexport type stackItemType = {\n  onPress?: any;\n  label?: String;\n  barWidth?: number;\n  spacing?: number;\n  labelTextStyle?: any;\n  topLabelComponent?: Function;\n  topLabelContainerStyle?: any;\n  disablePress?: any;\n  color?: ColorValue;\n  showGradient?: boolean;\n  gradientColor?: any;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n  labelComponent?: Function;\n  borderRadius?: number;\n  stacks: Array<{\n    value: number;\n    color?: ColorValue;\n    onPress?: (event: GestureResponderEvent) => void;\n    marginBottom?: number;\n    barBorderRadius?: number;\n    borderTopLeftRadius?: number;\n    borderTopRightRadius?: number;\n    borderBottomLeftRadius?: number;\n    borderBottomRightRadius?: number;\n    showGradient?: boolean;\n    gradientColor?: ColorValue;\n    barWidth?: number;\n    innerBarComponent?: Function;\n  }>;\n  barBackgroundPattern?: Function;\n  barBorderRadius?: number;\n  patternId?: String;\n  leftShiftForTooltip?: number;\n  showXAxisIndex?: boolean;\n};\nconst RenderStackBars = (props: Props) => {\n  const {\n    barBackgroundPattern,\n    patternId,\n    item,\n    index,\n    containerHeight,\n    maxValue,\n    spacing,\n    propSpacing,\n    rotateLabel,\n    xAxisThickness,\n    label,\n    labelTextStyle,\n    xAxisTextNumberOfLines,\n    renderTooltip,\n    leftShiftForTooltip,\n    leftShiftForLastIndexTooltip,\n    initialSpacing,\n    selectedIndex,\n    setSelectedIndex,\n    activeOpacity,\n    stackData,\n    isAnimated,\n    animationDuration = BarDefaults.animationDuration,\n  } = props;\n  const cotainsNegative = item.stacks.some(item => item.value < 0);\n  const noAnimation = cotainsNegative || !isAnimated;\n\n  let leftSpacing = initialSpacing;\n  for (let i = 0; i < index; i++) {\n    leftSpacing +=\n      (stackData[i].spacing ?? propSpacing ?? 0) +\n      (stackData[i].stacks[0].barWidth ?? props.barWidth ?? 30);\n  }\n  const disablePress = props.disablePress || false;\n  const renderLabel = (label: String, labelTextStyle: any) => {\n    return (\n      <View\n        style={[\n          {\n            width:\n              (item.stacks[0].barWidth || props.barWidth || 30) + spacing / 2,\n            position: 'absolute',\n            bottom: rotateLabel ? -40 : -25,\n          },\n          rotateLabel\n            ? props.horizontal\n              ? {transform: [{rotate: '330deg'}]}\n              : {transform: [{rotate: '60deg'}]}\n            : props.horizontal\n            ? {transform: [{rotate: '-90deg'}]}\n            : {},\n        ]}>\n        {item.labelComponent ? (\n          item.labelComponent()\n        ) : (\n          <Text style={[labelTextStyle]} numberOfLines={xAxisTextNumberOfLines}>\n            {label || ''}\n          </Text>\n        )}\n      </View>\n    );\n  };\n\n  const getPosition = (index: number) => {\n    let position = 0;\n    for (let i = 0; i < index; i++) {\n      position +=\n        (Math.abs(props.item.stacks[i].value) * (containerHeight || 200)) /\n        (maxValue || 200);\n    }\n    return position;\n  };\n\n  const totalHeight = props.item.stacks.reduce(\n    (acc, stack) =>\n      acc +\n      (Math.abs(stack.value) * (containerHeight || 200)) / (maxValue || 200),\n    0,\n  );\n\n  const [height, setHeight] = useState(noAnimation ? totalHeight : 1);\n\n  useEffect(() => {\n    if (!noAnimation) {\n      layoutAppear();\n    }\n  }, [totalHeight]);\n\n  const elevate = () => {\n    LayoutAnimation.configureNext({\n      duration: animationDuration,\n      update: {type: 'linear', property: 'scaleXY'},\n    });\n    setHeight(totalHeight);\n  };\n\n  const layoutAppear = () => {\n    LayoutAnimation.configureNext({\n      duration: Platform.OS == 'ios' ? animationDuration : 20,\n      create: {type: 'linear', property: 'opacity'},\n      update: {type: 'linear', property: 'scaleXY'},\n    });\n    setTimeout(() => elevate(), Platform.OS == 'ios' ? 10 : 100);\n  };\n\n  const barWrapper = () => {\n    return noAnimation ? (\n      static2DSimple()\n    ) : (\n      <View\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          height: height,\n          width: '100%',\n          overflow: 'hidden',\n        }}>\n        {static2DSimple()}\n      </View>\n    );\n  };\n\n  const static2DSimple = () => {\n    return (\n      <>\n        <TouchableOpacity\n          disabled={disablePress}\n          activeOpacity={activeOpacity}\n          onPress={() => {\n            setSelectedIndex(index);\n            if (item.onPress) {\n              item.onPress();\n            } else if (props.onPress) {\n              props.onPress(item, index);\n            }\n          }}\n          style={[\n            {\n              position: 'absolute',\n              width: item.stacks[0].barWidth || props.barWidth || 30,\n              height: '100%',\n            },\n            cotainsNegative && {\n              transform: [\n                {translateY: totalHeight + xAxisThickness / 2},\n                {rotate: '180deg'},\n              ],\n            },\n          ]}>\n          {item.stacks.map((stackItem, index) => {\n            return (\n              <TouchableOpacity\n                key={index}\n                onPress={stackItem.onPress}\n                activeOpacity={activeOpacity}\n                disabled={disablePress || !stackItem.onPress}\n                style={[\n                  {\n                    position: 'absolute',\n                    bottom: getPosition(index) + (stackItem.marginBottom || 0),\n                    width: '100%',\n                    height:\n                      (Math.abs(stackItem.value) * (containerHeight || 200)) /\n                        (maxValue || 200) -\n                      (stackItem.marginBottom || 0),\n                    backgroundColor:\n                      stackItem.color || item.color || props.color || 'black',\n                    borderRadius:\n                      stackItem.barBorderRadius || props.barBorderRadius || 0,\n                  },\n                  !props.barBorderRadius &&\n                    !stackItem.barBorderRadius && {\n                      borderTopLeftRadius: stackItem.borderTopLeftRadius || 0,\n                      borderTopRightRadius: stackItem.borderTopRightRadius || 0,\n                      borderBottomLeftRadius:\n                        stackItem.borderBottomLeftRadius || 0,\n                      borderBottomRightRadius:\n                        stackItem.borderBottomRightRadius || 0,\n                    },\n                ]}>\n                {stackItem.showGradient ||\n                item.showGradient ||\n                props.showGradient ? (\n                  <LinearGradient\n                    style={[\n                      {\n                        position: 'absolute',\n                        width: '100%',\n                        height: '100%',\n                        borderRadius:\n                          stackItem.barBorderRadius ||\n                          item.barBorderRadius ||\n                          props.barBorderRadius ||\n                          0,\n                      },\n                    ]}\n                    start={{x: 0, y: 0}}\n                    end={{x: 0, y: 1}}\n                    colors={[\n                      stackItem.gradientColor ||\n                        item.gradientColor ||\n                        props.gradientColor ||\n                        'white',\n                      stackItem.color || item.color || props.color || 'black',\n                    ]}\n                  />\n                ) : null}\n                {stackItem.innerBarComponent && stackItem.innerBarComponent()}\n              </TouchableOpacity>\n            );\n          })}\n          {(item.barBackgroundPattern || barBackgroundPattern) && (\n            <Svg>\n              <Defs>\n                {item.barBackgroundPattern\n                  ? item.barBackgroundPattern()\n                  : barBackgroundPattern?.()}\n              </Defs>\n              <Rect\n                stroke=\"transparent\"\n                x=\"1\"\n                y=\"1\"\n                width=\"100%\"\n                height=\"100%\"\n                fill={`url(#${item.patternId || patternId})`}\n              />\n            </Svg>\n          )}\n        </TouchableOpacity>\n        {item.topLabelComponent && (\n          <View\n            style={[\n              {\n                position: 'absolute',\n                top: cotainsNegative\n                  ? 0\n                  : (item.barWidth || props.barWidth || 30) * -1,\n                height: item.barWidth || props.barWidth || 30,\n                width: item.barWidth || props.barWidth || 30,\n                justifyContent: 'center',\n                alignItems: 'center',\n              },\n              cotainsNegative && {transform: [{translateY: totalHeight * 2}]},\n              props.horizontal &&\n                !props.intactTopLabel && {transform: [{rotate: '270deg'}]},\n              item.topLabelContainerStyle,\n            ]}>\n            {item.topLabelComponent()}\n          </View>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <View\n        style={[\n          {\n            // overflow: 'visible',\n            marginBottom: 60,\n            width: item.stacks[0].barWidth || props.barWidth || 30,\n            height: totalHeight,\n            marginRight: spacing,\n          },\n        ]}>\n        {/* {props.showVerticalLines && (\n          <View\n            style={{\n              zIndex: props.verticalLinesZIndex,\n              position: 'absolute',\n              height: (containerHeight || 200) + 15,\n              width: props.verticalLinesThickness,\n              bottom: 0,\n              left: (item.barWidth || props.barWidth || 30) / 2,\n              backgroundColor: props.verticalLinesColor,\n            }}\n          />\n        )} */}\n        {(props.showXAxisIndices || item.showXAxisIndex) && (\n          <View\n            style={{\n              zIndex: 2,\n              position: 'absolute',\n              height: props.xAxisIndicesHeight,\n              width: props.xAxisIndicesWidth,\n              bottom: props.xAxisIndicesHeight / -2,\n              left:\n                ((item.barWidth || props.barWidth || 30) -\n                  props.xAxisIndicesWidth) /\n                2,\n              backgroundColor: props.xAxisIndicesColor,\n            }}\n          />\n        )}\n        {barWrapper()}\n        {renderLabel(label || '', labelTextStyle)}\n      </View>\n      {renderTooltip && selectedIndex === index && (\n        <View\n          style={{\n            position: 'absolute',\n            bottom: totalHeight + 60,\n            left:\n              index === stackData.length - 1\n                ? leftSpacing - leftShiftForLastIndexTooltip\n                : leftSpacing -\n                  (item.leftShiftForTooltip ?? leftShiftForTooltip ?? 0),\n            zIndex: 1000,\n          }}>\n          {renderTooltip(item, index)}\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default RenderStackBars;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}