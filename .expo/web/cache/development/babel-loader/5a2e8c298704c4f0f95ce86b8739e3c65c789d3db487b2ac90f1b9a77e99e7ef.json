{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { collection, addDoc, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport { database } from \"../Config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Chat() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var route = useRoute();\n  var name = route.params.name;\n  useEffect(function () {\n    var unsubscribe = onSnapshot(query(collection(database, \"chats\"), orderBy(\"createdAt\", \"desc\")), function (snapshot) {\n      var updatedMessages = snapshot.docs.map(function (doc) {\n        return {\n          _id: doc.id,\n          createdAt: doc.data().createdAt.toDate(),\n          text: doc.data().text,\n          user: doc.data().user\n        };\n      });\n      setMessages(updatedMessages);\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n  var mensagemEnviada = useCallback(function () {\n    var newMessages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var updatedMessages = [].concat(_toConsumableArray(messages), _toConsumableArray(newMessages));\n    setMessages(updatedMessages);\n    var lastMessage = newMessages[newMessages.length - 1];\n    addDoc(collection(database, \"chats\"), {\n      _id: lastMessage._id,\n      createdAt: lastMessage.createdAt,\n      text: lastMessage.text,\n      user: lastMessage.user\n    });\n  }, [messages]);\n  return _jsx(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(newMessages) {\n      return mensagemEnviada(newMessages);\n    },\n    user: {\n      _id: name\n    }\n  });\n}","map":{"version":3,"names":["useRoute","GiftedChat","useCallback","useEffect","useState","collection","addDoc","onSnapshot","query","orderBy","database","jsx","_jsx","Chat","_useState","_useState2","_slicedToArray","messages","setMessages","route","name","params","unsubscribe","snapshot","updatedMessages","docs","map","doc","_id","id","createdAt","data","toDate","text","user","mensagemEnviada","newMessages","arguments","length","undefined","concat","_toConsumableArray","lastMessage","onSend"],"sources":["C:/Users/andrey_lopes/Documents/sa.ReactNative2semestre/src/pages/Chat/index.js"],"sourcesContent":["import { useRoute } from \"@react-navigation/native\";\r\nimport { GiftedChat } from \"react-native-gifted-chat\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { collection, addDoc, onSnapshot, query, orderBy } from \"firebase/firestore\";\r\nimport { database } from \"../Config/firebase\";\r\n\r\nexport default function Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const route = useRoute();\r\n  const { name } = route.params;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(\r\n      query(collection(database, \"chats\"), orderBy(\"createdAt\", \"desc\")),\r\n      (snapshot) => {\r\n        const updatedMessages = snapshot.docs.map((doc) => ({\r\n          _id: doc.id,\r\n          createdAt: doc.data().createdAt.toDate(),\r\n          text: doc.data().text,\r\n          user: doc.data().user,\r\n        }));\r\n        setMessages(updatedMessages);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      // Cleanup the listener when component unmounts\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const mensagemEnviada = useCallback(\r\n    (newMessages = []) => {\r\n      // Adiciona as novas mensagens ao estado atual\r\n      const updatedMessages = [...messages, ...newMessages];\r\n      setMessages(updatedMessages);\r\n\r\n      // Envia a Ãºltima mensagem enviada para o Firebase\r\n      const lastMessage = newMessages[newMessages.length - 1];\r\n      addDoc(collection(database, \"chats\"), {\r\n        _id: lastMessage._id,\r\n        createdAt: lastMessage.createdAt,\r\n        text: lastMessage.text,\r\n        user: lastMessage.user,\r\n      });\r\n    },\r\n    [messages]\r\n  );\r\n\r\n  return (\r\n    <GiftedChat\r\n      messages={messages}\r\n      onSend={(newMessages) => mensagemEnviada(newMessages)}\r\n      user={{\r\n        _id: name,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,UAAU,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AACnF,SAASC,QAAQ;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAE9C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC7B,IAAAC,SAAA,GAAgCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAMI,KAAK,GAAGnB,QAAQ,CAAC,CAAC;EACxB,IAAQoB,IAAI,GAAKD,KAAK,CAACE,MAAM,CAArBD,IAAI;EAEZjB,SAAS,CAAC,YAAM;IACd,IAAMmB,WAAW,GAAGf,UAAU,CAC5BC,KAAK,CAACH,UAAU,CAACK,QAAQ,EAAE,OAAO,CAAC,EAAED,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,EAClE,UAACc,QAAQ,EAAK;MACZ,IAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC,UAACC,GAAG;QAAA,OAAM;UAClDC,GAAG,EAAED,GAAG,CAACE,EAAE;UACXC,SAAS,EAAEH,GAAG,CAACI,IAAI,CAAC,CAAC,CAACD,SAAS,CAACE,MAAM,CAAC,CAAC;UACxCC,IAAI,EAAEN,GAAG,CAACI,IAAI,CAAC,CAAC,CAACE,IAAI;UACrBC,IAAI,EAAEP,GAAG,CAACI,IAAI,CAAC,CAAC,CAACG;QACnB,CAAC;MAAA,CAAC,CAAC;MACHhB,WAAW,CAACM,eAAe,CAAC;IAC9B,CACF,CAAC;IAED,OAAO,YAAM;MAEXF,WAAW,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMa,eAAe,GAAGjC,WAAW,CACjC,YAAsB;IAAA,IAArBkC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAEf,IAAMb,eAAe,MAAAgB,MAAA,CAAAC,kBAAA,CAAOxB,QAAQ,GAAAwB,kBAAA,CAAKL,WAAW,EAAC;IACrDlB,WAAW,CAACM,eAAe,CAAC;IAG5B,IAAMkB,WAAW,GAAGN,WAAW,CAACA,WAAW,CAACE,MAAM,GAAG,CAAC,CAAC;IACvDhC,MAAM,CAACD,UAAU,CAACK,QAAQ,EAAE,OAAO,CAAC,EAAE;MACpCkB,GAAG,EAAEc,WAAW,CAACd,GAAG;MACpBE,SAAS,EAAEY,WAAW,CAACZ,SAAS;MAChCG,IAAI,EAAES,WAAW,CAACT,IAAI;MACtBC,IAAI,EAAEQ,WAAW,CAACR;IACpB,CAAC,CAAC;EACJ,CAAC,EACD,CAACjB,QAAQ,CACX,CAAC;EAED,OACEL,IAAA,CAACX,UAAU;IACTgB,QAAQ,EAAEA,QAAS;IACnB0B,MAAM,EAAE,SAAAA,OAACP,WAAW;MAAA,OAAKD,eAAe,CAACC,WAAW,CAAC;IAAA,CAAC;IACtDF,IAAI,EAAE;MACJN,GAAG,EAAER;IACP;EAAE,CACH,CAAC;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}