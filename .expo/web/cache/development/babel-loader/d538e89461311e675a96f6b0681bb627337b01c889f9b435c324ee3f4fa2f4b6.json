{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Chat;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _native = require(\"@react-navigation/native\");\nvar _reactNativeGiftedChat = require(\"react-native-gifted-chat\");\nvar _react = require(\"react\");\nvar _firestore = require(\"firebase/firestore\");\nvar _firebase = require(\"../Config/firebase\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\erick_ribeiro-souza\\\\Desktop\\\\s.a 2\\\\sa.ReactNative2semestre-1\\\\src\\\\pages\\\\Chat\\\\index.js\";\nfunction Chat() {\n  var _useState = (0, _react.useState)([]),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var route = (0, _native.useRoute)();\n  var name = route.params.name;\n  (0, _react.useEffect)(function () {\n    function getMessages() {\n      return _getMessages.apply(this, arguments);\n    }\n    function _getMessages() {\n      _getMessages = (0, _asyncToGenerator2.default)(function* () {\n        var values = (0, _firestore.query)((0, _firestore.collection)(_firebase.database, 'chats'), (0, _firestore.orderBy)('createdAt', 'desc'));\n        (0, _firestore.onSnapshot)(values, function (snapshot) {\n          return setMessages(snapshot.docs.map(function (doc) {\n            return {\n              _id: doc.data()._id,\n              createdAt: doc.data().createdAt.toDate(),\n              text: doc.data().text,\n              user: doc.data().user\n            };\n          }));\n        });\n      });\n      return _getMessages.apply(this, arguments);\n    }\n    getMessages();\n  }, []);\n  var mensagemEnviada = (0, _react.useCallback)(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      _reactNativeGiftedChat.GiftedChat.append(previousMessages, messages);\n    });\n    var _messages$ = messages[0],\n      _id = _messages$._id,\n      createdAt = _messages$.createdAt,\n      text = _messages$.text,\n      user = _messages$.user;\n    (0, _firestore.addDoc)((0, _firestore.collection)(_firebase.database, \"chats\"), {\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user\n    });\n  }, []);\n  return (0, _jsxRuntime.jsx)(_reactNativeGiftedChat.GiftedChat, {\n    messages: messages,\n    onSend: function onSend(msg) {\n      return mensagemEnviada(msg);\n    },\n    user: {\n      _id: name\n    }\n  });\n}","map":{"version":3,"names":["_native","require","_reactNativeGiftedChat","_react","_firestore","_firebase","_jsxRuntime","_jsxFileName","Chat","_useState","useState","_useState2","_slicedToArray2","default","messages","setMessages","route","useRoute","name","params","useEffect","getMessages","_getMessages","apply","arguments","_asyncToGenerator2","values","query","collection","database","orderBy","onSnapshot","snapshot","docs","map","doc","_id","data","createdAt","toDate","text","user","mensagemEnviada","useCallback","length","undefined","previousMessages","GiftedChat","append","_messages$","addDoc","jsx","onSend","msg"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/src/pages/Chat/index.js"],"sourcesContent":["import { useRoute } from \"@react-navigation/native\";\r\n\r\nimport { GiftedChat } from \"react-native-gifted-chat\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\n//importação do firebase e database\r\nimport { collection, addDoc,onSnapshot, query,orderBy } from \"firebase/firestore\";\r\nimport { database } from \"../Config/firebase\";\r\n\r\nexport default function Chat() {\r\n    const [messages, setMessages] = useState([]);\r\n    const route = useRoute();\r\n    const { name } = route.params;\r\n \r\n    useEffect(() => {\r\n        async function getMessages() {\r\n            const values = query(collection(database, 'chats'), orderBy('createdAt', 'desc'));\r\n            //orderBy('createdAt', 'desc') ordena as mensagens por data de criação\r\n            //Com essa query, o firebase vai retornar as mensagens ordenadas por data de criação\r\n\r\n            //onSnapshot é um listener que fica escutando as alterações no banco de dados\r\n            //sempre que houver uma alteração, ele vai executar a função que está dentro dele\r\n            //Ele faz o Real Time\r\n            onSnapshot(values, (snapshot) => setMessages(\r\n                snapshot.docs.map(doc => ({\r\n                    _id: doc.data()._id,\r\n                    createdAt: doc.data().createdAt.toDate(),\r\n                    text: doc.data().text,\r\n                    user: doc.data().user,\r\n                }))\r\n            ));\r\n        }\r\n        getMessages();\r\n    }, []);\r\n\r\n\r\n    //função que aciona assim que envia a mensagem no aplicativo\r\n    const mensagemEnviada = useCallback((messages = []) => {\r\n        //useCallback retorna um callback memorizado\r\n        // a cada renderização do comopnente, todo o código que esta nele é executado novamente\r\n\r\n\r\n        setMessages(previousMessages =>{\r\n              GiftedChat.append(previousMessages, messages)\r\n              //console.log(previousMessages)\r\n              //console.log(messages)\r\n              //previus messages é o array de mensagens que já existem\r\n              //messages é a nova me que acabou de ser enviada \r\n            }\r\n        );\r\n\r\n\r\n\r\n        //pega a mensagem enviada na posicao 0 de messages e envia para o firebase\r\n        const { _id, createdAt, text, user } = messages[0];\r\n        //envia a mensagem para o firebase\r\n        addDoc(collection(database, \"chats\"), {\r\n            _id,\r\n            createdAt,\r\n            text,\r\n            user,\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <GiftedChat\r\n          messages={messages}\r\n          onSend={msg => mensagemEnviada(msg)}\r\n          user={{\r\n                _id: name,\r\n            }}\r\n        />\r\n    )\r\n}"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,sBAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAGA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,SAAA,GAAAJ,OAAA;AAA8C,IAAAK,WAAA,GAAAL,OAAA;AAAA,IAAAM,YAAA;AAE/B,SAASC,IAAIA,CAAA,EAAG;EAC3B,IAAAC,SAAA,GAAgC,IAAAC,eAAQ,EAAC,EAAE,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAArCK,QAAQ,GAAAH,UAAA;IAAEI,WAAW,GAAAJ,UAAA;EAC5B,IAAMK,KAAK,GAAG,IAAAC,gBAAQ,EAAC,CAAC;EACxB,IAAQC,IAAI,GAAKF,KAAK,CAACG,MAAM,CAArBD,IAAI;EAEZ,IAAAE,gBAAS,EAAC,YAAM;IAAA,SACGC,WAAWA,CAAA;MAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,aAAA;MAAAA,YAAA,OAAAG,kBAAA,CAAAZ,OAAA,EAA1B,aAA6B;QACzB,IAAMa,MAAM,GAAG,IAAAC,gBAAK,EAAC,IAAAC,qBAAU,EAACC,kBAAQ,EAAE,OAAO,CAAC,EAAE,IAAAC,kBAAO,EAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAOjF,IAAAC,qBAAU,EAACL,MAAM,EAAE,UAACM,QAAQ;UAAA,OAAKjB,WAAW,CACxCiB,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,UAAAC,GAAG;YAAA,OAAK;cACtBC,GAAG,EAAED,GAAG,CAACE,IAAI,CAAC,CAAC,CAACD,GAAG;cACnBE,SAAS,EAAEH,GAAG,CAACE,IAAI,CAAC,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,CAAC;cACxCC,IAAI,EAAEL,GAAG,CAACE,IAAI,CAAC,CAAC,CAACG,IAAI;cACrBC,IAAI,EAAEN,GAAG,CAACE,IAAI,CAAC,CAAC,CAACI;YACrB,CAAC;UAAA,CAAC,CACN,CAAC;QAAA,EAAC;MACN,CAAC;MAAA,OAAAnB,YAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IACDH,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAIN,IAAMqB,eAAe,GAAG,IAAAC,kBAAW,EAAC,YAAmB;IAAA,IAAlB7B,QAAQ,GAAAU,SAAA,CAAAoB,MAAA,QAAApB,SAAA,QAAAqB,SAAA,GAAArB,SAAA,MAAG,EAAE;IAK9CT,WAAW,CAAC,UAAA+B,gBAAgB,EAAG;MACzBC,iCAAU,CAACC,MAAM,CAACF,gBAAgB,EAAEhC,QAAQ,CAAC;IAK/C,CACJ,CAAC;IAKD,IAAAmC,UAAA,GAAuCnC,QAAQ,CAAC,CAAC,CAAC;MAA1CsB,GAAG,GAAAa,UAAA,CAAHb,GAAG;MAAEE,SAAS,GAAAW,UAAA,CAATX,SAAS;MAAEE,IAAI,GAAAS,UAAA,CAAJT,IAAI;MAAEC,IAAI,GAAAQ,UAAA,CAAJR,IAAI;IAElC,IAAAS,iBAAM,EAAC,IAAAtB,qBAAU,EAACC,kBAAQ,EAAE,OAAO,CAAC,EAAE;MAClCO,GAAG,EAAHA,GAAG;MACHE,SAAS,EAATA,SAAS;MACTE,IAAI,EAAJA,IAAI;MACJC,IAAI,EAAJA;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OACI,IAAAnC,WAAA,CAAA6C,GAAA,EAACjD,sBAAA,CAAA6C,UAAU;IACTjC,QAAQ,EAAEA,QAAS;IACnBsC,MAAM,EAAE,SAAAA,OAAAC,GAAG;MAAA,OAAIX,eAAe,CAACW,GAAG,CAAC;IAAA,CAAC;IACpCZ,IAAI,EAAE;MACAL,GAAG,EAAElB;IACT;EAAE,CACL,CAAC;AAEV"},"metadata":{},"sourceType":"script","externalDependencies":[]}