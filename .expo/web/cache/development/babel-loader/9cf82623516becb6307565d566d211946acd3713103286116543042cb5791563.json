{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Header = function Header() {\n  return _jsx(View, {\n    style: styles.header,\n    children: _jsx(View, {\n      style: styles.containerLogo,\n      children: _jsx(Image, {\n        source: require('/img/logo.png'),\n        style: {\n          width: 300,\n          height: 200\n        },\n        resizeMode: \"contain\"\n      })\n    })\n  });\n};\nfunction Email(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: styles.body,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return navigation.navigate('Senha');\n        },\n        children: _jsx(Text, {\n          children: \"OK\"\n        })\n      })]\n    })\n  });\n}\nfunction Senha(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(View, {\n    style: styles.body,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Senha\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return navigation.navigate('ConfirmarSenha');\n        },\n        children: _jsx(Text, {\n          children: \"OK\"\n        })\n      })]\n    })\n  });\n}\nfunction ConfirmarSenha(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsx(View, {\n    style: styles.body,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"ConfirmarSenha\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return navigation.navigate('');\n        },\n        children: _jsx(Text, {\n          children: \"OK\"\n        })\n      })]\n    })\n  });\n}\nexport default function Cadastro() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {}), _jsx(Stack.Navigator, {\n      children: _jsxs(Stack.Group, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Email\",\n          component: Email,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Senha\",\n          component: Senha,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Confirmar Senha\",\n          component: ConfirmarSenha,\n          options: {\n            headerShown: false\n          }\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    backgroundColor: 'black',\n    height: 200\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#e0f3e9'\n  },\n  containerLogo: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#e0f3e9'\n  },\n  input: {\n    fontSize: 15,\n    width: '75%',\n    height: 50,\n    borderColor: 'black',\n    borderWidth: 1,\n    paddingLeft: 10,\n    marginBottom: 10,\n    borderRadius: 20,\n    backgroundColor: 'white'\n  },\n  botao: {\n    backgroundColor: 'red',\n    width: 150,\n    height: 50,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","Image","TextInput","TouchableOpacity","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Header","style","styles","header","children","containerLogo","source","require","width","height","resizeMode","Email","_ref","navigation","body","container","input","placeholder","botao","onPress","navigate","Senha","_ref2","secureTextEntry","ConfirmarSenha","_ref3","Cadastro","Navigator","Group","Screen","name","component","options","headerShown","create","backgroundColor","flex","justifyContent","alignItems","fontSize","borderColor","borderWidth","paddingLeft","marginBottom","borderRadius"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/src/pages/Cadastro/index.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Image, TextInput, TouchableOpacity } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nconst Header = () => (\r\n    \r\n  <View style={styles.header}>\r\n    <View style={styles.containerLogo}>\r\n  <Image\r\n   source={require('/img/logo.png')}\r\n\r\n    style={{ width: 300, height: 200 }}\r\n    resizeMode=\"contain\"\r\n  />\r\n</View>\r\n  </View>\r\n);\r\n\r\nfunction Email({ navigation }) {\r\n  return (\r\n    <View style={styles.body}>\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Email\"\r\n        />\r\n        <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate('Senha')}>\r\n          <Text>OK</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Senha({ navigation }) {\r\n  return (\r\n    <View style={styles.body}>\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Senha\"\r\n          secureTextEntry={true}\r\n        />\r\n        <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate('ConfirmarSenha')}>\r\n          <Text>OK</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction ConfirmarSenha({ navigation }) {\r\n  return (\r\n    <View style={styles.body}>\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"ConfirmarSenha\"\r\n          secureTextEntry={true}\r\n        />\r\n        <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate('')}>\r\n          <Text>OK</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function Cadastro() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Stack.Navigator>\r\n        <Stack.Group>\r\n          <Stack.Screen name='Email' component={Email} options={{ headerShown: false }} />\r\n          <Stack.Screen name='Senha' component={Senha} options={{ headerShown: false }} />\r\n          <Stack.Screen name='Confirmar Senha' component={ConfirmarSenha} options={{ headerShown: false }} />\r\n        </Stack.Group>\r\n      </Stack.Navigator>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    backgroundColor: 'black',\r\n    height: 200, // Ajuste a altura do header aqui (por exemplo, 100)\r\n    \r\n  },\r\n  body: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#e0f3e9',\r\n  },\r\n  containerLogo:{\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#e0f3e9',\r\n  },\r\n  input: {\r\n    fontSize: 15,\r\n    width: '75%',\r\n    height: 50,\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    paddingLeft: 10,\r\n    marginBottom: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: 'white',\r\n  },\r\n  botao: {\r\n    backgroundColor: 'red',\r\n    width: 150,\r\n    height: 50,\r\n    borderRadius: 15,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,IAAMC,KAAK,GAAGP,oBAAoB,CAAC,CAAC;AAGpC,IAAMQ,MAAM,GAAG,SAATA,MAAMA,CAAA;EAAA,OAEVN,IAAA,CAACR,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,EACzBV,IAAA,CAACR,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACG,aAAc;MAAAD,QAAA,EACpCV,IAAA,CAACL,KAAK;QACLiB,MAAM,EAAEC,OAAO,CAAC,eAAe,CAAE;QAEhCN,KAAK,EAAE;UAAEO,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI,CAAE;QACnCC,UAAU,EAAC;MAAS,CACrB;IAAC,CACE;EAAC,CACC,CAAC;AAAA,CACR;AAED,SAASC,KAAKA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACzB,OACEnB,IAAA,CAACR,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACY,IAAK;IAAAV,QAAA,EACvBR,KAAA,CAACV,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACa,SAAU;MAAAX,QAAA,GAC5BV,IAAA,CAACJ,SAAS;QACRW,KAAK,EAAEC,MAAM,CAACc,KAAM;QACpBC,WAAW,EAAC;MAAO,CACpB,CAAC,EACFvB,IAAA,CAACH,gBAAgB;QAACU,KAAK,EAAEC,MAAM,CAACgB,KAAM;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,OAAO,CAAC;QAAA,CAAC;QAAAhB,QAAA,EACjFV,IAAA,CAACP,IAAI;UAAAiB,QAAA,EAAC;QAAE,CAAM;MAAC,CACC,CAAC;IAAA,CACf;EAAC,CACH,CAAC;AAEX;AAEA,SAASiB,KAAKA,CAAAC,KAAA,EAAiB;EAAA,IAAdT,UAAU,GAAAS,KAAA,CAAVT,UAAU;EACzB,OACEnB,IAAA,CAACR,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACY,IAAK;IAAAV,QAAA,EACvBR,KAAA,CAACV,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACa,SAAU;MAAAX,QAAA,GAC5BV,IAAA,CAACJ,SAAS;QACRW,KAAK,EAAEC,MAAM,CAACc,KAAM;QACpBC,WAAW,EAAC,OAAO;QACnBM,eAAe,EAAE;MAAK,CACvB,CAAC,EACF7B,IAAA,CAACH,gBAAgB;QAACU,KAAK,EAAEC,MAAM,CAACgB,KAAM;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,gBAAgB,CAAC;QAAA,CAAC;QAAAhB,QAAA,EAC1FV,IAAA,CAACP,IAAI;UAAAiB,QAAA,EAAC;QAAE,CAAM;MAAC,CACC,CAAC;IAAA,CACf;EAAC,CACH,CAAC;AAEX;AAEA,SAASoB,cAAcA,CAAAC,KAAA,EAAiB;EAAA,IAAdZ,UAAU,GAAAY,KAAA,CAAVZ,UAAU;EAClC,OACEnB,IAAA,CAACR,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACY,IAAK;IAAAV,QAAA,EACvBR,KAAA,CAACV,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACa,SAAU;MAAAX,QAAA,GAC5BV,IAAA,CAACJ,SAAS;QACRW,KAAK,EAAEC,MAAM,CAACc,KAAM;QACpBC,WAAW,EAAC,gBAAgB;QAC5BM,eAAe,EAAE;MAAK,CACvB,CAAC,EACF7B,IAAA,CAACH,gBAAgB;QAACU,KAAK,EAAEC,MAAM,CAACgB,KAAM;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,EAAE,CAAC;QAAA,CAAC;QAAAhB,QAAA,EAC5EV,IAAA,CAACP,IAAI;UAAAiB,QAAA,EAAC;QAAE,CAAM;MAAC,CACC,CAAC;IAAA,CACf;EAAC,CACH,CAAC;AAEX;AAEA,eAAe,SAASsB,QAAQA,CAAA,EAAG;EACjC,OACE9B,KAAA,CAAAE,SAAA;IAAAM,QAAA,GACEV,IAAA,CAACM,MAAM,IAAE,CAAC,EACVN,IAAA,CAACK,KAAK,CAAC4B,SAAS;MAAAvB,QAAA,EACdR,KAAA,CAACG,KAAK,CAAC6B,KAAK;QAAAxB,QAAA,GACVV,IAAA,CAACK,KAAK,CAAC8B,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAEpB,KAAM;UAACqB,OAAO,EAAE;YAAEC,WAAW,EAAE;UAAM;QAAE,CAAE,CAAC,EAChFvC,IAAA,CAACK,KAAK,CAAC8B,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAEV,KAAM;UAACW,OAAO,EAAE;YAAEC,WAAW,EAAE;UAAM;QAAE,CAAE,CAAC,EAChFvC,IAAA,CAACK,KAAK,CAAC8B,MAAM;UAACC,IAAI,EAAC,iBAAiB;UAACC,SAAS,EAAEP,cAAe;UAACQ,OAAO,EAAE;YAAEC,WAAW,EAAE;UAAM;QAAE,CAAE,CAAC;MAAA,CACxF;IAAC,CACC,CAAC;EAAA,CAClB,CAAC;AAEP;AAEA,IAAM/B,MAAM,GAAGd,UAAU,CAAC8C,MAAM,CAAC;EAC/B/B,MAAM,EAAE;IACNgC,eAAe,EAAE,OAAO;IACxB1B,MAAM,EAAE;EAEV,CAAC;EACDK,IAAI,EAAE;IACJsB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBH,eAAe,EAAE;EACnB,CAAC;EACD9B,aAAa,EAAC;IACZgC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDvB,SAAS,EAAE;IACTP,KAAK,EAAE,MAAM;IACb6B,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBH,eAAe,EAAE;EACnB,CAAC;EACDnB,KAAK,EAAE;IACLuB,QAAQ,EAAE,EAAE;IACZ/B,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACV+B,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBT,eAAe,EAAE;EACnB,CAAC;EACDjB,KAAK,EAAE;IACLiB,eAAe,EAAE,KAAK;IACtB3B,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVmC,YAAY,EAAE,EAAE;IAChBP,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAEd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}