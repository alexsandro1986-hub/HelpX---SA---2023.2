{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderAppbarContent = exports.modeTextVariant = exports.modeAppbarHeight = exports.getAppbarColor = exports.getAppbarBorders = exports.getAppbarBackgroundColor = exports.DEFAULT_APPBAR_HEIGHT = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _overlay = _interopRequireDefault(require(\"../../styles/overlay\"));\nvar _colors = require(\"../../styles/themes/v2/colors\");\nvar borderStyleProperties = ['borderRadius', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'];\nvar getAppbarBackgroundColor = exports.getAppbarBackgroundColor = function getAppbarBackgroundColor(theme, elevation, customBackground, elevated) {\n  var isV3 = theme.isV3,\n    isDarkTheme = theme.dark,\n    mode = theme.mode,\n    colors = theme.colors;\n  var isAdaptiveMode = mode === 'adaptive';\n  if (customBackground) {\n    return customBackground;\n  }\n  if (!isV3) {\n    if (isDarkTheme && isAdaptiveMode) {\n      return (0, _overlay.default)(elevation, colors === null || colors === void 0 ? void 0 : colors.surface);\n    }\n    return colors.primary;\n  }\n  if (elevated) {\n    return theme.colors.elevation.level2;\n  }\n  return colors.surface;\n};\nvar getAppbarColor = exports.getAppbarColor = function getAppbarColor(_ref) {\n  var color = _ref.color,\n    isDark = _ref.isDark,\n    isV3 = _ref.isV3;\n  if (typeof color !== 'undefined') {\n    return color;\n  }\n  if (isDark) {\n    return _colors.white;\n  }\n  if (isV3) {\n    return undefined;\n  }\n  return _colors.black;\n};\nvar getAppbarBorders = exports.getAppbarBorders = function getAppbarBorders(style) {\n  var borders = {};\n  for (var property of borderStyleProperties) {\n    var value = style[property];\n    if (value) {\n      borders[property] = value;\n    }\n  }\n  return borders;\n};\nvar DEFAULT_APPBAR_HEIGHT = exports.DEFAULT_APPBAR_HEIGHT = 56;\nvar MD3_DEFAULT_APPBAR_HEIGHT = 64;\nvar modeAppbarHeight = exports.modeAppbarHeight = {\n  small: MD3_DEFAULT_APPBAR_HEIGHT,\n  medium: 112,\n  large: 152,\n  'center-aligned': MD3_DEFAULT_APPBAR_HEIGHT\n};\nvar modeTextVariant = exports.modeTextVariant = {\n  small: 'titleLarge',\n  medium: 'headlineSmall',\n  large: 'headlineMedium',\n  'center-aligned': 'titleLarge'\n};\nvar renderAppbarContent = exports.renderAppbarContent = function renderAppbarContent(_ref2) {\n  var children = _ref2.children,\n    isDark = _ref2.isDark,\n    _ref2$shouldCenterCon = _ref2.shouldCenterContent,\n    shouldCenterContent = _ref2$shouldCenterCon === void 0 ? false : _ref2$shouldCenterCon,\n    isV3 = _ref2.isV3,\n    renderOnly = _ref2.renderOnly,\n    renderExcept = _ref2.renderExcept,\n    _ref2$mode = _ref2.mode,\n    mode = _ref2$mode === void 0 ? 'small' : _ref2$mode,\n    theme = _ref2.theme;\n  return _react.default.Children.toArray(children).filter(function (child) {\n    return child != null && typeof child !== 'boolean';\n  }).filter(function (child) {\n    return renderExcept ? !renderExcept.includes(child.type.displayName) : child;\n  }).filter(function (child) {\n    return renderOnly ? renderOnly.includes(child.type.displayName) : child;\n  }).map(function (child, i) {\n    if (!_react.default.isValidElement(child) || !['Appbar.Content', 'Appbar.Action', 'Appbar.BackAction', 'Tooltip'].includes(child.type.displayName)) {\n      return child;\n    }\n    var props = {\n      theme: theme,\n      color: getAppbarColor({\n        color: child.props.color,\n        isDark: isDark,\n        isV3: isV3\n      })\n    };\n    if (child.type.displayName === 'Appbar.Content') {\n      props.mode = mode;\n      props.style = [isV3 ? i === 0 && !shouldCenterContent && styles.v3Spacing : i !== 0 && styles.v2Spacing, shouldCenterContent && styles.centerAlignedContent, child.props.style];\n      props.color;\n    }\n    return _react.default.cloneElement(child, props);\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  centerAlignedContent: {\n    alignItems: 'center'\n  },\n  v2Spacing: {\n    marginLeft: 8\n  },\n  v3Spacing: {\n    marginLeft: 12\n  }\n});","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_overlay","_colors","borderStyleProperties","getAppbarBackgroundColor","exports","theme","elevation","customBackground","elevated","isV3","isDarkTheme","dark","mode","colors","isAdaptiveMode","overlay","surface","primary","level2","getAppbarColor","_ref","color","isDark","white","undefined","black","getAppbarBorders","style","borders","property","value","DEFAULT_APPBAR_HEIGHT","MD3_DEFAULT_APPBAR_HEIGHT","modeAppbarHeight","small","medium","large","modeTextVariant","renderAppbarContent","_ref2","children","_ref2$shouldCenterCon","shouldCenterContent","renderOnly","renderExcept","_ref2$mode","React","Children","toArray","filter","child","includes","type","displayName","map","i","isValidElement","props","styles","v3Spacing","v2Spacing","centerAlignedContent","cloneElement","StyleSheet","create","alignItems","marginLeft"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\Appbar\\utils.ts"],"sourcesContent":["import React from 'react';\nimport type { ColorValue, StyleProp, ViewStyle } from 'react-native';\nimport { StyleSheet, Animated } from 'react-native';\n\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme, ThemeProp } from '../../types';\n\nexport type AppbarModes = 'small' | 'medium' | 'large' | 'center-aligned';\n\nconst borderStyleProperties = [\n  'borderRadius',\n  'borderTopLeftRadius',\n  'borderTopRightRadius',\n  'borderBottomRightRadius',\n  'borderBottomLeftRadius',\n];\n\nexport const getAppbarBackgroundColor = (\n  theme: InternalTheme,\n  elevation: number,\n  customBackground?: ColorValue,\n  elevated?: boolean\n) => {\n  const { isV3, dark: isDarkTheme, mode, colors } = theme;\n  const isAdaptiveMode = mode === 'adaptive';\n  if (customBackground) {\n    return customBackground;\n  }\n\n  if (!isV3) {\n    if (isDarkTheme && isAdaptiveMode) {\n      return overlay(elevation, colors?.surface);\n    }\n\n    return colors.primary;\n  }\n\n  if (elevated) {\n    return theme.colors.elevation.level2;\n  }\n\n  return colors.surface;\n};\n\nexport const getAppbarColor = ({\n  color,\n  isDark,\n  isV3,\n}: BaseProps & { color: string }) => {\n  if (typeof color !== 'undefined') {\n    return color;\n  }\n\n  if (isDark) {\n    return white;\n  }\n\n  if (isV3) {\n    return undefined;\n  }\n\n  return black;\n};\n\nexport const getAppbarBorders = (\n  style:\n    | Animated.Value\n    | Animated.AnimatedInterpolation<string | number>\n    | Animated.WithAnimatedObject<ViewStyle>\n) => {\n  const borders: Record<string, number> = {};\n\n  for (const property of borderStyleProperties) {\n    const value = style[property as keyof typeof style];\n    if (value) {\n      borders[property] = value;\n    }\n  }\n\n  return borders;\n};\n\ntype BaseProps = {\n  isDark: boolean;\n  isV3: boolean;\n};\n\ntype RenderAppbarContentProps = BaseProps & {\n  children: React.ReactNode;\n  shouldCenterContent?: boolean;\n  isV3: boolean;\n  renderOnly?: (string | boolean)[];\n  renderExcept?: string[];\n  mode?: AppbarModes;\n  theme?: ThemeProp;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\nconst MD3_DEFAULT_APPBAR_HEIGHT = 64;\n\nexport const modeAppbarHeight = {\n  small: MD3_DEFAULT_APPBAR_HEIGHT,\n  medium: 112,\n  large: 152,\n  'center-aligned': MD3_DEFAULT_APPBAR_HEIGHT,\n};\n\nexport const modeTextVariant = {\n  small: 'titleLarge',\n  medium: 'headlineSmall',\n  large: 'headlineMedium',\n  'center-aligned': 'titleLarge',\n} as const;\n\nexport const renderAppbarContent = ({\n  children,\n  isDark,\n  shouldCenterContent = false,\n  isV3,\n  renderOnly,\n  renderExcept,\n  mode = 'small',\n  theme,\n}: RenderAppbarContentProps) => {\n  return React.Children.toArray(children as React.ReactNode | React.ReactNode[])\n    .filter((child) => child != null && typeof child !== 'boolean')\n    .filter((child) =>\n      // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n      renderExcept ? !renderExcept.includes(child.type.displayName) : child\n    )\n    .filter((child) =>\n      // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n      renderOnly ? renderOnly.includes(child.type.displayName) : child\n    )\n    .map((child, i) => {\n      if (\n        !React.isValidElement(child) ||\n        ![\n          'Appbar.Content',\n          'Appbar.Action',\n          'Appbar.BackAction',\n          'Tooltip',\n        ].includes(\n          // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n          child.type.displayName\n        )\n      ) {\n        return child;\n      }\n\n      const props: {\n        color?: string;\n        style?: StyleProp<ViewStyle>;\n        mode?: AppbarModes;\n        theme?: ThemeProp;\n      } = {\n        theme,\n        color: getAppbarColor({ color: child.props.color, isDark, isV3 }),\n      };\n\n      // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n      if (child.type.displayName === 'Appbar.Content') {\n        props.mode = mode;\n        props.style = [\n          isV3\n            ? i === 0 && !shouldCenterContent && styles.v3Spacing\n            : i !== 0 && styles.v2Spacing,\n          shouldCenterContent && styles.centerAlignedContent,\n          child.props.style,\n        ];\n        props.color;\n      }\n      return React.cloneElement(child, props);\n    });\n};\n\nconst styles = StyleSheet.create({\n  centerAlignedContent: {\n    alignItems: 'center',\n  },\n  v2Spacing: {\n    marginLeft: 8,\n  },\n  v3Spacing: {\n    marginLeft: 12,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}