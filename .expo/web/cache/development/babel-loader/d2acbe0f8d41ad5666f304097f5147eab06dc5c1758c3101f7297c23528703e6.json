{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../core/theming\");\nvar _overlay = _interopRequireWildcard(require(\"../styles/overlay\"));\nvar _shadow = _interopRequireDefault(require(\"../styles/shadow\"));\nvar _forwardRef = require(\"../utils/forwardRef\");\nvar _splitStyles3 = require(\"../utils/splitStyles\");\nvar _excluded = [\"style\", \"theme\"],\n  _excluded2 = [\"elevation\", \"style\", \"backgroundColor\", \"testID\", \"children\", \"mode\"],\n  _excluded3 = [\"elevation\", \"children\", \"theme\", \"style\", \"testID\", \"mode\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar MD2Surface = (0, _forwardRef.forwardRef)(function (_ref, ref) {\n  var style = _ref.style,\n    overrideTheme = _ref.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _ref4 = _reactNative.StyleSheet.flatten(style) || {},\n    _ref4$elevation = _ref4.elevation,\n    elevation = _ref4$elevation === void 0 ? 4 : _ref4$elevation;\n  var _useInternalTheme = (0, _theming.useInternalTheme)(overrideTheme),\n    isDarkTheme = _useInternalTheme.dark,\n    mode = _useInternalTheme.mode,\n    colors = _useInternalTheme.colors;\n  return React.createElement(_reactNative.Animated.View, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      backgroundColor: isDarkTheme && mode === 'adaptive' ? (0, _overlay.default)(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface\n    }, elevation ? (0, _shadow.default)(elevation) : null, style]\n  }));\n});\nvar outerLayerStyleProperties = ['position', 'alignSelf', 'top', 'right', 'bottom', 'left', 'start', 'end', 'flex', 'flexShrink', 'flexGrow', 'width', 'height', 'transform', 'opacity'];\nvar shadowColor = '#000';\nvar iOSShadowOutputRanges = [{\n  shadowOpacity: 0.15,\n  height: [0, 1, 2, 4, 6, 8],\n  shadowRadius: [0, 3, 6, 8, 10, 12]\n}, {\n  shadowOpacity: 0.3,\n  height: [0, 1, 1, 1, 2, 4],\n  shadowRadius: [0, 1, 2, 3, 3, 4]\n}];\nvar inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(elevation, layer) {\n  if ((0, _overlay.isAnimatedValue)(elevation)) {\n    return {\n      shadowColor: shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp'\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height\n        })\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius\n      })\n    };\n  }\n  return {\n    shadowColor: shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation]\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation]\n  };\n}\nvar SurfaceIOS = (0, _forwardRef.forwardRef)(function (_ref2, ref) {\n  var elevation = _ref2.elevation,\n    style = _ref2.style,\n    backgroundColor = _ref2.backgroundColor,\n    testID = _ref2.testID,\n    children = _ref2.children,\n    _ref2$mode = _ref2.mode,\n    mode = _ref2$mode === void 0 ? 'elevated' : _ref2$mode,\n    props = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  var _React$useMemo = React.useMemo(function () {\n      var flattenedStyles = _reactNative.StyleSheet.flatten(style) || {};\n      var _splitStyles = (0, _splitStyles3.splitStyles)(flattenedStyles, function (style) {\n          return outerLayerStyleProperties.includes(style) || style.startsWith('margin');\n        }, function (style) {\n          return style.startsWith('border') && style.endsWith('Radius');\n        }),\n        _splitStyles2 = (0, _slicedToArray2.default)(_splitStyles, 3),\n        filteredStyles = _splitStyles2[0],\n        outerLayerStyles = _splitStyles2[1],\n        borderRadiusStyles = _splitStyles2[2];\n      if (process.env.NODE_ENV !== 'production' && filteredStyles.overflow === 'hidden' && elevation !== 0) {\n        console.warn('When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.');\n      }\n      var bgColor = flattenedStyles.backgroundColor || backgroundColor;\n      var isElevated = mode === 'elevated';\n      var outerLayerViewStyles = Object.assign({}, isElevated && getStyleForShadowLayer(elevation, 0), outerLayerStyles, borderRadiusStyles, {\n        backgroundColor: bgColor\n      });\n      var innerLayerViewStyles = Object.assign({}, isElevated && getStyleForShadowLayer(elevation, 1), filteredStyles, borderRadiusStyles, {\n        flex: flattenedStyles.height ? 1 : undefined,\n        backgroundColor: bgColor\n      });\n      return [outerLayerViewStyles, innerLayerViewStyles];\n    }, [style, elevation, backgroundColor, mode]),\n    _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n    outerLayerViewStyles = _React$useMemo2[0],\n    innerLayerViewStyles = _React$useMemo2[1];\n  return React.createElement(_reactNative.Animated.View, {\n    ref: ref,\n    style: outerLayerViewStyles,\n    testID: testID + \"-outer-layer\"\n  }, React.createElement(_reactNative.Animated.View, _extends({}, props, {\n    style: innerLayerViewStyles,\n    testID: testID\n  }), children));\n});\nvar Surface = (0, _forwardRef.forwardRef)(function (_ref3, ref) {\n  var _ref3$elevation = _ref3.elevation,\n    elevation = _ref3$elevation === void 0 ? 1 : _ref3$elevation,\n    children = _ref3.children,\n    overridenTheme = _ref3.theme,\n    style = _ref3.style,\n    _ref3$testID = _ref3.testID,\n    testID = _ref3$testID === void 0 ? 'surface' : _ref3$testID,\n    _ref3$mode = _ref3.mode,\n    mode = _ref3$mode === void 0 ? 'elevated' : _ref3$mode,\n    props = (0, _objectWithoutProperties2.default)(_ref3, _excluded3);\n  var theme = (0, _theming.useInternalTheme)(overridenTheme);\n  if (!theme.isV3) return React.createElement(MD2Surface, _extends({}, props, {\n    theme: theme,\n    style: style,\n    ref: ref\n  }), children);\n  var colors = theme.colors;\n  var inputRange = [0, 1, 2, 3, 4, 5];\n  var backgroundColor = function (_colors$elevation2) {\n    if ((0, _overlay.isAnimatedValue)(elevation)) {\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          var _colors$elevation;\n          return (_colors$elevation = colors.elevation) === null || _colors$elevation === void 0 ? void 0 : _colors$elevation[\"level\" + elevation];\n        })\n      });\n    }\n    return (_colors$elevation2 = colors.elevation) === null || _colors$elevation2 === void 0 ? void 0 : _colors$elevation2[\"level\" + elevation];\n  }();\n  var isElevated = mode === 'elevated';\n  if (_reactNative.Platform.OS === 'web') {\n    var _props$pointerEvents = props.pointerEvents,\n      pointerEvents = _props$pointerEvents === void 0 ? 'auto' : _props$pointerEvents;\n    return React.createElement(_reactNative.Animated.View, _extends({}, props, {\n      pointerEvents: pointerEvents,\n      ref: ref,\n      testID: testID,\n      style: [{\n        backgroundColor: backgroundColor\n      }, elevation && isElevated ? (0, _shadow.default)(elevation, theme.isV3) : null, style]\n    }), children);\n  }\n  if (_reactNative.Platform.OS === 'android') {\n    var elevationLevel = [0, 3, 6, 9, 12, 15];\n    var getElevationAndroid = function getElevationAndroid() {\n      if ((0, _overlay.isAnimatedValue)(elevation)) {\n        return elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: elevationLevel\n        });\n      }\n      return elevationLevel[elevation];\n    };\n    var _ref5 = _reactNative.StyleSheet.flatten(style) || {},\n      margin = _ref5.margin,\n      padding = _ref5.padding,\n      transform = _ref5.transform,\n      borderRadius = _ref5.borderRadius;\n    var outerLayerStyles = {\n      margin: margin,\n      padding: padding,\n      transform: transform,\n      borderRadius: borderRadius\n    };\n    var sharedStyle = [{\n      backgroundColor: backgroundColor\n    }, style];\n    return React.createElement(_reactNative.Animated.View, _extends({}, props, {\n      testID: testID,\n      ref: ref,\n      style: [{\n        backgroundColor: backgroundColor,\n        transform: transform\n      }, outerLayerStyles, sharedStyle, isElevated && {\n        elevation: getElevationAndroid()\n      }]\n    }), children);\n  }\n  return React.createElement(SurfaceIOS, _extends({}, props, {\n    ref: ref,\n    elevation: elevation,\n    backgroundColor: backgroundColor,\n    style: style,\n    testID: testID,\n    mode: mode\n  }), children);\n});\nvar _default = exports.default = Surface;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_theming","_overlay","_shadow","_interopRequireDefault","_forwardRef","_splitStyles3","_excluded","_excluded2","_excluded3","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MD2Surface","forwardRef","_ref","ref","style","overrideTheme","theme","rest","_objectWithoutProperties2","_ref4","StyleSheet","flatten","_ref4$elevation","elevation","_useInternalTheme","useInternalTheme","isDarkTheme","dark","mode","colors","createElement","Animated","View","_extends","backgroundColor","overlay","surface","shadow","outerLayerStyleProperties","shadowColor","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","inputRange","getStyleForShadowLayer","layer","isAnimatedValue","interpolate","outputRange","extrapolate","shadowOffset","width","SurfaceIOS","_ref2","testID","children","_ref2$mode","props","_React$useMemo","useMemo","flattenedStyles","_splitStyles","splitStyles","includes","startsWith","endsWith","_splitStyles2","_slicedToArray2","filteredStyles","outerLayerStyles","borderRadiusStyles","process","env","NODE_ENV","overflow","console","warn","bgColor","isElevated","outerLayerViewStyles","assign","innerLayerViewStyles","flex","undefined","_React$useMemo2","Surface","_ref3","_ref3$elevation","overridenTheme","_ref3$testID","_ref3$mode","isV3","_colors$elevation2","map","_colors$elevation","Platform","OS","_props$pointerEvents","pointerEvents","elevationLevel","getElevationAndroid","_ref5","margin","padding","transform","borderRadius","sharedStyle","_default","exports"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  ShadowStyleIOS,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { ThemeProp, MD3Elevation } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\nimport { splitStyles } from '../utils/splitStyles';\n\ntype Elevation = 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: If `mode` is set to `flat`, Surface doesn't have a shadow.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: Elevation;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the Surface.\n   * - `elevated` - Surface with a shadow and background color corresponding to set `elevation` value.\n   * - `flat` - Surface without a shadow, with the background color corresponding to set `elevation` value.\n   */\n  mode?: 'flat' | 'elevated';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\nconst outerLayerStyleProperties: (keyof ViewStyle)[] = [\n  'position',\n  'alignSelf',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'start',\n  'end',\n  'flex',\n  'flexShrink',\n  'flexGrow',\n  'width',\n  'height',\n  'transform',\n  'opacity',\n];\n\nconst shadowColor = '#000';\nconst iOSShadowOutputRanges = [\n  {\n    shadowOpacity: 0.15,\n    height: [0, 1, 2, 4, 6, 8],\n    shadowRadius: [0, 3, 6, 8, 10, 12],\n  },\n  {\n    shadowOpacity: 0.3,\n    height: [0, 1, 1, 1, 2, 4],\n    shadowRadius: [0, 1, 2, 3, 3, 4],\n  },\n];\nconst inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(\n  elevation: Elevation,\n  layer: 0 | 1\n): Animated.WithAnimatedValue<ShadowStyleIOS> {\n  if (isAnimatedValue(elevation)) {\n    return {\n      shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp',\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height,\n        }),\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n      }),\n    };\n  }\n\n  return {\n    shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation],\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n  };\n}\n\nconst SurfaceIOS = forwardRef<\n  View,\n  Omit<Props, 'elevation'> & {\n    elevation: Elevation;\n    backgroundColor?: string | Animated.AnimatedInterpolation<string | number>;\n  }\n>(\n  (\n    {\n      elevation,\n      style,\n      backgroundColor,\n      testID,\n      children,\n      mode = 'elevated',\n      ...props\n    },\n    ref\n  ) => {\n    const [outerLayerViewStyles, innerLayerViewStyles] = React.useMemo(() => {\n      const flattenedStyles = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n      const [filteredStyles, outerLayerStyles, borderRadiusStyles] =\n        splitStyles(\n          flattenedStyles,\n          (style) =>\n            outerLayerStyleProperties.includes(style) ||\n            style.startsWith('margin'),\n          (style) => style.startsWith('border') && style.endsWith('Radius')\n        );\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        filteredStyles.overflow === 'hidden' &&\n        elevation !== 0\n      ) {\n        console.warn(\n          'When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.'\n        );\n      }\n\n      const bgColor = flattenedStyles.backgroundColor || backgroundColor;\n\n      const isElevated = mode === 'elevated';\n\n      const outerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 0)),\n        ...outerLayerStyles,\n        ...borderRadiusStyles,\n        backgroundColor: bgColor,\n      };\n\n      const innerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 1)),\n        ...filteredStyles,\n        ...borderRadiusStyles,\n        flex: flattenedStyles.height ? 1 : undefined,\n        backgroundColor: bgColor,\n      };\n\n      return [outerLayerViewStyles, innerLayerViewStyles];\n    }, [style, elevation, backgroundColor, mode]);\n\n    return (\n      <Animated.View\n        ref={ref}\n        style={outerLayerViewStyles}\n        testID={`${testID}-outer-layer`}\n      >\n        <Animated.View {...props} style={innerLayerViewStyles} testID={testID}>\n          {children}\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n);\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID = 'surface',\n      mode = 'elevated',\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    const isElevated = mode === 'elevated';\n\n    if (Platform.OS === 'web') {\n      const { pointerEvents = 'auto' } = props;\n      return (\n        <Animated.View\n          {...props}\n          pointerEvents={pointerEvents}\n          ref={ref}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation && isElevated ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            isElevated && {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    return (\n      <SurfaceIOS\n        {...props}\n        ref={ref}\n        elevation={elevation}\n        backgroundColor={backgroundColor}\n        style={style}\n        testID={testID}\n        mode={mode}\n      >\n        {children}\n      </SurfaceIOS>\n    );\n  }\n);\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}