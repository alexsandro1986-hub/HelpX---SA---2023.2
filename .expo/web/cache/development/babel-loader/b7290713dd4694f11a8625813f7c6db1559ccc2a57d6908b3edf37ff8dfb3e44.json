{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ThreeDBar from \"../Components/ThreeDBar\";\nimport AnimatedBar from \"../Components/AnimatedBar\";\nimport LinearGradient from 'react-native-linear-gradient';\nimport Animated2DWithGradient from \"./Animated2DWithGradient\";\nimport Cap from \"../Components/BarSpecificComponents/cap\";\nimport BarBackgroundPattern from \"../Components/BarSpecificComponents/barBackgroundPattern\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RenderBars = function RenderBars(props) {\n  var _ref10, _item$leftShiftForToo;\n  var item = props.item,\n    index = props.index,\n    containerHeight = props.containerHeight,\n    maxValue = props.maxValue,\n    minHeight = props.minHeight,\n    spacing = props.spacing,\n    propSpacing = props.propSpacing,\n    side = props.side,\n    data = props.data,\n    barStyle = props.barStyle,\n    barBorderRadius = props.barBorderRadius,\n    barBorderTopLeftRadius = props.barBorderTopLeftRadius,\n    barBorderTopRightRadius = props.barBorderTopRightRadius,\n    barBorderBottomLeftRadius = props.barBorderBottomLeftRadius,\n    barBorderBottomRightRadius = props.barBorderBottomRightRadius,\n    isThreeD = props.isThreeD,\n    isAnimated = props.isAnimated,\n    rotateLabel = props.rotateLabel,\n    appearingOpacity = props.appearingOpacity,\n    opacity = props.opacity,\n    animationDuration = props.animationDuration,\n    autoShiftLabels = props.autoShiftLabels,\n    label = props.label,\n    labelTextStyle = props.labelTextStyle,\n    xAxisTextNumberOfLines = props.xAxisTextNumberOfLines,\n    renderTooltip = props.renderTooltip,\n    leftShiftForTooltip = props.leftShiftForTooltip,\n    leftShiftForLastIndexTooltip = props.leftShiftForLastIndexTooltip,\n    initialSpacing = props.initialSpacing,\n    selectedIndex = props.selectedIndex,\n    setSelectedIndex = props.setSelectedIndex,\n    xAxisThickness = props.xAxisThickness,\n    horizontal = props.horizontal,\n    rtl = props.rtl;\n  var barMarginBottom = item.barMarginBottom === 0 ? 0 : item.barMarginBottom || props.barMarginBottom || 0;\n  var renderLabel = function renderLabel(label, labelTextStyle, value) {\n    return _jsx(View, {\n      style: [{\n        width: (item.labelWidth || props.labelWidth || item.barWidth || props.barWidth || 30) + spacing,\n        left: spacing / -2,\n        position: 'absolute',\n        bottom: (rotateLabel ? -40 : -25) - barMarginBottom\n      }, rotateLabel ? horizontal ? {\n        transform: [{\n          rotate: '330deg'\n        }]\n      } : {\n        transform: [{\n          rotate: value < 0 ? '240deg' : '60deg'\n        }, {\n          translateX: value < 0 ? 56 : 0\n        }, {\n          translateY: value < 0 ? 32 : 0\n        }]\n      } : horizontal ? {\n        transform: [{\n          rotate: '-90deg'\n        }]\n      } : value < 0 ? {\n        transform: [{\n          rotate: '180deg'\n        }, {\n          translateY: autoShiftLabels ? 0 : 32\n        }]\n      } : {}],\n      children: item.labelComponent ? item.labelComponent() : _jsx(Text, {\n        style: [{\n          textAlign: 'center'\n        }, rtl && {\n          transform: [{\n            rotate: '180deg'\n          }]\n        }, labelTextStyle],\n        numberOfLines: xAxisTextNumberOfLines,\n        children: label || ''\n      })\n    });\n  };\n  var renderAnimatedLabel = function renderAnimatedLabel(label, labelTextStyle, value) {\n    return _jsx(Animated.View, {\n      style: [{\n        width: (item.labelWidth || props.labelWidth || item.barWidth || props.barWidth || 30) + spacing,\n        left: spacing / -2,\n        position: 'absolute',\n        bottom: (rotateLabel ? -40 : -25) - barMarginBottom,\n        opacity: appearingOpacity\n      }, value < 0 && {\n        transform: [{\n          rotate: '180deg'\n        }]\n      }, rotateLabel ? horizontal ? {\n        transform: [{\n          rotate: '330deg'\n        }]\n      } : {\n        transform: [{\n          rotate: '60deg'\n        }]\n      } : horizontal ? {\n        transform: [{\n          rotate: '-90deg'\n        }]\n      } : {}],\n      children: item.labelComponent ? item.labelComponent() : _jsx(Text, {\n        style: [{\n          textAlign: 'center'\n        }, rtl && {\n          transform: [{\n            rotate: '180deg'\n          }]\n        }, labelTextStyle],\n        numberOfLines: xAxisTextNumberOfLines,\n        children: label || ''\n      })\n    });\n  };\n  var static2DWithGradient = function static2DWithGradient(item) {\n    var _ref, _item$barBorderRadius, _ref2, _ref3, _item$barBorderTopLef, _ref4, _ref5, _item$barBorderTopRig, _ref6, _ref7, _item$barBorderBottom, _ref8, _ref9, _item$barBorderBottom2;\n    return _jsxs(_Fragment, {\n      children: [_jsx(LinearGradient, {\n        style: [{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          borderRadius: (_ref = (_item$barBorderRadius = item.barBorderRadius) != null ? _item$barBorderRadius : barBorderRadius) != null ? _ref : 0,\n          borderTopLeftRadius: (_ref2 = (_ref3 = (_item$barBorderTopLef = item.barBorderTopLeftRadius) != null ? _item$barBorderTopLef : barBorderTopLeftRadius) != null ? _ref3 : item.barBorderRadius) != null ? _ref2 : barBorderRadius,\n          borderTopRightRadius: (_ref4 = (_ref5 = (_item$barBorderTopRig = item.barBorderTopRightRadius) != null ? _item$barBorderTopRig : barBorderTopRightRadius) != null ? _ref5 : item.barBorderRadius) != null ? _ref4 : barBorderRadius,\n          borderBottomLeftRadius: (_ref6 = (_ref7 = (_item$barBorderBottom = item.barBorderBottomLeftRadius) != null ? _item$barBorderBottom : barBorderBottomLeftRadius) != null ? _ref7 : item.barBorderRadius) != null ? _ref6 : barBorderRadius,\n          borderBottomRightRadius: (_ref8 = (_ref9 = (_item$barBorderBottom2 = item.barBorderBottomRightRadius) != null ? _item$barBorderBottom2 : barBorderBottomRightRadius) != null ? _ref9 : item.barBorderRadius) != null ? _ref8 : barBorderRadius\n        }, props.roundedBottom && {\n          borderBottomLeftRadius: (item.barWidth || props.barWidth || 30) / 2,\n          borderBottomRightRadius: (item.barWidth || props.barWidth || 30) / 2\n        }, props.cappedBars && {\n          borderTopLeftRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0,\n          borderTopRightRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0\n        }, props.roundedTop && {\n          borderTopLeftRadius: (item.barWidth || props.barWidth || 30) / 2,\n          borderTopRightRadius: (item.barWidth || props.barWidth || 30) / 2\n        }],\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 1\n        },\n        colors: [item.gradientColor || props.gradientColor || 'white', item.frontColor || props.frontColor || 'black'],\n        children: props.cappedBars && item.value ? _jsx(Cap, {\n          capThicknessFromItem: item.capThickness,\n          capThicknessFromProps: props.capThickness,\n          capColorFromItem: item.capColor,\n          capColorFromProps: props.capColor,\n          capRadiusFromItem: item.capRadius,\n          capRadiusFromProps: props.capRadius\n        }) : null\n      }), (item.barBackgroundPattern || props.barBackgroundPattern) && _jsx(BarBackgroundPattern, {\n        barBackgroundPatternFromItem: item.barBackgroundPattern,\n        barBackgroundPatternFromProps: props.barBackgroundPattern,\n        patternIdFromItem: item.patternId,\n        patternIdFromProps: props.patternId\n      }), item.topLabelComponent && _jsx(View, {\n        style: [{\n          position: 'absolute',\n          top: (item.barWidth || props.barWidth || 30) * -1,\n          height: item.barWidth || props.barWidth || 30,\n          width: item.barWidth || props.barWidth || 30,\n          justifyContent: horizontal && !props.intactTopLabel || item.value < 0 ? 'center' : 'flex-end',\n          alignItems: 'center'\n        }, item.value < 0 && {\n          transform: [{\n            rotate: '180deg'\n          }]\n        }, horizontal && !props.intactTopLabel && {\n          transform: [{\n            rotate: '270deg'\n          }]\n        }, item.topLabelContainerStyle],\n        children: item.topLabelComponent()\n      })]\n    });\n  };\n  var barHeight = Math.max(minHeight, Math.abs(item.value) * (containerHeight || 200) / (maxValue || 200) - (xAxisThickness != null ? xAxisThickness : 0));\n  var leftSpacing = initialSpacing;\n  for (var i = 0; i < index; i++) {\n    var _data$i$spacing;\n    leftSpacing += ((_data$i$spacing = data[i].spacing) != null ? _data$i$spacing : propSpacing) + (data[i].barWidth || props.barWidth || 30);\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsxs(TouchableOpacity, {\n      disabled: item.disablePress || props.disablePress,\n      activeOpacity: props.activeOpacity || 0.2,\n      onPress: function onPress() {\n        if (renderTooltip) {\n          setSelectedIndex(index);\n        }\n        item.onPress ? item.onPress() : props.onPress ? props.onPress(item, index) : null;\n      },\n      style: [{\n        marginBottom: 60 + barMarginBottom,\n        width: item.barWidth || props.barWidth || 30,\n        height: barHeight,\n        marginRight: spacing\n      }, item.value < 0 && {\n        transform: [{\n          translateY: Math.abs(item.value) * (containerHeight || 200) / (maxValue || 200)\n        }, {\n          rotateZ: '180deg'\n        }]\n      }, side !== 'right' && {\n        zIndex: data.length - index\n      }],\n      children: [(props.showXAxisIndices || item.showXAxisIndex) && _jsx(View, {\n        style: {\n          zIndex: 2,\n          position: 'absolute',\n          height: props.xAxisIndicesHeight,\n          width: props.xAxisIndicesWidth,\n          bottom: props.xAxisIndicesHeight / -2,\n          left: ((item.barWidth || props.barWidth || 30) - props.xAxisIndicesWidth) / 2,\n          backgroundColor: props.xAxisIndicesColor\n        }\n      }), isThreeD ? isAnimated ? _jsx(AnimatedBar, {\n        barBackgroundPattern: item.barBackgroundPattern || props.barBackgroundPattern,\n        patternId: item.patternId || props.patternId,\n        topLabelContainerStyle: item.topLabelContainerStyle,\n        width: item.barWidth || props.barWidth || 30,\n        barStyle: barStyle,\n        item: item,\n        sideWidth: item.sideWidth || props.sideWidth || (item.barWidth || props.barWidth || 30) / 2,\n        side: side || 'left',\n        frontColor: item.frontColor || props.frontColor || '',\n        sideColor: item.sideColor || props.sideColor || '',\n        topColor: item.topColor || props.topColor || '',\n        showGradient: item.showGradient || props.showGradient || false,\n        gradientColor: item.gradientColor || props.gradientColor,\n        topLabelComponent: item.topLabelComponent,\n        opacity: opacity || 1,\n        animationDuration: animationDuration || 800,\n        height: barHeight,\n        intactTopLabel: props.intactTopLabel,\n        horizontal: horizontal\n      }) : _jsx(ThreeDBar, {\n        barBackgroundPattern: item.barBackgroundPattern || props.barBackgroundPattern,\n        patternId: item.patternId || props.patternId,\n        style: {},\n        color: '',\n        topLabelContainerStyle: item.topLabelContainerStyle,\n        width: item.barWidth || props.barWidth || 30,\n        sideWidth: item.sideWidth || props.sideWidth || (item.barWidth || props.barWidth || 30) / 2,\n        barStyle: barStyle,\n        item: item,\n        side: side || 'left',\n        frontColor: item.frontColor || props.frontColor || '',\n        sideColor: item.sideColor || props.sideColor || '',\n        topColor: item.topColor || props.topColor || '',\n        showGradient: item.showGradient || props.showGradient || false,\n        gradientColor: item.gradientColor || props.gradientColor,\n        topLabelComponent: item.topLabelComponent || null,\n        opacity: opacity || 1,\n        horizontal: horizontal,\n        intactTopLabel: props.intactTopLabel,\n        height: barHeight,\n        value: item.value\n      }) : item.showGradient || props.showGradient ? isAnimated ? _jsx(Animated2DWithGradient, {\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        barWidth: props.barWidth || 30,\n        barStyle: barStyle,\n        item: item,\n        opacity: opacity,\n        animationDuration: animationDuration || 800,\n        roundedBottom: props.roundedBottom || false,\n        roundedTop: props.roundedTop || false,\n        gradientColor: props.gradientColor,\n        frontColor: props.frontColor || 'black',\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        height: barHeight,\n        minHeight: minHeight != null ? minHeight : 0,\n        barMarginBottom: barMarginBottom,\n        cappedBars: props.cappedBars,\n        capThickness: props.capThickness,\n        capColor: props.capColor,\n        capRadius: props.capRadius,\n        horizontal: horizontal,\n        intactTopLabel: props.intactTopLabel,\n        barBorderRadius: props.barBorderRadius || 0,\n        barBorderTopLeftRadius: barBorderTopLeftRadius,\n        barBorderTopRightRadius: barBorderTopRightRadius,\n        barBorderBottomLeftRadius: barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: barBorderBottomRightRadius\n      }) : static2DWithGradient(item) : isAnimated ? _jsx(Animated2DWithGradient, {\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        barWidth: props.barWidth || 30,\n        barStyle: barStyle,\n        item: item,\n        opacity: opacity,\n        animationDuration: animationDuration || 800,\n        roundedBottom: props.roundedBottom || false,\n        roundedTop: props.roundedTop || false,\n        gradientColor: props.gradientColor,\n        noGradient: true,\n        frontColor: props.frontColor || 'black',\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        height: barHeight,\n        minHeight: minHeight || 0,\n        barMarginBottom: barMarginBottom,\n        cappedBars: props.cappedBars,\n        capThickness: props.capThickness,\n        capColor: props.capColor,\n        capRadius: props.capRadius,\n        horizontal: horizontal,\n        intactTopLabel: props.intactTopLabel,\n        barBorderRadius: props.barBorderRadius || 0,\n        barBorderTopLeftRadius: barBorderTopLeftRadius,\n        barBorderTopRightRadius: barBorderTopRightRadius,\n        barBorderBottomLeftRadius: barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: barBorderBottomRightRadius\n      }) : _jsx(Animated2DWithGradient, {\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        barWidth: props.barWidth || 30,\n        barStyle: barStyle,\n        item: item,\n        opacity: opacity,\n        animationDuration: animationDuration || 800,\n        roundedBottom: props.roundedBottom || false,\n        roundedTop: props.roundedTop || false,\n        gradientColor: props.gradientColor,\n        noGradient: true,\n        noAnimation: true,\n        frontColor: props.frontColor || 'black',\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        height: barHeight,\n        minHeight: minHeight || 0,\n        barMarginBottom: barMarginBottom,\n        cappedBars: props.cappedBars,\n        capThickness: props.capThickness,\n        capColor: props.capColor,\n        capRadius: props.capRadius,\n        horizontal: horizontal,\n        intactTopLabel: props.intactTopLabel,\n        barBorderRadius: props.barBorderRadius || 0,\n        barBorderTopLeftRadius: barBorderTopLeftRadius,\n        barBorderTopRightRadius: barBorderTopRightRadius,\n        barBorderBottomLeftRadius: barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: barBorderBottomRightRadius\n      }), isAnimated ? renderAnimatedLabel(label, labelTextStyle, item.value) : renderLabel(label, labelTextStyle, item.value)]\n    }), renderTooltip && selectedIndex === index && _jsx(View, {\n      style: {\n        position: 'absolute',\n        bottom: barHeight + 60,\n        left: index === data.length - 1 ? leftSpacing - leftShiftForLastIndexTooltip : leftSpacing - ((_ref10 = (_item$leftShiftForToo = item == null ? void 0 : item.leftShiftForTooltip) != null ? _item$leftShiftForToo : leftShiftForTooltip) != null ? _ref10 : 0),\n        zIndex: 1000\n      },\n      children: renderTooltip(item, index)\n    })]\n  });\n};\nexport default RenderBars;","map":{"version":3,"names":["React","View","TouchableOpacity","Animated","Text","ThreeDBar","AnimatedBar","LinearGradient","Animated2DWithGradient","Cap","BarBackgroundPattern","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RenderBars","props","_ref10","_item$leftShiftForToo","item","index","containerHeight","maxValue","minHeight","spacing","propSpacing","side","data","barStyle","barBorderRadius","barBorderTopLeftRadius","barBorderTopRightRadius","barBorderBottomLeftRadius","barBorderBottomRightRadius","isThreeD","isAnimated","rotateLabel","appearingOpacity","opacity","animationDuration","autoShiftLabels","label","labelTextStyle","xAxisTextNumberOfLines","renderTooltip","leftShiftForTooltip","leftShiftForLastIndexTooltip","initialSpacing","selectedIndex","setSelectedIndex","xAxisThickness","horizontal","rtl","barMarginBottom","renderLabel","value","style","width","labelWidth","barWidth","left","position","bottom","transform","rotate","translateX","translateY","children","labelComponent","textAlign","numberOfLines","renderAnimatedLabel","static2DWithGradient","_ref","_item$barBorderRadius","_ref2","_ref3","_item$barBorderTopLef","_ref4","_ref5","_item$barBorderTopRig","_ref6","_ref7","_item$barBorderBottom","_ref8","_ref9","_item$barBorderBottom2","height","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","roundedBottom","cappedBars","capRadius","roundedTop","start","x","y","end","colors","gradientColor","frontColor","capThicknessFromItem","capThickness","capThicknessFromProps","capColorFromItem","capColor","capColorFromProps","capRadiusFromItem","capRadiusFromProps","barBackgroundPattern","barBackgroundPatternFromItem","barBackgroundPatternFromProps","patternIdFromItem","patternId","patternIdFromProps","topLabelComponent","top","justifyContent","intactTopLabel","alignItems","topLabelContainerStyle","barHeight","Math","max","abs","leftSpacing","i","_data$i$spacing","disabled","disablePress","activeOpacity","onPress","marginBottom","marginRight","rotateZ","zIndex","length","showXAxisIndices","showXAxisIndex","xAxisIndicesHeight","xAxisIndicesWidth","backgroundColor","xAxisIndicesColor","sideWidth","sideColor","topColor","showGradient","color","noGradient","noAnimation"],"sources":["C:/Users/gisele_anjos/Documents/sa.ReactNative2semestre/node_modules/react-native-gifted-charts/src/BarChart/RenderBars.tsx"],"sourcesContent":["import React, {Component} from 'react';\nimport {View, TouchableOpacity, Animated, Text, ColorValue} from 'react-native';\nimport ThreeDBar from '../Components/ThreeDBar';\nimport AnimatedBar from '../Components/AnimatedBar';\nimport LinearGradient from 'react-native-linear-gradient';\nimport Animated2DWithGradient from './Animated2DWithGradient';\nimport Cap from '../Components/BarSpecificComponents/cap';\nimport BarBackgroundPattern from '../Components/BarSpecificComponents/barBackgroundPattern';\nimport {itemType} from './types';\n\ntype Props = {\n  style?: any;\n  width?: number;\n  height?: number;\n  minHeight: number;\n  color?: ColorValue;\n  showGradient?: boolean;\n  gradientColor?: any;\n  frontColor?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  topLabelComponent?: Component;\n  topLabelContainerStyle?: any;\n  opacity?: number;\n  side?: String;\n  labelTextStyle?: any;\n\n  item: itemType;\n  index: number;\n  label: String;\n  containerHeight?: number;\n  maxValue: number;\n  spacing: number;\n  propSpacing?: number;\n  data?: any;\n  barWidth?: number;\n  sideWidth?: number;\n  labelWidth?: number;\n\n  isThreeD?: boolean;\n  isAnimated?: boolean;\n  rotateLabel?: boolean;\n  animatedHeight?: any;\n  appearingOpacity?: any;\n  animationDuration?: number;\n  roundedTop?: boolean;\n  roundedBottom?: boolean;\n  disablePress?: boolean;\n  activeOpacity?: number;\n  cappedBars?: boolean;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n  showXAxisIndices: boolean;\n  xAxisIndicesHeight: number;\n  xAxisIndicesWidth: number;\n  xAxisIndicesColor: ColorValue;\n  horizontal: boolean;\n  rtl: boolean;\n  intactTopLabel: boolean;\n  barBorderRadius?: number;\n  barBorderTopLeftRadius?: number;\n  barBorderTopRightRadius?: number;\n  barBorderBottomLeftRadius?: number;\n  barBorderBottomRightRadius?: number;\n  autoShiftLabels?: boolean;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n  barMarginBottom?: number;\n  onPress?: Function;\n  xAxisTextNumberOfLines: number;\n  renderTooltip: Function | undefined;\n  leftShiftForTooltip?: number;\n  leftShiftForLastIndexTooltip: number;\n  initialSpacing: number;\n  selectedIndex: number;\n  setSelectedIndex: Function;\n  barStyle?: object;\n  xAxisThickness?: number;\n};\nconst RenderBars = (props: Props) => {\n  const {\n    item,\n    index,\n    containerHeight,\n    maxValue,\n    minHeight,\n    spacing,\n    propSpacing,\n    side,\n    data,\n    barStyle,\n    barBorderRadius,\n    barBorderTopLeftRadius,\n    barBorderTopRightRadius,\n    barBorderBottomLeftRadius,\n    barBorderBottomRightRadius,\n    // oldValue,\n\n    isThreeD,\n    isAnimated,\n    rotateLabel,\n    appearingOpacity,\n    opacity,\n    animationDuration,\n    autoShiftLabels,\n    label,\n    labelTextStyle,\n    xAxisTextNumberOfLines,\n    renderTooltip,\n    leftShiftForTooltip,\n    leftShiftForLastIndexTooltip,\n    initialSpacing,\n    selectedIndex,\n    setSelectedIndex,\n    xAxisThickness,\n    horizontal,\n    rtl,\n  } = props;\n\n  const barMarginBottom =\n    item.barMarginBottom === 0\n      ? 0\n      : item.barMarginBottom || props.barMarginBottom || 0;\n\n  const renderLabel = (label: String, labelTextStyle: any, value: number) => {\n    return (\n      <View\n        style={[\n          {\n            width:\n              (item.labelWidth ||\n                props.labelWidth ||\n                item.barWidth ||\n                props.barWidth ||\n                30) + spacing,\n            left: spacing / -2,\n            position: 'absolute',\n            bottom: (rotateLabel ? -40 : -25) - barMarginBottom,\n          },\n          rotateLabel\n            ? horizontal\n              ? {transform: [{rotate: '330deg'}]}\n              : {\n                  transform: [\n                    {rotate: value < 0 ? '240deg' : '60deg'},\n                    {translateX: value < 0 ? 56 : 0},\n                    {translateY: value < 0 ? 32 : 0},\n                  ],\n                }\n            : horizontal\n            ? {transform: [{rotate: '-90deg'}]}\n            : value < 0\n            ? {\n                transform: [\n                  {rotate: '180deg'},\n                  {translateY: autoShiftLabels ? 0 : 32},\n                ],\n              }\n            : {},\n        ]}>\n        {item.labelComponent ? (\n          item.labelComponent()\n        ) : (\n          <Text\n            style={[\n              {textAlign: 'center'},\n              rtl && {transform: [{rotate: '180deg'}]},\n              labelTextStyle,\n            ]}\n            numberOfLines={xAxisTextNumberOfLines}>\n            {label || ''}\n          </Text>\n        )}\n      </View>\n    );\n  };\n\n  const renderAnimatedLabel = (\n    label: String,\n    labelTextStyle: any,\n    value: number,\n  ) => {\n    return (\n      <Animated.View\n        style={[\n          {\n            width:\n              (item.labelWidth ||\n                props.labelWidth ||\n                item.barWidth ||\n                props.barWidth ||\n                30) + spacing,\n            left: spacing / -2,\n            position: 'absolute',\n            bottom: (rotateLabel ? -40 : -25) - barMarginBottom,\n            opacity: appearingOpacity,\n          },\n          value < 0 && {transform: [{rotate: '180deg'}]},\n          rotateLabel\n            ? horizontal\n              ? {transform: [{rotate: '330deg'}]}\n              : {transform: [{rotate: '60deg'}]}\n            : horizontal\n            ? {transform: [{rotate: '-90deg'}]}\n            : {},\n        ]}>\n        {item.labelComponent ? (\n          item.labelComponent()\n        ) : (\n          <Text\n            style={[\n              {textAlign: 'center'},\n              rtl && {transform: [{rotate: '180deg'}]},\n              labelTextStyle,\n            ]}\n            numberOfLines={xAxisTextNumberOfLines}>\n            {label || ''}\n          </Text>\n        )}\n      </Animated.View>\n    );\n  };\n\n  const static2DWithGradient = (item: itemType) => {\n    return (\n      <>\n        <LinearGradient\n          style={[\n            {\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              borderRadius: item.barBorderRadius ?? barBorderRadius ?? 0,\n              borderTopLeftRadius:\n                item.barBorderTopLeftRadius ??\n                barBorderTopLeftRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n              borderTopRightRadius:\n                item.barBorderTopRightRadius ??\n                barBorderTopRightRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n              borderBottomLeftRadius:\n                item.barBorderBottomLeftRadius ??\n                barBorderBottomLeftRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n              borderBottomRightRadius:\n                item.barBorderBottomRightRadius ??\n                barBorderBottomRightRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n            },\n            props.roundedBottom && {\n              borderBottomLeftRadius:\n                (item.barWidth || props.barWidth || 30) / 2,\n              borderBottomRightRadius:\n                (item.barWidth || props.barWidth || 30) / 2,\n            },\n            props.cappedBars && {\n              borderTopLeftRadius:\n                item.capRadius === 0\n                  ? 0\n                  : item.capRadius || props.capRadius || 0,\n              borderTopRightRadius:\n                item.capRadius === 0\n                  ? 0\n                  : item.capRadius || props.capRadius || 0,\n            },\n            props.roundedTop && {\n              borderTopLeftRadius: (item.barWidth || props.barWidth || 30) / 2,\n              borderTopRightRadius: (item.barWidth || props.barWidth || 30) / 2,\n            },\n          ]}\n          start={{x: 0, y: 0}}\n          end={{x: 0, y: 1}}\n          colors={[\n            item.gradientColor || props.gradientColor || 'white',\n            item.frontColor || props.frontColor || 'black',\n          ]}>\n          {props.cappedBars && item.value ? (\n            <Cap\n              capThicknessFromItem={item.capThickness}\n              capThicknessFromProps={props.capThickness}\n              capColorFromItem={item.capColor}\n              capColorFromProps={props.capColor}\n              capRadiusFromItem={item.capRadius}\n              capRadiusFromProps={props.capRadius}\n            />\n          ) : null}\n        </LinearGradient>\n        {(item.barBackgroundPattern || props.barBackgroundPattern) && (\n          <BarBackgroundPattern\n            barBackgroundPatternFromItem={item.barBackgroundPattern}\n            barBackgroundPatternFromProps={props.barBackgroundPattern}\n            patternIdFromItem={item.patternId}\n            patternIdFromProps={props.patternId}\n          />\n        )}\n        {item.topLabelComponent && (\n          <View\n            style={[\n              {\n                position: 'absolute',\n                top: (item.barWidth || props.barWidth || 30) * -1,\n                height: item.barWidth || props.barWidth || 30,\n                width: item.barWidth || props.barWidth || 30,\n                justifyContent:\n                  (horizontal && !props.intactTopLabel) || item.value < 0\n                    ? 'center'\n                    : 'flex-end',\n                alignItems: 'center',\n              },\n              item.value < 0 && {transform: [{rotate: '180deg'}]},\n              horizontal &&\n                !props.intactTopLabel && {transform: [{rotate: '270deg'}]},\n              item.topLabelContainerStyle,\n            ]}>\n            {item.topLabelComponent()}\n          </View>\n        )}\n      </>\n    );\n  };\n\n  const barHeight = Math.max(\n    minHeight,\n    (Math.abs(item.value) * (containerHeight || 200)) / (maxValue || 200) -\n      (xAxisThickness ?? 0),\n  );\n\n  let leftSpacing = initialSpacing;\n  for (let i = 0; i < index; i++) {\n    leftSpacing +=\n      (data[i].spacing ?? propSpacing) +\n      (data[i].barWidth || props.barWidth || 30);\n  }\n\n  return (\n    <>\n      <TouchableOpacity\n        disabled={item.disablePress || props.disablePress}\n        activeOpacity={props.activeOpacity || 0.2}\n        onPress={() => {\n          if (renderTooltip) {\n            setSelectedIndex(index);\n          }\n          item.onPress\n            ? item.onPress()\n            : props.onPress\n            ? props.onPress(item, index)\n            : null;\n        }}\n        style={[\n          {\n            // overflow: 'visible',\n            marginBottom: 60 + barMarginBottom,\n            width: item.barWidth || props.barWidth || 30,\n            height: barHeight,\n            marginRight: spacing,\n          },\n          item.value < 0 && {\n            transform: [\n              {\n                translateY:\n                  (Math.abs(item.value) * (containerHeight || 200)) /\n                  (maxValue || 200),\n              },\n              {rotateZ: '180deg'},\n            ],\n          },\n          // !isThreeD && !item.showGradient && !props.showGradient &&\n          // { backgroundColor: item.frontColor || props.frontColor || 'black' },\n          side !== 'right' && {zIndex: data.length - index},\n        ]}>\n        {(props.showXAxisIndices || item.showXAxisIndex) && (\n          <View\n            style={{\n              zIndex: 2,\n              position: 'absolute',\n              height: props.xAxisIndicesHeight,\n              width: props.xAxisIndicesWidth,\n              bottom: props.xAxisIndicesHeight / -2,\n              left:\n                ((item.barWidth || props.barWidth || 30) -\n                  props.xAxisIndicesWidth) /\n                2,\n              backgroundColor: props.xAxisIndicesColor,\n            }}\n          />\n        )}\n        {isThreeD ? (\n          isAnimated ? (\n            <AnimatedBar\n              barBackgroundPattern={\n                item.barBackgroundPattern || props.barBackgroundPattern\n              }\n              patternId={item.patternId || props.patternId}\n              topLabelContainerStyle={item.topLabelContainerStyle}\n              width={item.barWidth || props.barWidth || 30}\n              barStyle={barStyle}\n              item={item}\n              sideWidth={\n                item.sideWidth ||\n                props.sideWidth ||\n                (item.barWidth || props.barWidth || 30) / 2\n              }\n              side={side || 'left'}\n              frontColor={item.frontColor || props.frontColor || ''}\n              sideColor={item.sideColor || props.sideColor || ''}\n              topColor={item.topColor || props.topColor || ''}\n              showGradient={item.showGradient || props.showGradient || false}\n              gradientColor={item.gradientColor || props.gradientColor}\n              topLabelComponent={item.topLabelComponent}\n              opacity={opacity || 1}\n              animationDuration={animationDuration || 800}\n              height={barHeight}\n              intactTopLabel={props.intactTopLabel}\n              horizontal={horizontal}\n            />\n          ) : (\n            <ThreeDBar\n              barBackgroundPattern={\n                item.barBackgroundPattern || props.barBackgroundPattern\n              }\n              patternId={item.patternId || props.patternId}\n              style={{}}\n              color={''}\n              topLabelContainerStyle={item.topLabelContainerStyle}\n              width={item.barWidth || props.barWidth || 30}\n              sideWidth={\n                item.sideWidth ||\n                props.sideWidth ||\n                (item.barWidth || props.barWidth || 30) / 2\n              }\n              barStyle={barStyle}\n              item={item}\n              side={side || 'left'}\n              frontColor={item.frontColor || props.frontColor || ''}\n              sideColor={item.sideColor || props.sideColor || ''}\n              topColor={item.topColor || props.topColor || ''}\n              showGradient={item.showGradient || props.showGradient || false}\n              gradientColor={item.gradientColor || props.gradientColor}\n              topLabelComponent={item.topLabelComponent || null}\n              opacity={opacity || 1}\n              horizontal={horizontal}\n              intactTopLabel={props.intactTopLabel}\n              height={barHeight}\n              value={item.value}\n            />\n          )\n        ) : item.showGradient || props.showGradient ? (\n          isAnimated ? (\n            <Animated2DWithGradient\n              barBackgroundPattern={props.barBackgroundPattern}\n              patternId={props.patternId}\n              barWidth={props.barWidth || 30}\n              barStyle={barStyle}\n              item={item}\n              opacity={opacity}\n              animationDuration={animationDuration || 800}\n              roundedBottom={props.roundedBottom || false}\n              roundedTop={props.roundedTop || false}\n              gradientColor={props.gradientColor}\n              frontColor={props.frontColor || 'black'}\n              containerHeight={containerHeight}\n              maxValue={maxValue}\n              height={barHeight}\n              minHeight={minHeight ?? 0}\n              barMarginBottom={barMarginBottom}\n              cappedBars={props.cappedBars}\n              capThickness={props.capThickness}\n              capColor={props.capColor}\n              capRadius={props.capRadius}\n              horizontal={horizontal}\n              intactTopLabel={props.intactTopLabel}\n              barBorderRadius={props.barBorderRadius || 0}\n              barBorderTopLeftRadius={barBorderTopLeftRadius}\n              barBorderTopRightRadius={barBorderTopRightRadius}\n              barBorderBottomLeftRadius={barBorderBottomLeftRadius}\n              barBorderBottomRightRadius={barBorderBottomRightRadius}\n            />\n          ) : (\n            static2DWithGradient(item)\n          )\n        ) : isAnimated ? (\n          <Animated2DWithGradient\n            barBackgroundPattern={props.barBackgroundPattern}\n            patternId={props.patternId}\n            barWidth={props.barWidth || 30}\n            barStyle={barStyle}\n            item={item}\n            opacity={opacity}\n            animationDuration={animationDuration || 800}\n            roundedBottom={props.roundedBottom || false}\n            roundedTop={props.roundedTop || false}\n            gradientColor={props.gradientColor}\n            noGradient\n            frontColor={props.frontColor || 'black'}\n            containerHeight={containerHeight}\n            maxValue={maxValue}\n            height={barHeight}\n            minHeight={minHeight || 0}\n            barMarginBottom={barMarginBottom}\n            cappedBars={props.cappedBars}\n            capThickness={props.capThickness}\n            capColor={props.capColor}\n            capRadius={props.capRadius}\n            horizontal={horizontal}\n            intactTopLabel={props.intactTopLabel}\n            barBorderRadius={props.barBorderRadius || 0}\n            barBorderTopLeftRadius={barBorderTopLeftRadius}\n            barBorderTopRightRadius={barBorderTopRightRadius}\n            barBorderBottomLeftRadius={barBorderBottomLeftRadius}\n            barBorderBottomRightRadius={barBorderBottomRightRadius}\n          />\n        ) : (\n          <Animated2DWithGradient\n            barBackgroundPattern={props.barBackgroundPattern}\n            patternId={props.patternId}\n            barWidth={props.barWidth || 30}\n            barStyle={barStyle}\n            item={item}\n            opacity={opacity}\n            animationDuration={animationDuration || 800}\n            roundedBottom={props.roundedBottom || false}\n            roundedTop={props.roundedTop || false}\n            gradientColor={props.gradientColor}\n            noGradient\n            noAnimation\n            frontColor={props.frontColor || 'black'}\n            containerHeight={containerHeight}\n            maxValue={maxValue}\n            height={barHeight}\n            minHeight={minHeight || 0}\n            barMarginBottom={barMarginBottom}\n            cappedBars={props.cappedBars}\n            capThickness={props.capThickness}\n            capColor={props.capColor}\n            capRadius={props.capRadius}\n            horizontal={horizontal}\n            intactTopLabel={props.intactTopLabel}\n            barBorderRadius={props.barBorderRadius || 0}\n            barBorderTopLeftRadius={barBorderTopLeftRadius}\n            barBorderTopRightRadius={barBorderTopRightRadius}\n            barBorderBottomLeftRadius={barBorderBottomLeftRadius}\n            barBorderBottomRightRadius={barBorderBottomRightRadius}\n          />\n        )}\n        {isAnimated\n          ? renderAnimatedLabel(label, labelTextStyle, item.value)\n          : renderLabel(label, labelTextStyle, item.value)}\n      </TouchableOpacity>\n      {renderTooltip && selectedIndex === index && (\n        <View\n          style={{\n            position: 'absolute',\n            bottom: barHeight + 60,\n            left:\n              index === data.length - 1\n                ? leftSpacing - leftShiftForLastIndexTooltip\n                : leftSpacing -\n                  (item?.leftShiftForTooltip ?? leftShiftForTooltip ?? 0),\n            zIndex: 1000,\n          }}>\n          {renderTooltip(item, index)}\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default RenderBars;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}