{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _reactNative = require(\"react-native\");\nfunction getScaledAssetPath(asset) {\n  var scale = AssetSourceResolver.pickScale(asset.scales, _reactNative.PixelRatio.get());\n  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  var type = !asset.type ? '' : \".\" + asset.type;\n  if (__DEV__) {\n    return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n  } else {\n    return asset.httpServerLocation.replace(/\\.\\.\\//g, '_') + '/' + asset.name + scaleSuffix + type;\n  }\n}\nvar AssetSourceResolver = exports.default = function () {\n  function AssetSourceResolver(serverUrl, jsbundleUrl, asset) {\n    (0, _classCallCheck2.default)(this, AssetSourceResolver);\n    this.serverUrl = serverUrl || 'https://expo.dev';\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n  (0, _createClass2.default)(AssetSourceResolver, [{\n    key: \"isLoadedFromServer\",\n    value: function isLoadedFromServer() {\n      return true;\n    }\n  }, {\n    key: \"isLoadedFromFileSystem\",\n    value: function isLoadedFromFileSystem() {\n      return false;\n    }\n  }, {\n    key: \"defaultAsset\",\n    value: function defaultAsset() {\n      return this.assetServerURL();\n    }\n  }, {\n    key: \"assetServerURL\",\n    value: function assetServerURL() {\n      var fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n      fromUrl.searchParams.set('platform', _expoModulesCore.Platform.OS);\n      fromUrl.searchParams.set('hash', this.asset.hash);\n      return this.fromSource(fromUrl.toString().replace(fromUrl.origin, ''));\n    }\n  }, {\n    key: \"fromSource\",\n    value: function fromSource(source) {\n      var _this$asset$width, _this$asset$height;\n      return {\n        __packager_asset: true,\n        width: (_this$asset$width = this.asset.width) != null ? _this$asset$width : undefined,\n        height: (_this$asset$height = this.asset.height) != null ? _this$asset$height : undefined,\n        uri: source,\n        scale: AssetSourceResolver.pickScale(this.asset.scales, _reactNative.PixelRatio.get())\n      };\n    }\n  }], [{\n    key: \"pickScale\",\n    value: function pickScale(scales, deviceScale) {\n      for (var i = 0; i < scales.length; i++) {\n        if (scales[i] >= deviceScale) {\n          return scales[i];\n        }\n      }\n      return scales[scales.length - 1] || 1;\n    }\n  }]);\n  return AssetSourceResolver;\n}();","map":{"version":3,"names":["_expoModulesCore","require","_reactNative","getScaledAssetPath","asset","scale","AssetSourceResolver","pickScale","scales","PixelRatio","get","scaleSuffix","type","__DEV__","httpServerLocation","name","replace","exports","default","serverUrl","jsbundleUrl","_classCallCheck2","_createClass2","key","value","isLoadedFromServer","isLoadedFromFileSystem","defaultAsset","assetServerURL","fromUrl","URL","searchParams","set","Platform","OS","hash","fromSource","toString","origin","source","_this$asset$width","_this$asset$height","__packager_asset","width","undefined","height","uri","deviceScale","i","length"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\expo-asset\\src\\AssetSourceResolver.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport { PixelRatio } from 'react-native';\nimport { PackagerAsset } from 'react-native/Libraries/Image/AssetRegistry';\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\n// Returns the Metro dev server-specific asset location.\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const type = !asset.type ? '' : `.${asset.type}`;\n  if (__DEV__) {\n    return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n  } else {\n    return asset.httpServerLocation.replace(/\\.\\.\\//g, '_') + '/' + asset.name + scaleSuffix + type;\n  }\n}\n\nexport default class AssetSourceResolver {\n  serverUrl: string;\n  // where the jsbundle is being run from\n  // NOTE(EvanBacon): Never defined on web.\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl || 'https://expo.dev';\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n\n  // Always true for web runtimes\n  isLoadedFromServer(): boolean {\n    return true;\n  }\n\n  // Always false for web runtimes\n  isLoadedFromFileSystem(): boolean {\n    return false;\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    return this.assetServerURL();\n  }\n\n  /**\n   * @returns absolute remote URL for the hosted asset.\n   */\n  assetServerURL(): ResolvedAssetSource {\n    const fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n    fromUrl.searchParams.set('platform', Platform.OS);\n    fromUrl.searchParams.set('hash', this.asset.hash);\n    return this.fromSource(\n      // Relative on web\n      fromUrl.toString().replace(fromUrl.origin, '')\n    );\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width ?? undefined,\n      height: this.asset.height ?? undefined,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}