{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Rule from \"../lineSvg\";\nimport { styles } from \"../../LineChart/styles\";\nimport { AxesAndRulesDefaults, yAxisSides } from \"../../utils/constants\";\nimport { computeMaxAndMinItems, getLabelTextUtil } from \"../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var renderHorizSections = function renderHorizSections(props) {\n  var _secondaryYAxis$noOfS, _secondaryYAxis$showF, _secondaryYAxis$round, _secondaryYAxis$noOfS2, _secondaryYAxis$showY, _secondaryYAxis$yAxis, _secondaryYAxis$yAxis2, _secondaryYAxis$yAxis3, _secondaryYAxis$yAxis4, _secondaryYAxis$yAxis5, _secondaryYAxis$yAxis6, _secondaryYAxis$yAxis7, _secondaryYAxis$yAxis8, _secondaryYAxis$yAxis9, _secondaryYAxis$yAxis10, _secondaryYAxis$yAxis11, _secondaryYAxis$hideY, _secondaryYAxis$yAxis12, _secondaryYAxis$yAxis13, _secondaryYAxis$hideO, _secondaryYAxisConfig, _secondaryYAxisConfig2, _secondaryYAxisConfig3, _secondaryYAxisConfig4, _secondaryYAxisConfig5, _referenceLinesConfig, _referenceLinesConfig2, _referenceLinesConfig3, _referenceLinesConfig4, _referenceLinesConfig5, _referenceLinesConfig6;\n  var chartType = props.chartType,\n    width = props.width,\n    h = props.horizSections,\n    noOfSectionsBelowXAxis = props.noOfSectionsBelowXAxis,\n    totalWidth = props.totalWidth,\n    endSpacing = props.endSpacing,\n    yAxisSide = props.yAxisSide,\n    horizontalRulesStyle = props.horizontalRulesStyle,\n    noOfSections = props.noOfSections,\n    stepHeight = props.stepHeight,\n    yAxisLabelWidth = props.yAxisLabelWidth,\n    yAxisLabelContainerStyle = props.yAxisLabelContainerStyle,\n    yAxisThickness = props.yAxisThickness,\n    yAxisColor = props.yAxisColor,\n    xAxisThickness = props.xAxisThickness,\n    xAxisColor = props.xAxisColor,\n    xAxisLength = props.xAxisLength,\n    xAxisType = props.xAxisType,\n    dashWidth = props.dashWidth,\n    dashGap = props.dashGap,\n    backgroundColor = props.backgroundColor,\n    hideRules = props.hideRules,\n    rulesLength = props.rulesLength,\n    rulesType = props.rulesType,\n    rulesThickness = props.rulesThickness,\n    rulesColor = props.rulesColor,\n    spacing = props.spacing,\n    showYAxisIndices = props.showYAxisIndices,\n    yAxisIndicesHeight = props.yAxisIndicesHeight,\n    yAxisIndicesWidth = props.yAxisIndicesWidth,\n    yAxisIndicesColor = props.yAxisIndicesColor,\n    hideOrigin = props.hideOrigin,\n    hideYAxisText = props.hideYAxisText,\n    showFractionalValues = props.showFractionalValues,\n    yAxisTextNumberOfLines = props.yAxisTextNumberOfLines,\n    yAxisLabelPrefix = props.yAxisLabelPrefix,\n    yAxisLabelSuffix = props.yAxisLabelSuffix,\n    yAxisTextStyle = props.yAxisTextStyle,\n    rotateYAxisTexts = props.rotateYAxisTexts,\n    rtl = props.rtl,\n    containerHeight = props.containerHeight,\n    maxValue = props.maxValue,\n    referenceLinesConfig = props.referenceLinesConfig,\n    yAxisLabelTexts = props.yAxisLabelTexts,\n    yAxisOffset = props.yAxisOffset,\n    horizontal = props.horizontal,\n    yAxisAtTop = props.yAxisAtTop,\n    stepValue = props.stepValue,\n    roundToDigits = props.roundToDigits,\n    secondaryData = props.secondaryData,\n    secondaryYAxis = props.secondaryYAxis;\n  var secondaryYAxisConfig = {\n    noOfSections: (_secondaryYAxis$noOfS = secondaryYAxis == null ? void 0 : secondaryYAxis.noOfSections) != null ? _secondaryYAxis$noOfS : noOfSections,\n    maxValue: secondaryYAxis == null ? void 0 : secondaryYAxis.maxValue,\n    mostNegativeValue: secondaryYAxis == null ? void 0 : secondaryYAxis.mostNegativeValue,\n    stepValue: secondaryYAxis == null ? void 0 : secondaryYAxis.stepValue,\n    stepHeight: secondaryYAxis == null ? void 0 : secondaryYAxis.stepHeight,\n    showFractionalValues: (_secondaryYAxis$showF = secondaryYAxis == null ? void 0 : secondaryYAxis.showFractionalValues) != null ? _secondaryYAxis$showF : showFractionalValues,\n    roundToDigits: (_secondaryYAxis$round = secondaryYAxis == null ? void 0 : secondaryYAxis.roundToDigits) != null ? _secondaryYAxis$round : roundToDigits,\n    noOfSectionsBelowXAxis: (_secondaryYAxis$noOfS2 = secondaryYAxis == null ? void 0 : secondaryYAxis.noOfSectionsBelowXAxis) != null ? _secondaryYAxis$noOfS2 : noOfSectionsBelowXAxis,\n    showYAxisIndices: (_secondaryYAxis$showY = secondaryYAxis == null ? void 0 : secondaryYAxis.showYAxisIndices) != null ? _secondaryYAxis$showY : showYAxisIndices,\n    yAxisIndicesHeight: (_secondaryYAxis$yAxis = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisIndicesHeight) != null ? _secondaryYAxis$yAxis : yAxisIndicesHeight,\n    yAxisIndicesWidth: (_secondaryYAxis$yAxis2 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisIndicesWidth) != null ? _secondaryYAxis$yAxis2 : yAxisIndicesWidth,\n    yAxisIndicesColor: (_secondaryYAxis$yAxis3 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisIndicesColor) != null ? _secondaryYAxis$yAxis3 : yAxisIndicesColor,\n    yAxisSide: (_secondaryYAxis$yAxis4 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisSide) != null ? _secondaryYAxis$yAxis4 : yAxisSide,\n    yAxisOffset: secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisOffset,\n    yAxisThickness: (_secondaryYAxis$yAxis5 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisThickness) != null ? _secondaryYAxis$yAxis5 : yAxisThickness,\n    yAxisColor: (_secondaryYAxis$yAxis6 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisColor) != null ? _secondaryYAxis$yAxis6 : yAxisColor,\n    yAxisLabelContainerStyle: (_secondaryYAxis$yAxis7 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelContainerStyle) != null ? _secondaryYAxis$yAxis7 : yAxisLabelContainerStyle,\n    yAxisLabelTexts: (_secondaryYAxis$yAxis8 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelTexts) != null ? _secondaryYAxis$yAxis8 : yAxisLabelTexts,\n    yAxisTextStyle: (_secondaryYAxis$yAxis9 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisTextStyle) != null ? _secondaryYAxis$yAxis9 : yAxisTextStyle,\n    yAxisTextNumberOfLines: (_secondaryYAxis$yAxis10 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisTextNumberOfLines) != null ? _secondaryYAxis$yAxis10 : yAxisTextNumberOfLines,\n    yAxisLabelWidth: (_secondaryYAxis$yAxis11 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelWidth) != null ? _secondaryYAxis$yAxis11 : yAxisLabelWidth,\n    hideYAxisText: (_secondaryYAxis$hideY = secondaryYAxis == null ? void 0 : secondaryYAxis.hideYAxisText) != null ? _secondaryYAxis$hideY : hideYAxisText,\n    yAxisLabelPrefix: (_secondaryYAxis$yAxis12 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelPrefix) != null ? _secondaryYAxis$yAxis12 : yAxisLabelPrefix,\n    yAxisLabelSuffix: (_secondaryYAxis$yAxis13 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelSuffix) != null ? _secondaryYAxis$yAxis13 : yAxisLabelSuffix,\n    hideOrigin: (_secondaryYAxis$hideO = secondaryYAxis == null ? void 0 : secondaryYAxis.hideOrigin) != null ? _secondaryYAxis$hideO : hideOrigin\n  };\n  var _computeMaxAndMinItem = computeMaxAndMinItems(secondaryData, secondaryYAxisConfig.roundToDigits, secondaryYAxisConfig.showFractionalValues),\n    maxItem = _computeMaxAndMinItem.maxItem,\n    minItem = _computeMaxAndMinItem.minItem;\n  secondaryYAxisConfig.maxValue = (_secondaryYAxisConfig = secondaryYAxisConfig.maxValue) != null ? _secondaryYAxisConfig : maxItem || maxValue;\n  secondaryYAxisConfig.mostNegativeValue = (_secondaryYAxisConfig2 = secondaryYAxisConfig.mostNegativeValue) != null ? _secondaryYAxisConfig2 : minItem;\n  secondaryYAxisConfig.stepValue = (_secondaryYAxisConfig3 = secondaryYAxisConfig.stepValue) != null ? _secondaryYAxisConfig3 : secondaryYAxisConfig.maxValue / ((_secondaryYAxisConfig4 = secondaryYAxisConfig.noOfSections) != null ? _secondaryYAxisConfig4 : noOfSections);\n  secondaryYAxisConfig.stepHeight = secondaryYAxisConfig.stepHeight || containerHeight / ((_secondaryYAxisConfig5 = secondaryYAxisConfig.noOfSections) != null ? _secondaryYAxisConfig5 : noOfSections);\n  var horizSections = [];\n  for (var i = 0; i <= noOfSections; i++) {\n    var _yAxisLabelTexts;\n    var value = maxValue - stepValue * i;\n    if (showFractionalValues || roundToDigits) {\n      value = parseFloat(value.toFixed(roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits));\n    }\n    horizSections.push({\n      value: yAxisLabelTexts != null && yAxisLabelTexts.length ? (_yAxisLabelTexts = yAxisLabelTexts[noOfSections + noOfSectionsBelowXAxis - i]) != null ? _yAxisLabelTexts : value.toString() : value.toString()\n    });\n  }\n  var horizSectionsBelow = [];\n  if (noOfSectionsBelowXAxis) {\n    for (var _i = 1; _i <= noOfSectionsBelowXAxis; _i++) {\n      var _props$yAxisLabelText;\n      var _value = stepValue * -_i;\n      if (showFractionalValues || roundToDigits) {\n        _value = parseFloat(_value.toFixed(roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits));\n      }\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts ? (_props$yAxisLabelText = props.yAxisLabelTexts[noOfSectionsBelowXAxis - _i]) != null ? _props$yAxisLabelText : _value.toString() : _value.toString()\n      });\n    }\n  }\n  var secondaryHorizSections = [];\n  if (secondaryYAxis) {\n    for (var _i2 = 0; _i2 <= ((_secondaryYAxisConfig6 = secondaryYAxisConfig.noOfSections) != null ? _secondaryYAxisConfig6 : noOfSections); _i2++) {\n      var _secondaryYAxisConfig6, _secondaryYAxisConfig8, _secondaryYAxisConfig9;\n      var _value2 = secondaryYAxisConfig.stepValue * _i2;\n      if (secondaryYAxisConfig.showFractionalValues || secondaryYAxisConfig.roundToDigits) {\n        var _secondaryYAxisConfig7;\n        _value2 = parseFloat(_value2.toFixed((_secondaryYAxisConfig7 = secondaryYAxisConfig.roundToDigits) != null ? _secondaryYAxisConfig7 : AxesAndRulesDefaults.roundToDigits));\n      }\n      secondaryHorizSections.push({\n        value: (_secondaryYAxisConfig8 = secondaryYAxisConfig.yAxisLabelTexts) != null && _secondaryYAxisConfig8.length ? (_secondaryYAxisConfig9 = secondaryYAxisConfig.yAxisLabelTexts[_i2 - noOfSectionsBelowXAxis - 1]) != null ? _secondaryYAxisConfig9 : _value2.toString() : _value2.toString()\n      });\n    }\n  }\n  var secondaryHorizSectionsBelow = [];\n  if (secondaryYAxisConfig.noOfSectionsBelowXAxis) {\n    for (var _i3 = 1; _i3 <= secondaryYAxisConfig.noOfSectionsBelowXAxis; _i3++) {\n      var _secondaryYAxisConfig11, _secondaryYAxisConfig12;\n      var _value3 = secondaryYAxisConfig.stepValue * (_i3 - secondaryYAxisConfig.noOfSectionsBelowXAxis - 1);\n      if (secondaryYAxisConfig.showFractionalValues || secondaryYAxisConfig.roundToDigits) {\n        var _secondaryYAxisConfig10;\n        _value3 = parseFloat(_value3.toFixed((_secondaryYAxisConfig10 = secondaryYAxisConfig.roundToDigits) != null ? _secondaryYAxisConfig10 : AxesAndRulesDefaults.roundToDigits));\n      }\n      secondaryHorizSectionsBelow.push({\n        value: (_secondaryYAxisConfig11 = secondaryYAxisConfig.yAxisLabelTexts) != null && _secondaryYAxisConfig11.length ? (_secondaryYAxisConfig12 = secondaryYAxisConfig.yAxisLabelTexts[_i3 - 1]) != null ? _secondaryYAxisConfig12 : _value3.toString() : _value3.toString()\n      });\n    }\n  }\n  var showReferenceLine1 = referenceLinesConfig.showReferenceLine1,\n    referenceLine1Position = referenceLinesConfig.referenceLine1Position,\n    referenceLine1Config = referenceLinesConfig.referenceLine1Config,\n    showReferenceLine2 = referenceLinesConfig.showReferenceLine2,\n    referenceLine2Position = referenceLinesConfig.referenceLine2Position,\n    referenceLine2Config = referenceLinesConfig.referenceLine2Config,\n    showReferenceLine3 = referenceLinesConfig.showReferenceLine3,\n    referenceLine3Position = referenceLinesConfig.referenceLine3Position,\n    referenceLine3Config = referenceLinesConfig.referenceLine3Config;\n  var defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: (width || totalWidth - spacing) + endSpacing,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null\n  };\n  showReferenceLine1 = referenceLinesConfig.showReferenceLine1 || false;\n  referenceLine1Position = (_referenceLinesConfig = referenceLinesConfig.referenceLine1Position) != null ? _referenceLinesConfig : referenceLinesConfig.referenceLine1Position || containerHeight / 2;\n  referenceLine1Config = referenceLinesConfig.referenceLine1Config ? {\n    thickness: referenceLinesConfig.referenceLine1Config.thickness || defaultReferenceConfig.thickness,\n    width: (_referenceLinesConfig2 = referenceLinesConfig.referenceLine1Config.width) != null ? _referenceLinesConfig2 : defaultReferenceConfig.width,\n    color: referenceLinesConfig.referenceLine1Config.color || defaultReferenceConfig.color,\n    type: referenceLinesConfig.referenceLine1Config.type || defaultReferenceConfig.type,\n    dashWidth: referenceLinesConfig.referenceLine1Config.dashWidth || defaultReferenceConfig.dashWidth,\n    dashGap: referenceLinesConfig.referenceLine1Config.dashGap || defaultReferenceConfig.dashGap,\n    labelText: referenceLinesConfig.referenceLine1Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: referenceLinesConfig.referenceLine1Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  showReferenceLine2 = referenceLinesConfig.showReferenceLine2 || false;\n  referenceLine2Position = (_referenceLinesConfig3 = referenceLinesConfig.referenceLine2Position) != null ? _referenceLinesConfig3 : referenceLinesConfig.referenceLine2Position || 3 * containerHeight / 2;\n  referenceLine2Config = referenceLinesConfig.referenceLine2Config ? {\n    thickness: referenceLinesConfig.referenceLine2Config.thickness || defaultReferenceConfig.thickness,\n    width: (_referenceLinesConfig4 = referenceLinesConfig.referenceLine2Config.width) != null ? _referenceLinesConfig4 : defaultReferenceConfig.width,\n    color: referenceLinesConfig.referenceLine2Config.color || defaultReferenceConfig.color,\n    type: referenceLinesConfig.referenceLine2Config.type || defaultReferenceConfig.type,\n    dashWidth: referenceLinesConfig.referenceLine2Config.dashWidth || defaultReferenceConfig.dashWidth,\n    dashGap: referenceLinesConfig.referenceLine2Config.dashGap || defaultReferenceConfig.dashGap,\n    labelText: referenceLinesConfig.referenceLine2Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: referenceLinesConfig.referenceLine2Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  showReferenceLine3 = referenceLinesConfig.showReferenceLine3 || false;\n  referenceLine3Position = (_referenceLinesConfig5 = referenceLinesConfig.referenceLine3Position) != null ? _referenceLinesConfig5 : referenceLinesConfig.referenceLine3Position || containerHeight / 3;\n  referenceLine3Config = referenceLinesConfig.referenceLine3Config ? {\n    thickness: referenceLinesConfig.referenceLine3Config.thickness || defaultReferenceConfig.thickness,\n    width: (_referenceLinesConfig6 = referenceLinesConfig.referenceLine3Config.width) != null ? _referenceLinesConfig6 : defaultReferenceConfig.width,\n    color: referenceLinesConfig.referenceLine3Config.color || defaultReferenceConfig.color,\n    type: referenceLinesConfig.referenceLine3Config.type || defaultReferenceConfig.type,\n    dashWidth: referenceLinesConfig.referenceLine3Config.dashWidth || defaultReferenceConfig.dashWidth,\n    dashGap: referenceLinesConfig.referenceLine3Config.dashGap || defaultReferenceConfig.dashGap,\n    labelText: referenceLinesConfig.referenceLine3Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: referenceLinesConfig.referenceLine3Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  var getLabelTexts = function getLabelTexts(val, index) {\n    return getLabelTextUtil(val, index, showFractionalValues, yAxisLabelTexts, yAxisOffset, yAxisLabelPrefix, yAxisLabelSuffix, roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits);\n  };\n  var getLabelTextsForSecondaryYAxis = function getLabelTextsForSecondaryYAxis(val, index) {\n    var showFractionalValues = secondaryYAxisConfig.showFractionalValues,\n      yAxisLabelTexts = secondaryYAxisConfig.yAxisLabelTexts,\n      yAxisOffset = secondaryYAxisConfig.yAxisOffset,\n      yAxisLabelPrefix = secondaryYAxisConfig.yAxisLabelPrefix,\n      yAxisLabelSuffix = secondaryYAxisConfig.yAxisLabelSuffix,\n      roundToDigits = secondaryYAxisConfig.roundToDigits;\n    return getLabelTextUtil(val, index, showFractionalValues, yAxisLabelTexts, yAxisOffset, yAxisLabelPrefix, yAxisLabelSuffix, roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits);\n  };\n  var renderAxesAndRules = function renderAxesAndRules(index) {\n    return _jsxs(View, {\n      style: [index === noOfSections ? styles.lastLeftPart : styles.leftPart, {\n        borderColor: yAxisColor,\n        backgroundColor: backgroundColor,\n        width: (props.width || totalWidth - spacing) + endSpacing\n      }, yAxisSide === yAxisSides.RIGHT ? {\n        borderRightWidth: yAxisThickness\n      } : {\n        borderLeftWidth: yAxisThickness\n      }],\n      children: [index === noOfSections ? _jsx(Rule, {\n        config: {\n          thickness: xAxisThickness,\n          color: xAxisColor,\n          width: xAxisLength || (props.width || totalWidth - spacing) + endSpacing,\n          dashWidth: dashWidth,\n          dashGap: dashGap,\n          type: xAxisType\n        }\n      }) : hideRules ? null : _jsx(Rule, {\n        config: {\n          thickness: rulesThickness,\n          color: rulesColor,\n          width: rulesLength || (props.width || totalWidth - spacing) + endSpacing,\n          dashWidth: dashWidth,\n          dashGap: dashGap,\n          type: rulesType\n        }\n      }), showYAxisIndices && index !== noOfSections ? _jsx(View, {\n        style: {\n          height: yAxisIndicesHeight,\n          width: yAxisIndicesWidth,\n          left: yAxisIndicesWidth / -2 + (yAxisSide === yAxisSides.RIGHT ? (width != null ? width : totalWidth) + yAxisLabelWidth / 2 + yAxisIndicesWidth / 4 : 0),\n          backgroundColor: yAxisIndicesColor\n        }\n      }) : null]\n    });\n  };\n  var renderSecondaryYaxisLabels = function renderSecondaryYaxisLabels(horizSections, isBelow) {\n    return horizSections.map(function (sectionItems, index) {\n      var _secondaryYAxisConfig13, _secondaryYAxisConfig14, _secondaryYAxisConfig15;\n      var label = getLabelTextsForSecondaryYAxis(sectionItems.value, index);\n      if (secondaryYAxisConfig.hideOrigin && index === secondaryHorizSections.length - 1) {\n        label = '';\n      }\n      return _jsxs(View, {\n        style: [styles.horizBar, styles.leftLabel, {\n          position: 'absolute',\n          zIndex: 1,\n          bottom: ((_secondaryYAxisConfig13 = secondaryYAxisConfig.stepHeight) != null ? _secondaryYAxisConfig13 : 0) * ((isBelow ? 0 : noOfSectionsBelowXAxis) + index - (noOfSectionsBelowXAxis ? 0 : 0.5)),\n          width: secondaryYAxisConfig.yAxisLabelWidth,\n          height: (_secondaryYAxisConfig14 = secondaryYAxisConfig.stepHeight) != null ? _secondaryYAxisConfig14 : 0\n        }, yAxisLabelContainerStyle],\n        children: [secondaryYAxisConfig.showYAxisIndices && index !== 0 ? _jsx(View, {\n          style: {\n            height: secondaryYAxisConfig.yAxisIndicesHeight,\n            width: secondaryYAxisConfig.yAxisIndicesWidth,\n            position: 'absolute',\n            left: ((_secondaryYAxisConfig15 = secondaryYAxisConfig.yAxisIndicesWidth) != null ? _secondaryYAxisConfig15 : 0) / -2,\n            backgroundColor: secondaryYAxisConfig.yAxisIndicesColor\n          }\n        }) : null, _jsx(Text, {\n          numberOfLines: secondaryYAxisConfig.yAxisTextNumberOfLines,\n          ellipsizeMode: 'clip',\n          style: [secondaryYAxisConfig.yAxisTextStyle],\n          children: label\n        })]\n      }, index);\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    children: [_jsxs(View, {\n      style: {\n        width: (width != null ? width : totalWidth) + endSpacing\n      },\n      children: [horizSections.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: (width != null ? width : totalWidth) + endSpacing\n          }, horizontal && !yAxisAtTop && {\n            transform: [{\n              rotateY: '180deg'\n            }]\n          }, horizontalRulesStyle],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              height: index === noOfSections ? stepHeight / 2 : stepHeight,\n              width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth\n            }, yAxisLabelContainerStyle]\n          }), renderAxesAndRules(index)]\n        }, index);\n      }), !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        var label = getLabelTexts(sectionItems.value, index);\n        if (hideOrigin && index === horizSections.length - 1) {\n          label = '';\n        }\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === yAxisSides.RIGHT && {\n            left: (width != null ? width : totalWidth) + yAxisLabelWidth / 2\n          }, horizontal && !yAxisAtTop && {\n            transform: [{\n              translateX: (width != null ? width : totalWidth) - 30 + endSpacing\n            }]\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, horizontal && {\n              transform: [{\n                rotate: (rotateYAxisTexts != null ? rotateYAxisTexts : rtl ? 90 : -90) + \"deg\"\n              }]\n            }, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), horizSectionsBelow.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: (width != null ? width : totalWidth) + 15\n          }, index === 0 && {\n            marginTop: stepHeight / 2\n          }],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              borderRightWidth: yAxisThickness,\n              borderColor: yAxisColor,\n              marginLeft: yAxisThickness\n            }, {\n              height: index === 0 ? stepHeight * 1.5 : stepHeight,\n              width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth\n            }, index === 0 && {\n              marginTop: -stepHeight / 2\n            }]\n          }), _jsx(View, {\n            style: [styles.leftPart, {\n              backgroundColor: backgroundColor\n            }],\n            children: hideRules ? null : _jsx(Rule, {\n              config: {\n                thickness: rulesThickness,\n                color: rulesColor,\n                width: rulesLength || (props.width || totalWidth - spacing) + endSpacing,\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: rulesType\n              }\n            })\n          })]\n        }, index);\n      }), !hideYAxisText && horizSectionsBelow.map(function (sectionItems, index) {\n        var label = getLabelTexts(horizSectionsBelow[horizSectionsBelow.length - 1 - index].value, index);\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            bottom: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === yAxisSides.RIGHT && {\n            left: (width != null ? width : totalWidth) + yAxisLabelWidth\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }],\n          children: [index === noOfSections && showReferenceLine1 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: (referenceLine1Position - (yAxisOffset != null ? yAxisOffset : 0)) * containerHeight / maxValue,\n              left: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth + yAxisThickness\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine1Config\n            }), referenceLine1Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, referenceLine1Config.labelTextStyle],\n              children: referenceLine1Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine2 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: (referenceLine2Position - (yAxisOffset != null ? yAxisOffset : 0)) * containerHeight / maxValue,\n              left: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth + yAxisThickness\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine2Config\n            }), referenceLine2Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, referenceLine2Config.labelTextStyle],\n              children: referenceLine2Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine3 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: (referenceLine3Position - (yAxisOffset != null ? yAxisOffset : 0)) * containerHeight / maxValue,\n              left: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth + yAxisThickness\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine3Config\n            }), referenceLine3Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, referenceLine3Config.labelTextStyle],\n              children: referenceLine3Config.labelText\n            }) : null]\n          }) : null]\n        }, index);\n      })]\n    }), secondaryYAxis ? _jsxs(View, {\n      style: {\n        width: secondaryYAxisConfig.yAxisLabelWidth,\n        left: width ? yAxisLabelWidth : yAxisLabelWidth - spacing,\n        borderColor: secondaryYAxisConfig.yAxisColor,\n        borderLeftWidth: secondaryYAxisConfig.yAxisThickness\n      },\n      children: [!secondaryYAxisConfig.hideYAxisText ? renderSecondaryYaxisLabels(secondaryHorizSections, false) : null, noOfSectionsBelowXAxis && !secondaryYAxisConfig.hideYAxisText ? renderSecondaryYaxisLabels(secondaryHorizSectionsBelow, true) : null]\n    }) : null]\n  });\n};","map":{"version":3,"names":["React","Text","View","Rule","styles","AxesAndRulesDefaults","yAxisSides","computeMaxAndMinItems","getLabelTextUtil","jsx","_jsx","jsxs","_jsxs","renderHorizSections","props","_secondaryYAxis$noOfS","_secondaryYAxis$showF","_secondaryYAxis$round","_secondaryYAxis$noOfS2","_secondaryYAxis$showY","_secondaryYAxis$yAxis","_secondaryYAxis$yAxis2","_secondaryYAxis$yAxis3","_secondaryYAxis$yAxis4","_secondaryYAxis$yAxis5","_secondaryYAxis$yAxis6","_secondaryYAxis$yAxis7","_secondaryYAxis$yAxis8","_secondaryYAxis$yAxis9","_secondaryYAxis$yAxis10","_secondaryYAxis$yAxis11","_secondaryYAxis$hideY","_secondaryYAxis$yAxis12","_secondaryYAxis$yAxis13","_secondaryYAxis$hideO","_secondaryYAxisConfig","_secondaryYAxisConfig2","_secondaryYAxisConfig3","_secondaryYAxisConfig4","_secondaryYAxisConfig5","_referenceLinesConfig","_referenceLinesConfig2","_referenceLinesConfig3","_referenceLinesConfig4","_referenceLinesConfig5","_referenceLinesConfig6","chartType","width","h","horizSections","noOfSectionsBelowXAxis","totalWidth","endSpacing","yAxisSide","horizontalRulesStyle","noOfSections","stepHeight","yAxisLabelWidth","yAxisLabelContainerStyle","yAxisThickness","yAxisColor","xAxisThickness","xAxisColor","xAxisLength","xAxisType","dashWidth","dashGap","backgroundColor","hideRules","rulesLength","rulesType","rulesThickness","rulesColor","spacing","showYAxisIndices","yAxisIndicesHeight","yAxisIndicesWidth","yAxisIndicesColor","hideOrigin","hideYAxisText","showFractionalValues","yAxisTextNumberOfLines","yAxisLabelPrefix","yAxisLabelSuffix","yAxisTextStyle","rotateYAxisTexts","rtl","containerHeight","maxValue","referenceLinesConfig","yAxisLabelTexts","yAxisOffset","horizontal","yAxisAtTop","stepValue","roundToDigits","secondaryData","secondaryYAxis","secondaryYAxisConfig","mostNegativeValue","_computeMaxAndMinItem","maxItem","minItem","i","_yAxisLabelTexts","value","parseFloat","toFixed","push","length","toString","horizSectionsBelow","_props$yAxisLabelText","secondaryHorizSections","_secondaryYAxisConfig6","_secondaryYAxisConfig8","_secondaryYAxisConfig9","_secondaryYAxisConfig7","secondaryHorizSectionsBelow","_secondaryYAxisConfig11","_secondaryYAxisConfig12","_secondaryYAxisConfig10","showReferenceLine1","referenceLine1Position","referenceLine1Config","showReferenceLine2","referenceLine2Position","referenceLine2Config","showReferenceLine3","referenceLine3Position","referenceLine3Config","defaultReferenceConfig","thickness","color","type","labelText","labelTextStyle","getLabelTexts","val","index","getLabelTextsForSecondaryYAxis","renderAxesAndRules","style","lastLeftPart","leftPart","borderColor","RIGHT","borderRightWidth","borderLeftWidth","children","config","height","left","renderSecondaryYaxisLabels","isBelow","map","sectionItems","_secondaryYAxisConfig13","_secondaryYAxisConfig14","_secondaryYAxisConfig15","label","horizBar","leftLabel","position","zIndex","bottom","numberOfLines","ellipsizeMode","flexDirection","transform","rotateY","top","translateX","rotate","marginBottom","marginTop","marginLeft"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-gifted-charts/src/Components/BarAndLineChartsWrapper/renderHorizSections.tsx"],"sourcesContent":["import React from 'react';\nimport {Text, View} from 'react-native';\nimport Rule from '../lineSvg';\nimport {styles} from '../../LineChart/styles';\nimport {\n  AxesAndRulesDefaults,\n  chartTypes,\n  yAxisSides,\n} from '../../utils/constants';\nimport {\n  HorizSectionsType,\n  horizSectionPropTypes,\n  secondaryYAxisType,\n} from '../../utils/types';\nimport {computeMaxAndMinItems, getLabelTextUtil} from '../../utils';\n\nexport const renderHorizSections = (props: horizSectionPropTypes) => {\n  const {\n    chartType,\n    width,\n    horizSections: h,\n    noOfSectionsBelowXAxis,\n    totalWidth,\n    endSpacing,\n    yAxisSide,\n    horizontalRulesStyle,\n    noOfSections,\n    stepHeight,\n    yAxisLabelWidth,\n    yAxisLabelContainerStyle,\n    yAxisThickness,\n    yAxisColor,\n    xAxisThickness,\n    xAxisColor,\n    xAxisLength,\n    xAxisType,\n    dashWidth,\n    dashGap,\n    backgroundColor,\n    hideRules,\n    rulesLength,\n    rulesType,\n    rulesThickness,\n    rulesColor,\n    spacing,\n    showYAxisIndices,\n    yAxisIndicesHeight,\n    yAxisIndicesWidth,\n    yAxisIndicesColor,\n\n    hideOrigin,\n    hideYAxisText,\n    showFractionalValues,\n    yAxisTextNumberOfLines,\n    yAxisLabelPrefix,\n    yAxisLabelSuffix,\n    yAxisTextStyle,\n    rotateYAxisTexts,\n    rtl,\n\n    containerHeight,\n    maxValue,\n\n    referenceLinesConfig,\n\n    yAxisLabelTexts,\n    yAxisOffset,\n\n    horizontal,\n    yAxisAtTop,\n\n    stepValue,\n    roundToDigits,\n\n    secondaryData,\n    secondaryYAxis,\n  } = props;\n\n  /***********************************************************************************************************************************\n   *                                                                                                                                  *\n   *****************************               secondary Y Axis related props computations               ******************************\n   *                                                                                                                                  *\n   ***********************************************************************************************************************************/\n\n  const secondaryYAxisConfig: secondaryYAxisType = {\n    noOfSections: secondaryYAxis?.noOfSections ?? noOfSections,\n    maxValue: secondaryYAxis?.maxValue,\n    mostNegativeValue: secondaryYAxis?.mostNegativeValue,\n    stepValue: secondaryYAxis?.stepValue,\n    stepHeight: secondaryYAxis?.stepHeight,\n\n    showFractionalValues:\n      secondaryYAxis?.showFractionalValues ?? showFractionalValues,\n    roundToDigits: secondaryYAxis?.roundToDigits ?? roundToDigits,\n    noOfSectionsBelowXAxis:\n      secondaryYAxis?.noOfSectionsBelowXAxis ?? noOfSectionsBelowXAxis,\n\n    showYAxisIndices: secondaryYAxis?.showYAxisIndices ?? showYAxisIndices,\n    yAxisIndicesHeight:\n      secondaryYAxis?.yAxisIndicesHeight ?? yAxisIndicesHeight,\n    yAxisIndicesWidth: secondaryYAxis?.yAxisIndicesWidth ?? yAxisIndicesWidth,\n    yAxisIndicesColor: secondaryYAxis?.yAxisIndicesColor ?? yAxisIndicesColor,\n\n    yAxisSide: secondaryYAxis?.yAxisSide ?? yAxisSide,\n    yAxisOffset: secondaryYAxis?.yAxisOffset,\n    yAxisThickness: secondaryYAxis?.yAxisThickness ?? yAxisThickness,\n    yAxisColor: secondaryYAxis?.yAxisColor ?? yAxisColor,\n    yAxisLabelContainerStyle:\n      secondaryYAxis?.yAxisLabelContainerStyle ?? yAxisLabelContainerStyle,\n    yAxisLabelTexts: secondaryYAxis?.yAxisLabelTexts ?? yAxisLabelTexts,\n    yAxisTextStyle: secondaryYAxis?.yAxisTextStyle ?? yAxisTextStyle,\n    yAxisTextNumberOfLines:\n      secondaryYAxis?.yAxisTextNumberOfLines ?? yAxisTextNumberOfLines,\n    yAxisLabelWidth: secondaryYAxis?.yAxisLabelWidth ?? yAxisLabelWidth,\n    hideYAxisText: secondaryYAxis?.hideYAxisText ?? hideYAxisText,\n    yAxisLabelPrefix: secondaryYAxis?.yAxisLabelPrefix ?? yAxisLabelPrefix,\n    yAxisLabelSuffix: secondaryYAxis?.yAxisLabelSuffix ?? yAxisLabelSuffix,\n    hideOrigin: secondaryYAxis?.hideOrigin ?? hideOrigin,\n  };\n\n  const {maxItem, minItem} = computeMaxAndMinItems(\n    secondaryData,\n    secondaryYAxisConfig.roundToDigits,\n    secondaryYAxisConfig.showFractionalValues,\n  );\n  secondaryYAxisConfig.maxValue =\n    secondaryYAxisConfig.maxValue ?? (maxItem || maxValue);\n  secondaryYAxisConfig.mostNegativeValue =\n    secondaryYAxisConfig.mostNegativeValue ?? minItem;\n  secondaryYAxisConfig.stepValue =\n    secondaryYAxisConfig.stepValue ??\n    secondaryYAxisConfig.maxValue /\n      (secondaryYAxisConfig.noOfSections ?? noOfSections);\n  secondaryYAxisConfig.stepHeight =\n    secondaryYAxisConfig.stepHeight ||\n    containerHeight / (secondaryYAxisConfig.noOfSections ?? noOfSections);\n\n  const horizSections: HorizSectionsType = [];\n  for (let i = 0; i <= noOfSections; i++) {\n    let value = maxValue - stepValue * i;\n    if (showFractionalValues || roundToDigits) {\n      value = parseFloat(\n        value.toFixed(roundToDigits ?? AxesAndRulesDefaults.roundToDigits),\n      );\n    }\n\n    horizSections.push({\n      value: yAxisLabelTexts?.length\n        ? yAxisLabelTexts[noOfSections + noOfSectionsBelowXAxis - i] ??\n          value.toString()\n        : value.toString(),\n    });\n  }\n\n  const horizSectionsBelow: HorizSectionsType = [];\n  if (noOfSectionsBelowXAxis) {\n    for (let i = 1; i <= noOfSectionsBelowXAxis; i++) {\n      let value = stepValue * -i;\n      if (showFractionalValues || roundToDigits) {\n        value = parseFloat(\n          value.toFixed(roundToDigits ?? AxesAndRulesDefaults.roundToDigits),\n        );\n      }\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts\n          ? props.yAxisLabelTexts[noOfSectionsBelowXAxis - i] ??\n            value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  const secondaryHorizSections: HorizSectionsType = [];\n  if (secondaryYAxis) {\n    for (\n      let i = 0;\n      i <= (secondaryYAxisConfig.noOfSections ?? noOfSections);\n      i++\n    ) {\n      let value = secondaryYAxisConfig.stepValue * i;\n      if (\n        secondaryYAxisConfig.showFractionalValues ||\n        secondaryYAxisConfig.roundToDigits\n      ) {\n        value = parseFloat(\n          value.toFixed(\n            secondaryYAxisConfig.roundToDigits ??\n              AxesAndRulesDefaults.roundToDigits,\n          ),\n        );\n      }\n      secondaryHorizSections.push({\n        value: secondaryYAxisConfig.yAxisLabelTexts?.length\n          ? secondaryYAxisConfig.yAxisLabelTexts[\n              i - noOfSectionsBelowXAxis - 1\n            ] ?? value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  const secondaryHorizSectionsBelow: HorizSectionsType = [];\n  if (secondaryYAxisConfig.noOfSectionsBelowXAxis) {\n    for (let i = 1; i <= secondaryYAxisConfig.noOfSectionsBelowXAxis; i++) {\n      let value =\n        secondaryYAxisConfig.stepValue *\n        (i - secondaryYAxisConfig.noOfSectionsBelowXAxis - 1);\n      if (\n        secondaryYAxisConfig.showFractionalValues ||\n        secondaryYAxisConfig.roundToDigits\n      ) {\n        value = parseFloat(\n          value.toFixed(\n            secondaryYAxisConfig.roundToDigits ??\n              AxesAndRulesDefaults.roundToDigits,\n          ),\n        );\n      }\n      secondaryHorizSectionsBelow.push({\n        value: secondaryYAxisConfig.yAxisLabelTexts?.length\n          ? secondaryYAxisConfig.yAxisLabelTexts[i - 1] ?? value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  /***********************************************************************************************************************************\n   ***********************************************************************************************************************************/\n\n  let {\n    showReferenceLine1,\n    referenceLine1Position,\n    referenceLine1Config,\n\n    showReferenceLine2,\n    referenceLine2Position,\n    referenceLine2Config,\n\n    showReferenceLine3,\n    referenceLine3Position,\n    referenceLine3Config,\n  } = referenceLinesConfig;\n\n  const defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: (width || totalWidth - spacing) + endSpacing,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null,\n  };\n\n  showReferenceLine1 = referenceLinesConfig.showReferenceLine1 || false;\n  referenceLine1Position =\n    referenceLinesConfig.referenceLine1Position ??\n    (referenceLinesConfig.referenceLine1Position || containerHeight / 2);\n  referenceLine1Config = referenceLinesConfig.referenceLine1Config\n    ? {\n        thickness:\n          referenceLinesConfig.referenceLine1Config.thickness ||\n          defaultReferenceConfig.thickness,\n        width:\n          referenceLinesConfig.referenceLine1Config.width ??\n          defaultReferenceConfig.width,\n        color:\n          referenceLinesConfig.referenceLine1Config.color ||\n          defaultReferenceConfig.color,\n        type:\n          referenceLinesConfig.referenceLine1Config.type ||\n          defaultReferenceConfig.type,\n        dashWidth:\n          referenceLinesConfig.referenceLine1Config.dashWidth ||\n          defaultReferenceConfig.dashWidth,\n        dashGap:\n          referenceLinesConfig.referenceLine1Config.dashGap ||\n          defaultReferenceConfig.dashGap,\n        labelText:\n          referenceLinesConfig.referenceLine1Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          referenceLinesConfig.referenceLine1Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  showReferenceLine2 = referenceLinesConfig.showReferenceLine2 || false;\n  referenceLine2Position =\n    referenceLinesConfig.referenceLine2Position ??\n    (referenceLinesConfig.referenceLine2Position || (3 * containerHeight) / 2);\n  referenceLine2Config = referenceLinesConfig.referenceLine2Config\n    ? {\n        thickness:\n          referenceLinesConfig.referenceLine2Config.thickness ||\n          defaultReferenceConfig.thickness,\n        width:\n          referenceLinesConfig.referenceLine2Config.width ??\n          defaultReferenceConfig.width,\n        color:\n          referenceLinesConfig.referenceLine2Config.color ||\n          defaultReferenceConfig.color,\n        type:\n          referenceLinesConfig.referenceLine2Config.type ||\n          defaultReferenceConfig.type,\n        dashWidth:\n          referenceLinesConfig.referenceLine2Config.dashWidth ||\n          defaultReferenceConfig.dashWidth,\n        dashGap:\n          referenceLinesConfig.referenceLine2Config.dashGap ||\n          defaultReferenceConfig.dashGap,\n        labelText:\n          referenceLinesConfig.referenceLine2Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          referenceLinesConfig.referenceLine2Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  showReferenceLine3 = referenceLinesConfig.showReferenceLine3 || false;\n  referenceLine3Position =\n    referenceLinesConfig.referenceLine3Position ??\n    (referenceLinesConfig.referenceLine3Position || containerHeight / 3);\n  referenceLine3Config = referenceLinesConfig.referenceLine3Config\n    ? {\n        thickness:\n          referenceLinesConfig.referenceLine3Config.thickness ||\n          defaultReferenceConfig.thickness,\n        width:\n          referenceLinesConfig.referenceLine3Config.width ??\n          defaultReferenceConfig.width,\n        color:\n          referenceLinesConfig.referenceLine3Config.color ||\n          defaultReferenceConfig.color,\n        type:\n          referenceLinesConfig.referenceLine3Config.type ||\n          defaultReferenceConfig.type,\n        dashWidth:\n          referenceLinesConfig.referenceLine3Config.dashWidth ||\n          defaultReferenceConfig.dashWidth,\n        dashGap:\n          referenceLinesConfig.referenceLine3Config.dashGap ||\n          defaultReferenceConfig.dashGap,\n        labelText:\n          referenceLinesConfig.referenceLine3Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          referenceLinesConfig.referenceLine3Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  const getLabelTexts = (val, index) => {\n    return getLabelTextUtil(\n      val,\n      index,\n      showFractionalValues,\n      yAxisLabelTexts,\n      yAxisOffset,\n      yAxisLabelPrefix,\n      yAxisLabelSuffix,\n      roundToDigits ?? AxesAndRulesDefaults.roundToDigits,\n    );\n  };\n\n  const getLabelTextsForSecondaryYAxis = (val, index) => {\n    const {\n      showFractionalValues,\n      yAxisLabelTexts,\n      yAxisOffset,\n      yAxisLabelPrefix,\n      yAxisLabelSuffix,\n      roundToDigits,\n    } = secondaryYAxisConfig;\n    return getLabelTextUtil(\n      val,\n      index,\n      showFractionalValues,\n      yAxisLabelTexts,\n      yAxisOffset,\n      yAxisLabelPrefix,\n      yAxisLabelSuffix,\n      roundToDigits ?? AxesAndRulesDefaults.roundToDigits,\n    );\n  };\n\n  const renderAxesAndRules = (index: number) => (\n    <View\n      style={[\n        index === noOfSections ? styles.lastLeftPart : styles.leftPart,\n        {\n          borderColor: yAxisColor,\n          backgroundColor: backgroundColor,\n          width: (props.width || totalWidth - spacing) + endSpacing,\n        },\n        yAxisSide === yAxisSides.RIGHT\n          ? {borderRightWidth: yAxisThickness}\n          : {borderLeftWidth: yAxisThickness},\n      ]}>\n      {index === noOfSections ? (\n        <Rule\n          config={{\n            thickness: xAxisThickness,\n            color: xAxisColor,\n            width:\n              xAxisLength || (props.width || totalWidth - spacing) + endSpacing,\n            dashWidth: dashWidth,\n            dashGap: dashGap,\n            type: xAxisType,\n          }}\n        />\n      ) : hideRules ? null : (\n        <Rule\n          config={{\n            thickness: rulesThickness,\n            color: rulesColor,\n            width:\n              rulesLength || (props.width || totalWidth - spacing) + endSpacing,\n            dashWidth: dashWidth,\n            dashGap: dashGap,\n            type: rulesType,\n          }}\n        />\n      )}\n      {showYAxisIndices && index !== noOfSections ? (\n        <View\n          style={{\n            height: yAxisIndicesHeight,\n            width: yAxisIndicesWidth,\n            left:\n              yAxisIndicesWidth / -2 +\n              (yAxisSide === yAxisSides.RIGHT\n                ? (width ?? totalWidth) +\n                  yAxisLabelWidth / 2 +\n                  yAxisIndicesWidth / 4\n                : 0),\n            backgroundColor: yAxisIndicesColor,\n          }}\n        />\n      ) : null}\n    </View>\n  );\n\n  const renderSecondaryYaxisLabels = (\n    horizSections: HorizSectionsType,\n    isBelow: boolean,\n  ) =>\n    horizSections.map((sectionItems, index) => {\n      let label = getLabelTextsForSecondaryYAxis(sectionItems.value, index);\n      if (\n        secondaryYAxisConfig.hideOrigin &&\n        index === secondaryHorizSections.length - 1\n      ) {\n        label = '';\n      }\n      return (\n        <View\n          key={index}\n          style={[\n            styles.horizBar,\n            styles.leftLabel,\n            {\n              position: 'absolute',\n              zIndex: 1,\n              bottom:\n                (secondaryYAxisConfig.stepHeight ?? 0) *\n                ((isBelow ? 0 : noOfSectionsBelowXAxis) +\n                  index -\n                  (noOfSectionsBelowXAxis ? 0 : 0.5)),\n              width: secondaryYAxisConfig.yAxisLabelWidth,\n              height: secondaryYAxisConfig.stepHeight ?? 0,\n            },\n            yAxisLabelContainerStyle,\n          ]}>\n          {secondaryYAxisConfig.showYAxisIndices && index !== 0 ? (\n            <View\n              style={{\n                height: secondaryYAxisConfig.yAxisIndicesHeight,\n                width: secondaryYAxisConfig.yAxisIndicesWidth,\n                position: 'absolute',\n                left: (secondaryYAxisConfig.yAxisIndicesWidth ?? 0) / -2,\n                backgroundColor: secondaryYAxisConfig.yAxisIndicesColor,\n              }}\n            />\n          ) : null}\n          <Text\n            numberOfLines={secondaryYAxisConfig.yAxisTextNumberOfLines}\n            ellipsizeMode={'clip'}\n            style={[secondaryYAxisConfig.yAxisTextStyle]}>\n            {label}\n          </Text>\n        </View>\n      );\n    });\n\n  return (\n    <View style={{flexDirection: 'row'}}>\n      <View style={{width: (width ?? totalWidth) + endSpacing}}>\n        {horizSections.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: (width ?? totalWidth) + endSpacing,\n                },\n                horizontal &&\n                  !yAxisAtTop && {\n                    transform: [{rotateY: '180deg'}],\n                  },\n                horizontalRulesStyle,\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    height:\n                      index === noOfSections ? stepHeight / 2 : stepHeight,\n                    width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth,\n                  },\n                  yAxisLabelContainerStyle,\n                ]}\n              />\n              {renderAxesAndRules(index)}\n            </View>\n          );\n        })}\n\n        {\n          /***********************************************************************************************/\n          /**************************      Render the y axis labels separately      **********************/\n          /***********************************************************************************************/\n\n          !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              let label = getLabelTexts(sectionItems.value, index);\n              if (hideOrigin && index === horizSections.length - 1) {\n                label = '';\n              }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === yAxisSides.RIGHT && {\n                      left: (width ?? totalWidth) + yAxisLabelWidth / 2,\n                    },\n                    horizontal &&\n                      !yAxisAtTop && {\n                        transform: [\n                          {\n                            translateX: (width ?? totalWidth) - 30 + endSpacing,\n                          },\n                        ],\n                      },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      horizontal && {\n                        transform: [\n                          {\n                            rotate: `${\n                              rotateYAxisTexts ?? (rtl ? 90 : -90)\n                            }deg`,\n                          },\n                        ],\n                      },\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n\n        {horizSectionsBelow.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: (width ?? totalWidth) + 15,\n                },\n                index === 0 && {marginTop: stepHeight / 2},\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    borderRightWidth: yAxisThickness,\n                    borderColor: yAxisColor,\n                    marginLeft: yAxisThickness,\n                  },\n                  {\n                    height: index === 0 ? stepHeight * 1.5 : stepHeight,\n                    width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth,\n                  },\n                  index === 0 && {marginTop: -stepHeight / 2},\n                ]}\n              />\n              <View\n                style={[styles.leftPart, {backgroundColor: backgroundColor}]}>\n                {hideRules ? null : (\n                  <Rule\n                    config={{\n                      thickness: rulesThickness,\n                      color: rulesColor,\n                      width:\n                        rulesLength ||\n                        (props.width || totalWidth - spacing) + endSpacing,\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: rulesType,\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          );\n        })}\n\n        {\n          /***********************************************************************************************/\n          /*************************      Render the y axis labels below origin      *********************/\n          /***********************************************************************************************/\n\n          !hideYAxisText &&\n            horizSectionsBelow.map((sectionItems, index) => {\n              let label = getLabelTexts(\n                horizSectionsBelow[horizSectionsBelow.length - 1 - index].value,\n                index,\n              );\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      bottom: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === yAxisSides.RIGHT && {\n                      left: (width ?? totalWidth) + yAxisLabelWidth,\n                    },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n\n        {\n          /***********************************************************************************************/\n          /*************************      Render the reference lines separately      *********************/\n          /***********************************************************************************************/\n\n          !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              // let label = getLabelTexts(sectionItems.value, index);\n              // if (hideOrigin && index === horizSections.length - 1) {\n              //   label = '';\n              // }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                  ]}>\n                  {index === noOfSections && showReferenceLine1 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          ((referenceLine1Position - (yAxisOffset ?? 0)) *\n                            containerHeight) /\n                          maxValue,\n                        left:\n                          yAxisSide === yAxisSides.RIGHT\n                            ? 0\n                            : yAxisLabelWidth + yAxisThickness,\n                      }}>\n                      <Rule config={referenceLine1Config} />\n                      {referenceLine1Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            referenceLine1Config.labelTextStyle,\n                          ]}>\n                          {referenceLine1Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine2 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          ((referenceLine2Position - (yAxisOffset ?? 0)) *\n                            containerHeight) /\n                          maxValue,\n                        left:\n                          yAxisSide === yAxisSides.RIGHT\n                            ? 0\n                            : yAxisLabelWidth + yAxisThickness,\n                      }}>\n                      <Rule config={referenceLine2Config} />\n                      {referenceLine2Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            referenceLine2Config.labelTextStyle,\n                          ]}>\n                          {referenceLine2Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine3 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          ((referenceLine3Position - (yAxisOffset ?? 0)) *\n                            containerHeight) /\n                          maxValue,\n                        left:\n                          yAxisSide === yAxisSides.RIGHT\n                            ? 0\n                            : yAxisLabelWidth + yAxisThickness,\n                      }}>\n                      <Rule config={referenceLine3Config} />\n                      {referenceLine3Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            referenceLine3Config.labelTextStyle,\n                          ]}>\n                          {referenceLine3Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n      </View>\n      {\n        /***********************************************************************************************/\n        /*************************      Render the secondary Y Axis                *********************/\n        /***********************************************************************************************/\n        secondaryYAxis ? (\n          <View\n            style={{\n              width: secondaryYAxisConfig.yAxisLabelWidth,\n              left: width ? yAxisLabelWidth : yAxisLabelWidth - spacing,\n              borderColor: secondaryYAxisConfig.yAxisColor,\n              borderLeftWidth: secondaryYAxisConfig.yAxisThickness,\n            }}>\n            {!secondaryYAxisConfig.hideYAxisText\n              ? renderSecondaryYaxisLabels(secondaryHorizSections, false)\n              : null}\n            {noOfSectionsBelowXAxis && !secondaryYAxisConfig.hideYAxisText\n              ? renderSecondaryYaxisLabels(secondaryHorizSectionsBelow, true)\n              : null}\n          </View>\n        ) : null\n      }\n    </View>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,IAAI;AACX,SAAQC,MAAM;AACd,SACEC,oBAAoB,EAEpBC,UAAU;AAOZ,SAAQC,qBAAqB,EAAEC,gBAAgB;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAA4B,EAAK;EAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,qBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACnE,IACEC,SAAS,GA0DPhC,KAAK,CA1DPgC,SAAS;IACTC,KAAK,GAyDHjC,KAAK,CAzDPiC,KAAK;IACUC,CAAC,GAwDdlC,KAAK,CAxDPmC,aAAa;IACbC,sBAAsB,GAuDpBpC,KAAK,CAvDPoC,sBAAsB;IACtBC,UAAU,GAsDRrC,KAAK,CAtDPqC,UAAU;IACVC,UAAU,GAqDRtC,KAAK,CArDPsC,UAAU;IACVC,SAAS,GAoDPvC,KAAK,CApDPuC,SAAS;IACTC,oBAAoB,GAmDlBxC,KAAK,CAnDPwC,oBAAoB;IACpBC,YAAY,GAkDVzC,KAAK,CAlDPyC,YAAY;IACZC,UAAU,GAiDR1C,KAAK,CAjDP0C,UAAU;IACVC,eAAe,GAgDb3C,KAAK,CAhDP2C,eAAe;IACfC,wBAAwB,GA+CtB5C,KAAK,CA/CP4C,wBAAwB;IACxBC,cAAc,GA8CZ7C,KAAK,CA9CP6C,cAAc;IACdC,UAAU,GA6CR9C,KAAK,CA7CP8C,UAAU;IACVC,cAAc,GA4CZ/C,KAAK,CA5CP+C,cAAc;IACdC,UAAU,GA2CRhD,KAAK,CA3CPgD,UAAU;IACVC,WAAW,GA0CTjD,KAAK,CA1CPiD,WAAW;IACXC,SAAS,GAyCPlD,KAAK,CAzCPkD,SAAS;IACTC,SAAS,GAwCPnD,KAAK,CAxCPmD,SAAS;IACTC,OAAO,GAuCLpD,KAAK,CAvCPoD,OAAO;IACPC,eAAe,GAsCbrD,KAAK,CAtCPqD,eAAe;IACfC,SAAS,GAqCPtD,KAAK,CArCPsD,SAAS;IACTC,WAAW,GAoCTvD,KAAK,CApCPuD,WAAW;IACXC,SAAS,GAmCPxD,KAAK,CAnCPwD,SAAS;IACTC,cAAc,GAkCZzD,KAAK,CAlCPyD,cAAc;IACdC,UAAU,GAiCR1D,KAAK,CAjCP0D,UAAU;IACVC,OAAO,GAgCL3D,KAAK,CAhCP2D,OAAO;IACPC,gBAAgB,GA+Bd5D,KAAK,CA/BP4D,gBAAgB;IAChBC,kBAAkB,GA8BhB7D,KAAK,CA9BP6D,kBAAkB;IAClBC,iBAAiB,GA6Bf9D,KAAK,CA7BP8D,iBAAiB;IACjBC,iBAAiB,GA4Bf/D,KAAK,CA5BP+D,iBAAiB;IAEjBC,UAAU,GA0BRhE,KAAK,CA1BPgE,UAAU;IACVC,aAAa,GAyBXjE,KAAK,CAzBPiE,aAAa;IACbC,oBAAoB,GAwBlBlE,KAAK,CAxBPkE,oBAAoB;IACpBC,sBAAsB,GAuBpBnE,KAAK,CAvBPmE,sBAAsB;IACtBC,gBAAgB,GAsBdpE,KAAK,CAtBPoE,gBAAgB;IAChBC,gBAAgB,GAqBdrE,KAAK,CArBPqE,gBAAgB;IAChBC,cAAc,GAoBZtE,KAAK,CApBPsE,cAAc;IACdC,gBAAgB,GAmBdvE,KAAK,CAnBPuE,gBAAgB;IAChBC,GAAG,GAkBDxE,KAAK,CAlBPwE,GAAG;IAEHC,eAAe,GAgBbzE,KAAK,CAhBPyE,eAAe;IACfC,QAAQ,GAeN1E,KAAK,CAfP0E,QAAQ;IAERC,oBAAoB,GAalB3E,KAAK,CAbP2E,oBAAoB;IAEpBC,eAAe,GAWb5E,KAAK,CAXP4E,eAAe;IACfC,WAAW,GAUT7E,KAAK,CAVP6E,WAAW;IAEXC,UAAU,GAQR9E,KAAK,CARP8E,UAAU;IACVC,UAAU,GAOR/E,KAAK,CAPP+E,UAAU;IAEVC,SAAS,GAKPhF,KAAK,CALPgF,SAAS;IACTC,aAAa,GAIXjF,KAAK,CAJPiF,aAAa;IAEbC,aAAa,GAEXlF,KAAK,CAFPkF,aAAa;IACbC,cAAc,GACZnF,KAAK,CADPmF,cAAc;EAShB,IAAMC,oBAAwC,GAAG;IAC/C3C,YAAY,GAAAxC,qBAAA,GAAEkF,cAAc,oBAAdA,cAAc,CAAE1C,YAAY,YAAAxC,qBAAA,GAAIwC,YAAY;IAC1DiC,QAAQ,EAAES,cAAc,oBAAdA,cAAc,CAAET,QAAQ;IAClCW,iBAAiB,EAAEF,cAAc,oBAAdA,cAAc,CAAEE,iBAAiB;IACpDL,SAAS,EAAEG,cAAc,oBAAdA,cAAc,CAAEH,SAAS;IACpCtC,UAAU,EAAEyC,cAAc,oBAAdA,cAAc,CAAEzC,UAAU;IAEtCwB,oBAAoB,GAAAhE,qBAAA,GAClBiF,cAAc,oBAAdA,cAAc,CAAEjB,oBAAoB,YAAAhE,qBAAA,GAAIgE,oBAAoB;IAC9De,aAAa,GAAA9E,qBAAA,GAAEgF,cAAc,oBAAdA,cAAc,CAAEF,aAAa,YAAA9E,qBAAA,GAAI8E,aAAa;IAC7D7C,sBAAsB,GAAAhC,sBAAA,GACpB+E,cAAc,oBAAdA,cAAc,CAAE/C,sBAAsB,YAAAhC,sBAAA,GAAIgC,sBAAsB;IAElEwB,gBAAgB,GAAAvD,qBAAA,GAAE8E,cAAc,oBAAdA,cAAc,CAAEvB,gBAAgB,YAAAvD,qBAAA,GAAIuD,gBAAgB;IACtEC,kBAAkB,GAAAvD,qBAAA,GAChB6E,cAAc,oBAAdA,cAAc,CAAEtB,kBAAkB,YAAAvD,qBAAA,GAAIuD,kBAAkB;IAC1DC,iBAAiB,GAAAvD,sBAAA,GAAE4E,cAAc,oBAAdA,cAAc,CAAErB,iBAAiB,YAAAvD,sBAAA,GAAIuD,iBAAiB;IACzEC,iBAAiB,GAAAvD,sBAAA,GAAE2E,cAAc,oBAAdA,cAAc,CAAEpB,iBAAiB,YAAAvD,sBAAA,GAAIuD,iBAAiB;IAEzExB,SAAS,GAAA9B,sBAAA,GAAE0E,cAAc,oBAAdA,cAAc,CAAE5C,SAAS,YAAA9B,sBAAA,GAAI8B,SAAS;IACjDsC,WAAW,EAAEM,cAAc,oBAAdA,cAAc,CAAEN,WAAW;IACxChC,cAAc,GAAAnC,sBAAA,GAAEyE,cAAc,oBAAdA,cAAc,CAAEtC,cAAc,YAAAnC,sBAAA,GAAImC,cAAc;IAChEC,UAAU,GAAAnC,sBAAA,GAAEwE,cAAc,oBAAdA,cAAc,CAAErC,UAAU,YAAAnC,sBAAA,GAAImC,UAAU;IACpDF,wBAAwB,GAAAhC,sBAAA,GACtBuE,cAAc,oBAAdA,cAAc,CAAEvC,wBAAwB,YAAAhC,sBAAA,GAAIgC,wBAAwB;IACtEgC,eAAe,GAAA/D,sBAAA,GAAEsE,cAAc,oBAAdA,cAAc,CAAEP,eAAe,YAAA/D,sBAAA,GAAI+D,eAAe;IACnEN,cAAc,GAAAxD,sBAAA,GAAEqE,cAAc,oBAAdA,cAAc,CAAEb,cAAc,YAAAxD,sBAAA,GAAIwD,cAAc;IAChEH,sBAAsB,GAAApD,uBAAA,GACpBoE,cAAc,oBAAdA,cAAc,CAAEhB,sBAAsB,YAAApD,uBAAA,GAAIoD,sBAAsB;IAClExB,eAAe,GAAA3B,uBAAA,GAAEmE,cAAc,oBAAdA,cAAc,CAAExC,eAAe,YAAA3B,uBAAA,GAAI2B,eAAe;IACnEsB,aAAa,GAAAhD,qBAAA,GAAEkE,cAAc,oBAAdA,cAAc,CAAElB,aAAa,YAAAhD,qBAAA,GAAIgD,aAAa;IAC7DG,gBAAgB,GAAAlD,uBAAA,GAAEiE,cAAc,oBAAdA,cAAc,CAAEf,gBAAgB,YAAAlD,uBAAA,GAAIkD,gBAAgB;IACtEC,gBAAgB,GAAAlD,uBAAA,GAAEgE,cAAc,oBAAdA,cAAc,CAAEd,gBAAgB,YAAAlD,uBAAA,GAAIkD,gBAAgB;IACtEL,UAAU,GAAA5C,qBAAA,GAAE+D,cAAc,oBAAdA,cAAc,CAAEnB,UAAU,YAAA5C,qBAAA,GAAI4C;EAC5C,CAAC;EAED,IAAAsB,qBAAA,GAA2B7F,qBAAqB,CAC9CyF,aAAa,EACbE,oBAAoB,CAACH,aAAa,EAClCG,oBAAoB,CAAClB,oBACvB,CAAC;IAJMqB,OAAO,GAAAD,qBAAA,CAAPC,OAAO;IAAEC,OAAO,GAAAF,qBAAA,CAAPE,OAAO;EAKvBJ,oBAAoB,CAACV,QAAQ,IAAArD,qBAAA,GAC3B+D,oBAAoB,CAACV,QAAQ,YAAArD,qBAAA,GAAKkE,OAAO,IAAIb,QAAS;EACxDU,oBAAoB,CAACC,iBAAiB,IAAA/D,sBAAA,GACpC8D,oBAAoB,CAACC,iBAAiB,YAAA/D,sBAAA,GAAIkE,OAAO;EACnDJ,oBAAoB,CAACJ,SAAS,IAAAzD,sBAAA,GAC5B6D,oBAAoB,CAACJ,SAAS,YAAAzD,sBAAA,GAC9B6D,oBAAoB,CAACV,QAAQ,KAAAlD,sBAAA,GAC1B4D,oBAAoB,CAAC3C,YAAY,YAAAjB,sBAAA,GAAIiB,YAAY,CAAC;EACvD2C,oBAAoB,CAAC1C,UAAU,GAC7B0C,oBAAoB,CAAC1C,UAAU,IAC/B+B,eAAe,KAAAhD,sBAAA,GAAI2D,oBAAoB,CAAC3C,YAAY,YAAAhB,sBAAA,GAAIgB,YAAY,CAAC;EAEvE,IAAMN,aAAgC,GAAG,EAAE;EAC3C,KAAK,IAAIsD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIhD,YAAY,EAAEgD,CAAC,EAAE,EAAE;IAAA,IAAAC,gBAAA;IACtC,IAAIC,KAAK,GAAGjB,QAAQ,GAAGM,SAAS,GAAGS,CAAC;IACpC,IAAIvB,oBAAoB,IAAIe,aAAa,EAAE;MACzCU,KAAK,GAAGC,UAAU,CAChBD,KAAK,CAACE,OAAO,CAACZ,aAAa,WAAbA,aAAa,GAAI1F,oBAAoB,CAAC0F,aAAa,CACnE,CAAC;IACH;IAEA9C,aAAa,CAAC2D,IAAI,CAAC;MACjBH,KAAK,EAAEf,eAAe,YAAfA,eAAe,CAAEmB,MAAM,IAAAL,gBAAA,GAC1Bd,eAAe,CAACnC,YAAY,GAAGL,sBAAsB,GAAGqD,CAAC,CAAC,YAAAC,gBAAA,GAC1DC,KAAK,CAACK,QAAQ,CAAC,CAAC,GAChBL,KAAK,CAACK,QAAQ,CAAC;IACrB,CAAC,CAAC;EACJ;EAEA,IAAMC,kBAAqC,GAAG,EAAE;EAChD,IAAI7D,sBAAsB,EAAE;IAC1B,KAAK,IAAIqD,EAAC,GAAG,CAAC,EAAEA,EAAC,IAAIrD,sBAAsB,EAAEqD,EAAC,EAAE,EAAE;MAAA,IAAAS,qBAAA;MAChD,IAAIP,MAAK,GAAGX,SAAS,GAAG,CAACS,EAAC;MAC1B,IAAIvB,oBAAoB,IAAIe,aAAa,EAAE;QACzCU,MAAK,GAAGC,UAAU,CAChBD,MAAK,CAACE,OAAO,CAACZ,aAAa,WAAbA,aAAa,GAAI1F,oBAAoB,CAAC0F,aAAa,CACnE,CAAC;MACH;MACAgB,kBAAkB,CAACH,IAAI,CAAC;QACtBH,KAAK,EAAE3F,KAAK,CAAC4E,eAAe,IAAAsB,qBAAA,GACxBlG,KAAK,CAAC4E,eAAe,CAACxC,sBAAsB,GAAGqD,EAAC,CAAC,YAAAS,qBAAA,GACjDP,MAAK,CAACK,QAAQ,CAAC,CAAC,GAChBL,MAAK,CAACK,QAAQ,CAAC;MACrB,CAAC,CAAC;IACJ;EACF;EAEA,IAAMG,sBAAyC,GAAG,EAAE;EACpD,IAAIhB,cAAc,EAAE;IAClB,KACE,IAAIM,GAAC,GAAG,CAAC,EACTA,GAAC,MAAAW,sBAAA,GAAKhB,oBAAoB,CAAC3C,YAAY,YAAA2D,sBAAA,GAAI3D,YAAY,CAAC,EACxDgD,GAAC,EAAE,EACH;MAAA,IAAAW,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACA,IAAIX,OAAK,GAAGP,oBAAoB,CAACJ,SAAS,GAAGS,GAAC;MAC9C,IACEL,oBAAoB,CAAClB,oBAAoB,IACzCkB,oBAAoB,CAACH,aAAa,EAClC;QAAA,IAAAsB,sBAAA;QACAZ,OAAK,GAAGC,UAAU,CAChBD,OAAK,CAACE,OAAO,EAAAU,sBAAA,GACXnB,oBAAoB,CAACH,aAAa,YAAAsB,sBAAA,GAChChH,oBAAoB,CAAC0F,aACzB,CACF,CAAC;MACH;MACAkB,sBAAsB,CAACL,IAAI,CAAC;QAC1BH,KAAK,EAAE,CAAAU,sBAAA,GAAAjB,oBAAoB,CAACR,eAAe,aAApCyB,sBAAA,CAAsCN,MAAM,IAAAO,sBAAA,GAC/ClB,oBAAoB,CAACR,eAAe,CAClCa,GAAC,GAAGrD,sBAAsB,GAAG,CAAC,CAC/B,YAAAkE,sBAAA,GAAIX,OAAK,CAACK,QAAQ,CAAC,CAAC,GACrBL,OAAK,CAACK,QAAQ,CAAC;MACrB,CAAC,CAAC;IACJ;EACF;EAEA,IAAMQ,2BAA8C,GAAG,EAAE;EACzD,IAAIpB,oBAAoB,CAAChD,sBAAsB,EAAE;IAC/C,KAAK,IAAIqD,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAIL,oBAAoB,CAAChD,sBAAsB,EAAEqD,GAAC,EAAE,EAAE;MAAA,IAAAgB,uBAAA,EAAAC,uBAAA;MACrE,IAAIf,OAAK,GACPP,oBAAoB,CAACJ,SAAS,IAC7BS,GAAC,GAAGL,oBAAoB,CAAChD,sBAAsB,GAAG,CAAC,CAAC;MACvD,IACEgD,oBAAoB,CAAClB,oBAAoB,IACzCkB,oBAAoB,CAACH,aAAa,EAClC;QAAA,IAAA0B,uBAAA;QACAhB,OAAK,GAAGC,UAAU,CAChBD,OAAK,CAACE,OAAO,EAAAc,uBAAA,GACXvB,oBAAoB,CAACH,aAAa,YAAA0B,uBAAA,GAChCpH,oBAAoB,CAAC0F,aACzB,CACF,CAAC;MACH;MACAuB,2BAA2B,CAACV,IAAI,CAAC;QAC/BH,KAAK,EAAE,CAAAc,uBAAA,GAAArB,oBAAoB,CAACR,eAAe,aAApC6B,uBAAA,CAAsCV,MAAM,IAAAW,uBAAA,GAC/CtB,oBAAoB,CAACR,eAAe,CAACa,GAAC,GAAG,CAAC,CAAC,YAAAiB,uBAAA,GAAIf,OAAK,CAACK,QAAQ,CAAC,CAAC,GAC/DL,OAAK,CAACK,QAAQ,CAAC;MACrB,CAAC,CAAC;IACJ;EACF;EAKA,IACEY,kBAAkB,GAWhBjC,oBAAoB,CAXtBiC,kBAAkB;IAClBC,sBAAsB,GAUpBlC,oBAAoB,CAVtBkC,sBAAsB;IACtBC,oBAAoB,GASlBnC,oBAAoB,CATtBmC,oBAAoB;IAEpBC,kBAAkB,GAOhBpC,oBAAoB,CAPtBoC,kBAAkB;IAClBC,sBAAsB,GAMpBrC,oBAAoB,CANtBqC,sBAAsB;IACtBC,oBAAoB,GAKlBtC,oBAAoB,CALtBsC,oBAAoB;IAEpBC,kBAAkB,GAGhBvC,oBAAoB,CAHtBuC,kBAAkB;IAClBC,sBAAsB,GAEpBxC,oBAAoB,CAFtBwC,sBAAsB;IACtBC,oBAAoB,GAClBzC,oBAAoB,CADtByC,oBAAoB;EAGtB,IAAMC,sBAAsB,GAAG;IAC7BC,SAAS,EAAE7D,cAAc;IACzBxB,KAAK,EAAE,CAACA,KAAK,IAAII,UAAU,GAAGsB,OAAO,IAAIrB,UAAU;IACnDiF,KAAK,EAAE,OAAO;IACdC,IAAI,EAAEhE,SAAS;IACfL,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBqE,SAAS,EAAE,EAAE;IACbC,cAAc,EAAE;EAClB,CAAC;EAEDd,kBAAkB,GAAGjC,oBAAoB,CAACiC,kBAAkB,IAAI,KAAK;EACrEC,sBAAsB,IAAAnF,qBAAA,GACpBiD,oBAAoB,CAACkC,sBAAsB,YAAAnF,qBAAA,GAC1CiD,oBAAoB,CAACkC,sBAAsB,IAAIpC,eAAe,GAAG,CAAE;EACtEqC,oBAAoB,GAAGnC,oBAAoB,CAACmC,oBAAoB,GAC5D;IACEQ,SAAS,EACP3C,oBAAoB,CAACmC,oBAAoB,CAACQ,SAAS,IACnDD,sBAAsB,CAACC,SAAS;IAClCrF,KAAK,GAAAN,sBAAA,GACHgD,oBAAoB,CAACmC,oBAAoB,CAAC7E,KAAK,YAAAN,sBAAA,GAC/C0F,sBAAsB,CAACpF,KAAK;IAC9BsF,KAAK,EACH5C,oBAAoB,CAACmC,oBAAoB,CAACS,KAAK,IAC/CF,sBAAsB,CAACE,KAAK;IAC9BC,IAAI,EACF7C,oBAAoB,CAACmC,oBAAoB,CAACU,IAAI,IAC9CH,sBAAsB,CAACG,IAAI;IAC7BrE,SAAS,EACPwB,oBAAoB,CAACmC,oBAAoB,CAAC3D,SAAS,IACnDkE,sBAAsB,CAAClE,SAAS;IAClCC,OAAO,EACLuB,oBAAoB,CAACmC,oBAAoB,CAAC1D,OAAO,IACjDiE,sBAAsB,CAACjE,OAAO;IAChCqE,SAAS,EACP9C,oBAAoB,CAACmC,oBAAoB,CAACW,SAAS,IACnDJ,sBAAsB,CAACI,SAAS;IAClCC,cAAc,EACZ/C,oBAAoB,CAACmC,oBAAoB,CAACY,cAAc,IACxDL,sBAAsB,CAACK;EAC3B,CAAC,GACDL,sBAAsB;EAE1BN,kBAAkB,GAAGpC,oBAAoB,CAACoC,kBAAkB,IAAI,KAAK;EACrEC,sBAAsB,IAAApF,sBAAA,GACpB+C,oBAAoB,CAACqC,sBAAsB,YAAApF,sBAAA,GAC1C+C,oBAAoB,CAACqC,sBAAsB,IAAK,CAAC,GAAGvC,eAAe,GAAI,CAAE;EAC5EwC,oBAAoB,GAAGtC,oBAAoB,CAACsC,oBAAoB,GAC5D;IACEK,SAAS,EACP3C,oBAAoB,CAACsC,oBAAoB,CAACK,SAAS,IACnDD,sBAAsB,CAACC,SAAS;IAClCrF,KAAK,GAAAJ,sBAAA,GACH8C,oBAAoB,CAACsC,oBAAoB,CAAChF,KAAK,YAAAJ,sBAAA,GAC/CwF,sBAAsB,CAACpF,KAAK;IAC9BsF,KAAK,EACH5C,oBAAoB,CAACsC,oBAAoB,CAACM,KAAK,IAC/CF,sBAAsB,CAACE,KAAK;IAC9BC,IAAI,EACF7C,oBAAoB,CAACsC,oBAAoB,CAACO,IAAI,IAC9CH,sBAAsB,CAACG,IAAI;IAC7BrE,SAAS,EACPwB,oBAAoB,CAACsC,oBAAoB,CAAC9D,SAAS,IACnDkE,sBAAsB,CAAClE,SAAS;IAClCC,OAAO,EACLuB,oBAAoB,CAACsC,oBAAoB,CAAC7D,OAAO,IACjDiE,sBAAsB,CAACjE,OAAO;IAChCqE,SAAS,EACP9C,oBAAoB,CAACsC,oBAAoB,CAACQ,SAAS,IACnDJ,sBAAsB,CAACI,SAAS;IAClCC,cAAc,EACZ/C,oBAAoB,CAACsC,oBAAoB,CAACS,cAAc,IACxDL,sBAAsB,CAACK;EAC3B,CAAC,GACDL,sBAAsB;EAE1BH,kBAAkB,GAAGvC,oBAAoB,CAACuC,kBAAkB,IAAI,KAAK;EACrEC,sBAAsB,IAAArF,sBAAA,GACpB6C,oBAAoB,CAACwC,sBAAsB,YAAArF,sBAAA,GAC1C6C,oBAAoB,CAACwC,sBAAsB,IAAI1C,eAAe,GAAG,CAAE;EACtE2C,oBAAoB,GAAGzC,oBAAoB,CAACyC,oBAAoB,GAC5D;IACEE,SAAS,EACP3C,oBAAoB,CAACyC,oBAAoB,CAACE,SAAS,IACnDD,sBAAsB,CAACC,SAAS;IAClCrF,KAAK,GAAAF,sBAAA,GACH4C,oBAAoB,CAACyC,oBAAoB,CAACnF,KAAK,YAAAF,sBAAA,GAC/CsF,sBAAsB,CAACpF,KAAK;IAC9BsF,KAAK,EACH5C,oBAAoB,CAACyC,oBAAoB,CAACG,KAAK,IAC/CF,sBAAsB,CAACE,KAAK;IAC9BC,IAAI,EACF7C,oBAAoB,CAACyC,oBAAoB,CAACI,IAAI,IAC9CH,sBAAsB,CAACG,IAAI;IAC7BrE,SAAS,EACPwB,oBAAoB,CAACyC,oBAAoB,CAACjE,SAAS,IACnDkE,sBAAsB,CAAClE,SAAS;IAClCC,OAAO,EACLuB,oBAAoB,CAACyC,oBAAoB,CAAChE,OAAO,IACjDiE,sBAAsB,CAACjE,OAAO;IAChCqE,SAAS,EACP9C,oBAAoB,CAACyC,oBAAoB,CAACK,SAAS,IACnDJ,sBAAsB,CAACI,SAAS;IAClCC,cAAc,EACZ/C,oBAAoB,CAACyC,oBAAoB,CAACM,cAAc,IACxDL,sBAAsB,CAACK;EAC3B,CAAC,GACDL,sBAAsB;EAE1B,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,GAAG,EAAEC,KAAK,EAAK;IACpC,OAAOnI,gBAAgB,CACrBkI,GAAG,EACHC,KAAK,EACL3D,oBAAoB,EACpBU,eAAe,EACfC,WAAW,EACXT,gBAAgB,EAChBC,gBAAgB,EAChBY,aAAa,WAAbA,aAAa,GAAI1F,oBAAoB,CAAC0F,aACxC,CAAC;EACH,CAAC;EAED,IAAM6C,8BAA8B,GAAG,SAAjCA,8BAA8BA,CAAIF,GAAG,EAAEC,KAAK,EAAK;IACrD,IACE3D,oBAAoB,GAMlBkB,oBAAoB,CANtBlB,oBAAoB;MACpBU,eAAe,GAKbQ,oBAAoB,CALtBR,eAAe;MACfC,WAAW,GAITO,oBAAoB,CAJtBP,WAAW;MACXT,gBAAgB,GAGdgB,oBAAoB,CAHtBhB,gBAAgB;MAChBC,gBAAgB,GAEde,oBAAoB,CAFtBf,gBAAgB;MAChBY,aAAa,GACXG,oBAAoB,CADtBH,aAAa;IAEf,OAAOvF,gBAAgB,CACrBkI,GAAG,EACHC,KAAK,EACL3D,oBAAoB,EACpBU,eAAe,EACfC,WAAW,EACXT,gBAAgB,EAChBC,gBAAgB,EAChBY,aAAa,WAAbA,aAAa,GAAI1F,oBAAoB,CAAC0F,aACxC,CAAC;EACH,CAAC;EAED,IAAM8C,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIF,KAAa;IAAA,OACvC/H,KAAA,CAACV,IAAI;MACH4I,KAAK,EAAE,CACLH,KAAK,KAAKpF,YAAY,GAAGnD,MAAM,CAAC2I,YAAY,GAAG3I,MAAM,CAAC4I,QAAQ,EAC9D;QACEC,WAAW,EAAErF,UAAU;QACvBO,eAAe,EAAEA,eAAe;QAChCpB,KAAK,EAAE,CAACjC,KAAK,CAACiC,KAAK,IAAII,UAAU,GAAGsB,OAAO,IAAIrB;MACjD,CAAC,EACDC,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,GAC1B;QAACC,gBAAgB,EAAExF;MAAc,CAAC,GAClC;QAACyF,eAAe,EAAEzF;MAAc,CAAC,CACrC;MAAA0F,QAAA,GACDV,KAAK,KAAKpF,YAAY,GACrB7C,IAAA,CAACP,IAAI;QACHmJ,MAAM,EAAE;UACNlB,SAAS,EAAEvE,cAAc;UACzBwE,KAAK,EAAEvE,UAAU;UACjBf,KAAK,EACHgB,WAAW,IAAI,CAACjD,KAAK,CAACiC,KAAK,IAAII,UAAU,GAAGsB,OAAO,IAAIrB,UAAU;UACnEa,SAAS,EAAEA,SAAS;UACpBC,OAAO,EAAEA,OAAO;UAChBoE,IAAI,EAAEtE;QACR;MAAE,CACH,CAAC,GACAI,SAAS,GAAG,IAAI,GAClB1D,IAAA,CAACP,IAAI;QACHmJ,MAAM,EAAE;UACNlB,SAAS,EAAE7D,cAAc;UACzB8D,KAAK,EAAE7D,UAAU;UACjBzB,KAAK,EACHsB,WAAW,IAAI,CAACvD,KAAK,CAACiC,KAAK,IAAII,UAAU,GAAGsB,OAAO,IAAIrB,UAAU;UACnEa,SAAS,EAAEA,SAAS;UACpBC,OAAO,EAAEA,OAAO;UAChBoE,IAAI,EAAEhE;QACR;MAAE,CACH,CACF,EACAI,gBAAgB,IAAIiE,KAAK,KAAKpF,YAAY,GACzC7C,IAAA,CAACR,IAAI;QACH4I,KAAK,EAAE;UACLS,MAAM,EAAE5E,kBAAkB;UAC1B5B,KAAK,EAAE6B,iBAAiB;UACxB4E,IAAI,EACF5E,iBAAiB,GAAG,CAAC,CAAC,IACrBvB,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,GAC3B,CAACnG,KAAK,WAALA,KAAK,GAAII,UAAU,IACpBM,eAAe,GAAG,CAAC,GACnBmB,iBAAiB,GAAG,CAAC,GACrB,CAAC,CAAC;UACRT,eAAe,EAAEU;QACnB;MAAE,CACH,CAAC,GACA,IAAI;IAAA,CACJ,CAAC;EAAA,CACR;EAED,IAAM4E,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAC9BxG,aAAgC,EAChCyG,OAAgB;IAAA,OAEhBzG,aAAa,CAAC0G,GAAG,CAAC,UAACC,YAAY,EAAEjB,KAAK,EAAK;MAAA,IAAAkB,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;MACzC,IAAIC,KAAK,GAAGpB,8BAA8B,CAACgB,YAAY,CAACnD,KAAK,EAAEkC,KAAK,CAAC;MACrE,IACEzC,oBAAoB,CAACpB,UAAU,IAC/B6D,KAAK,KAAK1B,sBAAsB,CAACJ,MAAM,GAAG,CAAC,EAC3C;QACAmD,KAAK,GAAG,EAAE;MACZ;MACA,OACEpJ,KAAA,CAACV,IAAI;QAEH4I,KAAK,EAAE,CACL1I,MAAM,CAAC6J,QAAQ,EACf7J,MAAM,CAAC8J,SAAS,EAChB;UACEC,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,CAAC;UACTC,MAAM,EACJ,EAAAR,uBAAA,GAAC3D,oBAAoB,CAAC1C,UAAU,YAAAqG,uBAAA,GAAI,CAAC,KACpC,CAACH,OAAO,GAAG,CAAC,GAAGxG,sBAAsB,IACpCyF,KAAK,IACJzF,sBAAsB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;UACvCH,KAAK,EAAEmD,oBAAoB,CAACzC,eAAe;UAC3C8F,MAAM,GAAAO,uBAAA,GAAE5D,oBAAoB,CAAC1C,UAAU,YAAAsG,uBAAA,GAAI;QAC7C,CAAC,EACDpG,wBAAwB,CACxB;QAAA2F,QAAA,GACDnD,oBAAoB,CAACxB,gBAAgB,IAAIiE,KAAK,KAAK,CAAC,GACnDjI,IAAA,CAACR,IAAI;UACH4I,KAAK,EAAE;YACLS,MAAM,EAAErD,oBAAoB,CAACvB,kBAAkB;YAC/C5B,KAAK,EAAEmD,oBAAoB,CAACtB,iBAAiB;YAC7CuF,QAAQ,EAAE,UAAU;YACpBX,IAAI,EAAE,EAAAO,uBAAA,GAAC7D,oBAAoB,CAACtB,iBAAiB,YAAAmF,uBAAA,GAAI,CAAC,IAAI,CAAC,CAAC;YACxD5F,eAAe,EAAE+B,oBAAoB,CAACrB;UACxC;QAAE,CACH,CAAC,GACA,IAAI,EACRnE,IAAA,CAACT,IAAI;UACHqK,aAAa,EAAEpE,oBAAoB,CAACjB,sBAAuB;UAC3DsF,aAAa,EAAE,MAAO;UACtBzB,KAAK,EAAE,CAAC5C,oBAAoB,CAACd,cAAc,CAAE;UAAAiE,QAAA,EAC5CW;QAAK,CACF,CAAC;MAAA,GAjCFrB,KAkCD,CAAC;IAEX,CAAC,CAAC;EAAA;EAEJ,OACE/H,KAAA,CAACV,IAAI;IAAC4I,KAAK,EAAE;MAAC0B,aAAa,EAAE;IAAK,CAAE;IAAAnB,QAAA,GAClCzI,KAAA,CAACV,IAAI;MAAC4I,KAAK,EAAE;QAAC/F,KAAK,EAAE,CAACA,KAAK,WAALA,KAAK,GAAII,UAAU,IAAIC;MAAU,CAAE;MAAAiG,QAAA,GACtDpG,aAAa,CAAC0G,GAAG,CAAC,UAACC,YAAY,EAAEjB,KAAK,EAAK;QAC1C,OACE/H,KAAA,CAACV,IAAI;UAEH4I,KAAK,EAAE,CACL1I,MAAM,CAAC6J,QAAQ,EACf;YACElH,KAAK,EAAE,CAACA,KAAK,WAALA,KAAK,GAAII,UAAU,IAAIC;UACjC,CAAC,EACDwC,UAAU,IACR,CAACC,UAAU,IAAI;YACb4E,SAAS,EAAE,CAAC;cAACC,OAAO,EAAE;YAAQ,CAAC;UACjC,CAAC,EACHpH,oBAAoB,CACpB;UAAA+F,QAAA,GACF3I,IAAA,CAACR,IAAI;YACH4I,KAAK,EAAE,CACL1I,MAAM,CAAC8J,SAAS,EAChB;cACEX,MAAM,EACJZ,KAAK,KAAKpF,YAAY,GAAGC,UAAU,GAAG,CAAC,GAAGA,UAAU;cACtDT,KAAK,EAAEM,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,GAAG,CAAC,GAAGzF;YAC9C,CAAC,EACDC,wBAAwB;UACxB,CACH,CAAC,EACDmF,kBAAkB,CAACF,KAAK,CAAC;QAAA,GAvBrBA,KAwBD,CAAC;MAEX,CAAC,CAAC,EAOA,CAAC5D,aAAa,IACZ9B,aAAa,CAAC0G,GAAG,CAAC,UAACC,YAAY,EAAEjB,KAAK,EAAK;QACzC,IAAIqB,KAAK,GAAGvB,aAAa,CAACmB,YAAY,CAACnD,KAAK,EAAEkC,KAAK,CAAC;QACpD,IAAI7D,UAAU,IAAI6D,KAAK,KAAK1F,aAAa,CAAC4D,MAAM,GAAG,CAAC,EAAE;UACpDmD,KAAK,GAAG,EAAE;QACZ;QACA,OACEtJ,IAAA,CAACR,IAAI;UAEH4I,KAAK,EAAE,CACL1I,MAAM,CAAC6J,QAAQ,EACf7J,MAAM,CAAC8J,SAAS,EAChB;YACEC,QAAQ,EAAE,UAAU;YACpBC,MAAM,EAAE,CAAC;YACTO,GAAG,EAAEnH,UAAU,GAAGmF,KAAK;YACvB5F,KAAK,EAAEU,eAAe;YACtB8F,MAAM,EACJZ,KAAK,KAAKpF,YAAY,GAAGC,UAAU,GAAG,CAAC,GAAGA;UAC9C,CAAC,EACDH,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,IAAI;YAChCM,IAAI,EAAE,CAACzG,KAAK,WAALA,KAAK,GAAII,UAAU,IAAIM,eAAe,GAAG;UAClD,CAAC,EACDmC,UAAU,IACR,CAACC,UAAU,IAAI;YACb4E,SAAS,EAAE,CACT;cACEG,UAAU,EAAE,CAAC7H,KAAK,WAALA,KAAK,GAAII,UAAU,IAAI,EAAE,GAAGC;YAC3C,CAAC;UAEL,CAAC,EACHM,wBAAwB,CACxB;UAAA2F,QAAA,EACF3I,IAAA,CAACT,IAAI;YACHqK,aAAa,EAAErF,sBAAuB;YACtCsF,aAAa,EAAE,MAAO;YACtBzB,KAAK,EAAE,CACL1D,cAAc,EACdQ,UAAU,IAAI;cACZ6E,SAAS,EAAE,CACT;gBACEI,MAAM,GACJxF,gBAAgB,WAAhBA,gBAAgB,GAAKC,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE;cAEvC,CAAC;YAEL,CAAC,EACDqD,KAAK,KAAKpF,YAAY,IAAI;cACxBuH,YAAY,EAAEtH,UAAU,GAAG,CAAC;YAC9B,CAAC,CACD;YAAA6F,QAAA,EACDW;UAAK,CACF;QAAC,GA5CFrB,KA6CD,CAAC;MAEX,CAAC,CAAC,EAKL5B,kBAAkB,CAAC4C,GAAG,CAAC,UAACC,YAAY,EAAEjB,KAAK,EAAK;QAC/C,OACE/H,KAAA,CAACV,IAAI;UAEH4I,KAAK,EAAE,CACL1I,MAAM,CAAC6J,QAAQ,EACf;YACElH,KAAK,EAAE,CAACA,KAAK,WAALA,KAAK,GAAII,UAAU,IAAI;UACjC,CAAC,EACDwF,KAAK,KAAK,CAAC,IAAI;YAACoC,SAAS,EAAEvH,UAAU,GAAG;UAAC,CAAC,CAC1C;UAAA6F,QAAA,GACF3I,IAAA,CAACR,IAAI;YACH4I,KAAK,EAAE,CACL1I,MAAM,CAAC8J,SAAS,EAChB;cACEf,gBAAgB,EAAExF,cAAc;cAChCsF,WAAW,EAAErF,UAAU;cACvBoH,UAAU,EAAErH;YACd,CAAC,EACD;cACE4F,MAAM,EAAEZ,KAAK,KAAK,CAAC,GAAGnF,UAAU,GAAG,GAAG,GAAGA,UAAU;cACnDT,KAAK,EAAEM,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,GAAG,CAAC,GAAGzF;YAC9C,CAAC,EACDkF,KAAK,KAAK,CAAC,IAAI;cAACoC,SAAS,EAAE,CAACvH,UAAU,GAAG;YAAC,CAAC;UAC3C,CACH,CAAC,EACF9C,IAAA,CAACR,IAAI;YACH4I,KAAK,EAAE,CAAC1I,MAAM,CAAC4I,QAAQ,EAAE;cAAC7E,eAAe,EAAEA;YAAe,CAAC,CAAE;YAAAkF,QAAA,EAC5DjF,SAAS,GAAG,IAAI,GACf1D,IAAA,CAACP,IAAI;cACHmJ,MAAM,EAAE;gBACNlB,SAAS,EAAE7D,cAAc;gBACzB8D,KAAK,EAAE7D,UAAU;gBACjBzB,KAAK,EACHsB,WAAW,IACX,CAACvD,KAAK,CAACiC,KAAK,IAAII,UAAU,GAAGsB,OAAO,IAAIrB,UAAU;gBACpDa,SAAS,EAAEA,SAAS;gBACpBC,OAAO,EAAEA,OAAO;gBAChBoE,IAAI,EAAEhE;cACR;YAAE,CACH;UACF,CACG,CAAC;QAAA,GAvCFqE,KAwCD,CAAC;MAEX,CAAC,CAAC,EAOA,CAAC5D,aAAa,IACZgC,kBAAkB,CAAC4C,GAAG,CAAC,UAACC,YAAY,EAAEjB,KAAK,EAAK;QAC9C,IAAIqB,KAAK,GAAGvB,aAAa,CACvB1B,kBAAkB,CAACA,kBAAkB,CAACF,MAAM,GAAG,CAAC,GAAG8B,KAAK,CAAC,CAAClC,KAAK,EAC/DkC,KACF,CAAC;QACD,OACEjI,IAAA,CAACR,IAAI;UAEH4I,KAAK,EAAE,CACL1I,MAAM,CAAC6J,QAAQ,EACf7J,MAAM,CAAC8J,SAAS,EAChB;YACEC,QAAQ,EAAE,UAAU;YACpBC,MAAM,EAAE,CAAC;YACTC,MAAM,EAAE7G,UAAU,GAAGmF,KAAK;YAC1B5F,KAAK,EAAEU,eAAe;YACtB8F,MAAM,EACJZ,KAAK,KAAKpF,YAAY,GAAGC,UAAU,GAAG,CAAC,GAAGA;UAC9C,CAAC,EACDH,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,IAAI;YAChCM,IAAI,EAAE,CAACzG,KAAK,WAALA,KAAK,GAAII,UAAU,IAAIM;UAChC,CAAC,EACDC,wBAAwB,CACxB;UAAA2F,QAAA,EACF3I,IAAA,CAACT,IAAI;YACHqK,aAAa,EAAErF,sBAAuB;YACtCsF,aAAa,EAAE,MAAO;YACtBzB,KAAK,EAAE,CACL1D,cAAc,EACduD,KAAK,KAAKpF,YAAY,IAAI;cACxBuH,YAAY,EAAEtH,UAAU,GAAG,CAAC;YAC9B,CAAC,CACD;YAAA6F,QAAA,EACDW;UAAK,CACF;QAAC,GA3BFrB,KA4BD,CAAC;MAEX,CAAC,CAAC,EAUJ,CAAC5D,aAAa,IACZ9B,aAAa,CAAC0G,GAAG,CAAC,UAACC,YAAY,EAAEjB,KAAK,EAAK;QAKzC,OACE/H,KAAA,CAACV,IAAI;UAEH4I,KAAK,EAAE,CACL1I,MAAM,CAAC6J,QAAQ,EACf7J,MAAM,CAAC8J,SAAS,EAChB;YACEC,QAAQ,EAAE,UAAU;YACpBC,MAAM,EAAE,CAAC;YACTO,GAAG,EAAEnH,UAAU,GAAGmF,KAAK;YACvB5F,KAAK,EAAEU,eAAe;YACtB8F,MAAM,EACJZ,KAAK,KAAKpF,YAAY,GAAGC,UAAU,GAAG,CAAC,GAAGA;UAC9C,CAAC,CACD;UAAA6F,QAAA,GACDV,KAAK,KAAKpF,YAAY,IAAImE,kBAAkB,GAC3C9G,KAAA,CAACV,IAAI;YACH4I,KAAK,EAAE;cACLqB,QAAQ,EAAE,UAAU;cACpBE,MAAM,EACH,CAAC1C,sBAAsB,IAAIhC,WAAW,WAAXA,WAAW,GAAI,CAAC,CAAC,IAC3CJ,eAAe,GACjBC,QAAQ;cACVgE,IAAI,EACFnG,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,GAC1B,CAAC,GACDzF,eAAe,GAAGE;YAC1B,CAAE;YAAA0F,QAAA,GACF3I,IAAA,CAACP,IAAI;cAACmJ,MAAM,EAAE1B;YAAqB,CAAE,CAAC,EACrCA,oBAAoB,CAACW,SAAS,GAC7B7H,IAAA,CAACT,IAAI;cACH6I,KAAK,EAAE,CACL;gBAACqB,QAAQ,EAAE;cAAU,CAAC,EACtBvC,oBAAoB,CAACY,cAAc,CACnC;cAAAa,QAAA,EACDzB,oBAAoB,CAACW;YAAS,CAC3B,CAAC,GACL,IAAI;UAAA,CACJ,CAAC,GACL,IAAI,EACPI,KAAK,KAAKpF,YAAY,IAAIsE,kBAAkB,GAC3CjH,KAAA,CAACV,IAAI;YACH4I,KAAK,EAAE;cACLqB,QAAQ,EAAE,UAAU;cACpBE,MAAM,EACH,CAACvC,sBAAsB,IAAInC,WAAW,WAAXA,WAAW,GAAI,CAAC,CAAC,IAC3CJ,eAAe,GACjBC,QAAQ;cACVgE,IAAI,EACFnG,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,GAC1B,CAAC,GACDzF,eAAe,GAAGE;YAC1B,CAAE;YAAA0F,QAAA,GACF3I,IAAA,CAACP,IAAI;cAACmJ,MAAM,EAAEvB;YAAqB,CAAE,CAAC,EACrCA,oBAAoB,CAACQ,SAAS,GAC7B7H,IAAA,CAACT,IAAI;cACH6I,KAAK,EAAE,CACL;gBAACqB,QAAQ,EAAE;cAAU,CAAC,EACtBpC,oBAAoB,CAACS,cAAc,CACnC;cAAAa,QAAA,EACDtB,oBAAoB,CAACQ;YAAS,CAC3B,CAAC,GACL,IAAI;UAAA,CACJ,CAAC,GACL,IAAI,EACPI,KAAK,KAAKpF,YAAY,IAAIyE,kBAAkB,GAC3CpH,KAAA,CAACV,IAAI;YACH4I,KAAK,EAAE;cACLqB,QAAQ,EAAE,UAAU;cACpBE,MAAM,EACH,CAACpC,sBAAsB,IAAItC,WAAW,WAAXA,WAAW,GAAI,CAAC,CAAC,IAC3CJ,eAAe,GACjBC,QAAQ;cACVgE,IAAI,EACFnG,SAAS,KAAK/C,UAAU,CAAC4I,KAAK,GAC1B,CAAC,GACDzF,eAAe,GAAGE;YAC1B,CAAE;YAAA0F,QAAA,GACF3I,IAAA,CAACP,IAAI;cAACmJ,MAAM,EAAEpB;YAAqB,CAAE,CAAC,EACrCA,oBAAoB,CAACK,SAAS,GAC7B7H,IAAA,CAACT,IAAI;cACH6I,KAAK,EAAE,CACL;gBAACqB,QAAQ,EAAE;cAAU,CAAC,EACtBjC,oBAAoB,CAACM,cAAc,CACnC;cAAAa,QAAA,EACDnB,oBAAoB,CAACK;YAAS,CAC3B,CAAC,GACL,IAAI;UAAA,CACJ,CAAC,GACL,IAAI;QAAA,GAvFHI,KAwFD,CAAC;MAEX,CAAC,CAAC;IAAA,CAIF,CAAC,EAKL1C,cAAc,GACZrF,KAAA,CAACV,IAAI;MACH4I,KAAK,EAAE;QACL/F,KAAK,EAAEmD,oBAAoB,CAACzC,eAAe;QAC3C+F,IAAI,EAAEzG,KAAK,GAAGU,eAAe,GAAGA,eAAe,GAAGgB,OAAO;QACzDwE,WAAW,EAAE/C,oBAAoB,CAACtC,UAAU;QAC5CwF,eAAe,EAAElD,oBAAoB,CAACvC;MACxC,CAAE;MAAA0F,QAAA,GACD,CAACnD,oBAAoB,CAACnB,aAAa,GAChC0E,0BAA0B,CAACxC,sBAAsB,EAAE,KAAK,CAAC,GACzD,IAAI,EACP/D,sBAAsB,IAAI,CAACgD,oBAAoB,CAACnB,aAAa,GAC1D0E,0BAA0B,CAACnC,2BAA2B,EAAE,IAAI,CAAC,GAC7D,IAAI;IAAA,CACJ,CAAC,GACL,IAAI;EAAA,CAEN,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}