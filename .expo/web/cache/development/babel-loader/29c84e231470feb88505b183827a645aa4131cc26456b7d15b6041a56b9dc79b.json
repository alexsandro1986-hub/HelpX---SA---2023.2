{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ContextInfo } from \"../ContextInfo/contextinfo\";\nimport { useContext } from \"react\";\nimport { IconButton, DataTable } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { PieChart } from \"react-native-gifted-charts/src/PieChart\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport api from \"../Api_gerenciamento\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar telaAltura = Dimensions.get('window').height;\nexport default function StackAdmin() {\n  var _useContext = useContext(ContextInfo),\n    logout = _useContext.logout;\n  var navigation = useNavigation();\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"FeedAdmin\",\n    children: [_jsx(Stack.Screen, {\n      name: \"FeedAdmin\",\n      component: FeedAdmin,\n      options: {\n        title: \"Admin\",\n        headerStyle: {\n          backgroundColor: \"#97D8AE\",\n          borderColor: \"#97D8AE\",\n          borderWidth: 2,\n          borderBottomLeftRadius: 20,\n          borderBottomRightRadius: 20\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 30\n        },\n        headerTitleAlign: \"center\",\n        headerRight: function headerRight() {\n          return _jsx(IconButton, {\n            icon: \"door-open\",\n            size: 30,\n            color: \"white\",\n            onPress: function onPress() {\n              navigation.navigate(\"Inicio\");\n              logout();\n            }\n          });\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Relatorio\",\n      component: Relatorio,\n      options: {\n        title: \"Relatórios\",\n        headerStyle: {\n          backgroundColor: \"#97D8AE\",\n          borderColor: \"#97D8AE\",\n          borderWidth: 2,\n          borderBottomLeftRadius: 20,\n          borderBottomRightRadius: 20\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 20\n        },\n        headerTitleAlign: \"center\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Usuarios\",\n      component: Usuarios\n    }), _jsx(Stack.Screen, {\n      name: \"Graficos\",\n      component: Graficos,\n      options: {\n        title: \"Gráficos\",\n        headerStyle: {\n          backgroundColor: \"#97D8AE\",\n          borderColor: \"#97D8AE\",\n          borderWidth: 2,\n          borderBottomLeftRadius: 20,\n          borderBottomRightRadius: 20\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"200\",\n          fontSize: 20\n        },\n        headerTitleAlign: \"center\"\n      }\n    })]\n  });\n}\nfunction FeedAdmin() {\n  var navigation = useNavigation();\n  return _jsx(View, {\n    style: feed.container,\n    children: _jsxs(View, {\n      style: feed.cima,\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Relatorio\");\n        },\n        style: feed.botao,\n        children: [_jsx(MaterialCommunityIcons, {\n          name: \"graph\",\n          color: \"white\",\n          size: 50\n        }), _jsx(Text, {\n          style: feed.textoBotao,\n          children: \"Relat\\xF3rio\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Chat\", {\n            name: \"admin\"\n          });\n        },\n        style: feed.botao,\n        children: [_jsx(MaterialCommunityIcons, {\n          name: \"comment-account\",\n          color: \"white\",\n          size: 50\n        }), _jsx(Text, {\n          style: feed.textoBotao,\n          children: \"Suporte\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Usuarios\");\n        },\n        style: feed.botao,\n        children: [_jsx(MaterialCommunityIcons, {\n          name: \"account-multiple-outline\",\n          color: \"white\",\n          size: 50\n        }), _jsx(Text, {\n          style: feed.textoBotao,\n          children: \"Usu\\xE1rios\"\n        })]\n      }), _jsx(View, {\n        style: feed.options\n      })]\n    })\n  });\n}\nvar feed = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#FFF\"\n  },\n  cima: {\n    height: \"50%\",\n    width: \"100%\",\n    paddingTop: '20%',\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    flexWrap: \"wrap\",\n    gap: 20,\n    backgroundColor: \"transparent\"\n  },\n  options: {\n    width: \"40%\",\n    height: \"40%\",\n    backgroundColor: \"#cdcdcd\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  botao: {\n    width: \"40%\",\n    height: \"40%\",\n    backgroundColor: \"#97D8AE\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  textoBotao: {\n    fontSize: 18,\n    fontWeight: \"800\",\n    color: \"#3C8F5A\"\n  }\n});\nvar telaRelatorio = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFF\",\n    gap: 11\n  },\n  cima: {\n    paddingTop: \"37%\",\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    flexWrap: \"wrap\",\n    gap: 20,\n    backgroundColor: \"transparent\",\n    borderColor: \"#97D8AE\",\n    flexDirection: \"row\"\n  },\n  options: {\n    width: \"40%\",\n    height: \"40%\",\n    backgroundColor: \"#cdcdcd\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  botao: {\n    width: \"40%\",\n    height: \"55%\",\n    backgroundColor: \"#97D8AE\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  textoBotao: {\n    fontSize: 18,\n    fontWeight: \"800\",\n    color: \"#3C8F5A\"\n  },\n  botaoGraficos: {\n    width: \"40%\",\n    height: \"33%\",\n    backgroundColor: \"#97D8AE\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65,\n    elevation: 8\n  }\n});\nfunction Relatorio() {\n  var navigation = useNavigation();\n  return _jsx(View, {\n    style: telaRelatorio.container,\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: [telaRelatorio.cima, {\n          height: telaAltura\n        }],\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Graficos\", {\n              tipo: \"idade\",\n              texto: \"Faixa Etária\"\n            });\n          },\n          style: telaRelatorio.botaoGraficos,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"format-list-numbered-rtl\",\n            color: \"white\",\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Idade\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Graficos\", {\n              tipo: \"medicamentos\",\n              texto: \"Medicamentos\"\n            });\n          },\n          style: telaRelatorio.botaoGraficos,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"pill\",\n            color: \"white\",\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Medicamentos\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Graficos\", {\n              tipo: \"Comorbidades\",\n              texto: \"Comorbidades\"\n            });\n          },\n          style: telaRelatorio.botaoGraficos,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"diabetes\",\n            color: \"white\",\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Comorbidades\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Graficos\", {\n              tipo: \"alergia\",\n              texto: \"Alergias\"\n            });\n          },\n          style: telaRelatorio.botaoGraficos,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"allergy\",\n            color: \"white\",\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Alergias\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Graficos\", {\n              tipo: \"tipoSanguineo\",\n              texto: \"Tipo Sanguíneo\"\n            });\n          },\n          style: telaRelatorio.botaoGraficos,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"ab-testing\",\n            color: \"white\",\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Tipo Sangu\\xEDneo\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Graficos\", {\n              tipo: \"doadorOrgao\",\n              texto: \"Doador de Orgãos\"\n            });\n          },\n          style: telaRelatorio.botaoGraficos,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"hand-heart\",\n            color: \"white\",\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Doador de Org\\xE3os\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Graficos\", {\n              tipo: \"doadorSangue\",\n              texto: \"Doador de Sangue\"\n            });\n          },\n          style: telaRelatorio.botaoGraficos,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"blood-bag\",\n            color: \"white\",\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Doador de Sangue\"\n          })]\n        })]\n      })\n    })\n  });\n}\nfunction Graficos(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var _route$params = route.params,\n    tipo = _route$params.tipo,\n    texto = _route$params.texto;\n  var _useContext2 = useContext(ContextInfo),\n    vetorUser = _useContext2.vetorUser;\n  var todosUsuarios = [];\n  var listarTodosUsuarios = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield api.get(\"/users\");\n        console.log(response.data);\n        todosUsuarios = [].concat(_toConsumableArray(todosUsuarios), _toConsumableArray(response.data));\n        console.log(\"Dentro\", todosUsuarios);\n        todosUsuarios.map(function (infos) {\n          console.log(\"Tipo\", tipo);\n          var i = Object.keys(infos).indexOf(tipo);\n          amostra.push(Object.values(infos)[i]);\n          console.log(\"1\", amostra);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function listarTodosUsuarios() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  listarTodosUsuarios();\n  var amostra = [];\n  var pieData = [];\n  var coresGraph = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\", \"#800000\", \"#008000\", \"#000080\", \"#808000\", \"#800080\", \"#008080\", \"#808080\", \"#C0C0C0\", \"#FFA500\", \"#FFC0CB\", \"#008040\", \"#FF4500\", \"#800000\", \"#008000\", \"#000080\", \"#800000\", \"#008000\", \"#000080\"];\n  var contadorElementos = {};\n  amostra.forEach(function (elemento) {\n    if (contadorElementos[elemento]) {\n      contadorElementos[elemento] += 1;\n    } else {\n      contadorElementos[elemento] = 1;\n    }\n  });\n  console.log(contadorElementos);\n  for (var _ref3 of Object.entries(contadorElementos)) {\n    var _ref4 = _slicedToArray(_ref3, 2);\n    var key = _ref4[0];\n    var value = _ref4[1];\n    console.log(key + \": \" + value);\n    var perc = 100 * Number(value) / todosUsuarios.length;\n    console.log(perc);\n    var objGraph = {\n      value: value,\n      color: coresGraph[Math.floor(Math.random() * (coresGraph.length - 1))],\n      text: perc + \"% \" + key,\n      nome: \"\" + key,\n      porcentagem: perc + \"%\"\n    };\n    pieData.push(objGraph);\n    console.log(pieData.length);\n  }\n  return _jsx(View, {\n    style: graph.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: graph.containerTitulo,\n        children: _jsxs(Text, {\n          style: graph.textoTitulo,\n          children: [\" \", texto, \" \"]\n        })\n      }), Platform.OS !== 'web' ? _jsxs(View, {\n        style: graph.containerGraficos,\n        children: [_jsx(View, {\n          style: graph.telaGraficos,\n          children: _jsx(ScrollView, {\n            horizontal: true,\n            children: _jsx(PieChart, {\n              donut: true,\n              isThreeD: true,\n              showText: true,\n              innerCircleBorderWidth: 2,\n              innerCircleBorderColor: \"lightgreen\",\n              textColor: \"black\",\n              radius: 230,\n              innerRadius: 30,\n              textSize: 25,\n              showTextBackground: true,\n              textBackgroundColor: \"white\",\n              labelsPosition: \"mid\",\n              showValuesAsLabels: true,\n              textBackgroundRadius: 26,\n              data: pieData,\n              initialAngle: 90,\n              style: graph.telaGraficos\n            })\n          })\n        }), _jsx(View, {\n          style: graph.containerTodosDados,\n          children: _jsxs(DataTable, {\n            children: [_jsxs(DataTable.Header, {\n              style: {\n                fontSize: 20,\n                color: \"black\"\n              },\n              children: [_jsx(DataTable.Title, {\n                children: \"Elemento\"\n              }), _jsx(DataTable.Title, {\n                children: \"Quantidade\"\n              }), _jsx(DataTable.Title, {\n                children: \"Porcentagem\"\n              })]\n            }), pieData.map(function (elementos, index) {\n              return _jsxs(DataTable.Row, {\n                style: graph.textTodosDados,\n                children: [_jsxs(DataTable.Cell, {\n                  children: [\" \", elementos.nome, \"  \"]\n                }), _jsxs(DataTable.Cell, {\n                  children: [\"   \", elementos.value, \" \"]\n                }), _jsxs(DataTable.Cell, {\n                  children: [\"   \", elementos.porcentagem, \" \"]\n                })]\n              }, index);\n            }), _jsxs(DataTable.Row, {\n              style: graph.textTodosDados,\n              children: [_jsx(DataTable.Cell, {\n                children: \" Total \"\n              }), _jsxs(DataTable.Cell, {\n                children: [\" \", vetorUser.length, \"  \"]\n              }), _jsx(DataTable.Cell, {\n                children: \"   \"\n              })]\n            })]\n          })\n        })]\n      }) : _jsx(View, {\n        style: graph.containerTodosDados,\n        children: _jsxs(DataTable, {\n          children: [_jsxs(DataTable.Header, {\n            style: {\n              fontSize: 20,\n              color: \"black\"\n            },\n            children: [_jsx(DataTable.Title, {\n              children: \"Elemento\"\n            }), _jsx(DataTable.Title, {\n              children: \"Quantidade\"\n            }), _jsx(DataTable.Title, {\n              children: \"Porcentagem\"\n            })]\n          }), pieData.map(function (elementos, index) {\n            return _jsxs(DataTable.Row, {\n              style: graph.textTodosDados,\n              children: [_jsxs(DataTable.Cell, {\n                children: [\" \", elementos.nome, \"  \"]\n              }), _jsxs(DataTable.Cell, {\n                children: [\"   \", elementos.value, \" \"]\n              }), _jsxs(DataTable.Cell, {\n                children: [\"   \", elementos.porcentagem, \" \"]\n              })]\n            }, index);\n          }), _jsxs(DataTable.Row, {\n            style: graph.textTodosDados,\n            children: [_jsx(DataTable.Cell, {\n              children: \" Total \"\n            }), _jsxs(DataTable.Cell, {\n              children: [\" \", vetorUser.length, \"  \"]\n            }), _jsx(DataTable.Cell, {\n              children: \"   \"\n            })]\n          })]\n        })\n      })]\n    })\n  });\n}\nvar graph = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#FFF\"\n  },\n  containerTitulo: {\n    height: \"5%\",\n    width: \"100%\"\n  },\n  textoTitulo: {\n    fontSize: 30,\n    textAlign: \"center\",\n    fontWeight: 100,\n    alignSelf: \"center\",\n    color: \"#97D8AE\",\n    textTransform: 'uppercase'\n  },\n  containerGraficos: {\n    height: \"100%\",\n    width: \"100%\",\n    borderWidth: 2,\n    borderColor: \"#97D8AE\",\n    borderRadius: 20\n  },\n  telaGraficos: {\n    height: \"50%\",\n    width: \"100%\"\n  },\n  containerTodosDados: {\n    height: \"80%\",\n    width: \"100%\",\n    borderWidth: 2,\n    borderColor: \"#97D8AE\",\n    borderRadius: 20,\n    color: 'red',\n    paddingBottom: '2%'\n  },\n  textTodosDados: {\n    fontSize: 40,\n    color: 'red'\n  }\n});\nfunction Usuarios() {\n  var navigation = useNavigation();\n  var _useContext3 = useContext(ContextInfo),\n    vetorUser = _useContext3.vetorUser;\n  return _jsx(View, {\n    style: feedCards.container,\n    children: _jsx(ScrollView, {\n      style: {\n        width: \"100%\"\n      },\n      children: vetorUser.map(function (infos, index) {\n        return _jsxs(View, {\n          style: feedCards.cards,\n          children: [_jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Nome: \", infos.nome]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Idade: \", infos.idade, \" \"]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Alergia: \", infos.alergia]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" \", \"Tipo Sangu\\xEDneo: \", infos.tipoSanguineo]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" \", \"Doador de org\\xE3os: \", infos.doadorOrgao]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" \", \"Telefone: \", infos.telefone]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" CEP: \", infos.cep]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" \", \"Logradouro: \", infos.logradouro]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" \", \"N\\xFAmero da Resid\\xEAncia: \", infos.nCasa]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" E-mail: \", infos.email]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" \", \"Nome do Contanto de Emerg\\xEAncia: \", infos.contatoEmergencia]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" \", \"Telefone de Emerg\\xEAncia: \", infos.telefoneEmergencia]\n          })]\n        }, index);\n      })\n    })\n  });\n}\nvar feedCards = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#FFF\"\n  },\n  cima: {\n    height: \"50%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    gap: 20,\n    backgroundColor: \"transparent\",\n    borderBottomWidth: 2,\n    borderColor: \"#97D8AE\"\n  },\n  containerCards: {\n    width: \"100%\",\n    height: 50,\n    flexDirection: \"row\",\n    paddingBottom: 200\n  },\n  cards: {\n    borderWidth: 2,\n    borderRadius: 20,\n    height: 300,\n    width: \"100%\",\n    borderColor: \"#97D8AE\",\n    marginBottom: 20\n  },\n  textoCards: {\n    fontSize: 18,\n    color: \"black\"\n  }\n});","map":{"version":3,"names":["React","Text","View","StyleSheet","ScrollView","Platform","MaterialCommunityIcons","TouchableOpacity","useNavigation","createStackNavigator","ContextInfo","useContext","IconButton","DataTable","LinearGradient","PieChart","Dimensions","api","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Stack","telaAltura","get","height","StackAdmin","_useContext","logout","navigation","Navigator","initialRouteName","children","Screen","name","component","FeedAdmin","options","title","headerStyle","backgroundColor","borderColor","borderWidth","borderBottomLeftRadius","borderBottomRightRadius","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerTitleAlign","headerRight","icon","size","color","onPress","navigate","Relatorio","Usuarios","Graficos","style","feed","container","cima","botao","textoBotao","create","flex","justifyContent","alignItems","width","paddingTop","alignContent","flexWrap","gap","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","telaRelatorio","flexDirection","botaoGraficos","tipo","texto","_ref","route","_route$params","params","_useContext2","vetorUser","todosUsuarios","listarTodosUsuarios","_ref2","_asyncToGenerator","response","console","log","data","concat","_toConsumableArray","map","infos","i","Object","keys","indexOf","amostra","push","values","error","apply","arguments","pieData","coresGraph","contadorElementos","forEach","elemento","_ref3","entries","_ref4","_slicedToArray","key","value","perc","Number","length","objGraph","Math","floor","random","text","nome","porcentagem","graph","containerTitulo","textoTitulo","OS","containerGraficos","telaGraficos","horizontal","donut","isThreeD","showText","innerCircleBorderWidth","innerCircleBorderColor","textColor","radius","innerRadius","textSize","showTextBackground","textBackgroundColor","labelsPosition","showValuesAsLabels","textBackgroundRadius","initialAngle","containerTodosDados","Header","Title","elementos","index","Row","textTodosDados","Cell","textAlign","alignSelf","textTransform","paddingBottom","_useContext3","feedCards","cards","textoCards","idade","alergia","tipoSanguineo","doadorOrgao","telefone","cep","logradouro","nCasa","email","contatoEmergencia","telefoneEmergencia","borderBottomWidth","containerCards","marginBottom"],"sources":["C:/Users/gisele_anjos/Documents/sa.ReactNative2semestre/src/pages/Admin/index.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, StyleSheet, ScrollView, Platform } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { ContextInfo } from \"../ContextInfo/contextinfo\";\r\nimport { useContext } from \"react\";\r\nimport { IconButton, DataTable } from \"react-native-paper\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { PieChart } from \"react-native-gifted-charts/src/PieChart\";\r\nimport { Dimensions } from \"react-native\";\r\nimport api from \"../Api_gerenciamento\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\n\r\nconst Stack = createStackNavigator();\r\nconst telaAltura = Dimensions.get('window').height\r\n\r\nexport default function StackAdmin() {\r\n  const { logout } = useContext(ContextInfo);\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"FeedAdmin\">\r\n      <Stack.Screen\r\n        name=\"FeedAdmin\"\r\n        component={FeedAdmin}\r\n        options={{\r\n          title: \"Admin\",\r\n          headerStyle: {\r\n            backgroundColor: \"#97D8AE\",\r\n            borderColor: \"#97D8AE\",\r\n            borderWidth: 2,\r\n            borderBottomLeftRadius: 20,\r\n            borderBottomRightRadius: 20,\r\n          },\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            fontWeight: \"500\",\r\n            fontSize: 30,\r\n          },\r\n          headerTitleAlign: \"center\",\r\n          headerRight: () => (\r\n            <IconButton\r\n              icon=\"door-open\"\r\n              size={30}\r\n              color=\"white\"\r\n              onPress={() => {\r\n                navigation.navigate(\"Inicio\");\r\n                logout();\r\n              }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Relatorio\"\r\n        component={Relatorio}\r\n        options={{\r\n          title: \"Relatórios\",\r\n          headerStyle: {\r\n            backgroundColor: \"#97D8AE\",\r\n            borderColor: \"#97D8AE\",\r\n            borderWidth: 2,\r\n            borderBottomLeftRadius: 20,\r\n            borderBottomRightRadius: 20,\r\n          },\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            fontWeight: \"500\",\r\n            fontSize: 20,\r\n          },\r\n          headerTitleAlign: \"center\",\r\n        }}\r\n      />\r\n      <Stack.Screen name=\"Usuarios\" component={Usuarios} />\r\n      {/* <Stack.Screen name='Suporte' component={Suporte} /> */}\r\n      <Stack.Screen name=\"Graficos\" component={Graficos} options={{\r\n          title: \"Gráficos\",\r\n          headerStyle: {\r\n            backgroundColor: \"#97D8AE\",\r\n            borderColor: \"#97D8AE\",\r\n            borderWidth: 2,\r\n            borderBottomLeftRadius: 20,\r\n            borderBottomRightRadius: 20,\r\n          },\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            fontWeight: \"200\",\r\n            fontSize: 20,\r\n          },\r\n          headerTitleAlign: \"center\",\r\n        }}/>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\nfunction FeedAdmin() {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <View style={feed.container}>\r\n      <View style={feed.cima}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"Relatorio\")}\r\n          style={feed.botao}\r\n        >\r\n          <MaterialCommunityIcons name=\"graph\" color={\"white\"} size={50} />\r\n\r\n          <Text style={feed.textoBotao}>Relatório</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"Chat\", { name: \"admin\" })}\r\n          style={feed.botao}\r\n        >\r\n          <MaterialCommunityIcons\r\n            name=\"comment-account\"\r\n            color={\"white\"}\r\n            size={50}\r\n          />\r\n\r\n          <Text style={feed.textoBotao}>Suporte</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"Usuarios\")}\r\n          style={feed.botao}\r\n        >\r\n          <MaterialCommunityIcons\r\n            name=\"account-multiple-outline\"\r\n            color={\"white\"}\r\n            size={50}\r\n          />\r\n\r\n          <Text style={feed.textoBotao}>Usuários</Text>\r\n        </TouchableOpacity>\r\n\r\n        <View style={feed.options}></View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst feed = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n  cima: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    paddingTop: '20%',\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    gap: 20,\r\n    backgroundColor: \"transparent\",\r\n    // borderBottomWidth: 2,\r\n    // borderColor: \"#97D8AE\",\r\n  },\r\n\r\n  options: {\r\n    width: \"40%\",\r\n    height: \"40%\",\r\n    backgroundColor: \"#cdcdcd\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  botao: {\r\n    width: \"40%\",\r\n    height: \"40%\",\r\n    backgroundColor: \"#97D8AE\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: 15,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n    elevation: 8,\r\n  },\r\n  textoBotao: {\r\n    fontSize: 18,\r\n    fontWeight: \"800\",\r\n    color: \"#3C8F5A\",\r\n  },\r\n});\r\n\r\nconst telaRelatorio = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    // justifyContent: 'flex-start',\r\n    // alignItems: 'center',\r\n    backgroundColor: \"#FFF\",\r\n    gap: 11,\r\n  },\r\n  cima: {\r\n    paddingTop: \"37%\",\r\n    flex: 1,\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    gap: 20,\r\n    backgroundColor: \"transparent\",\r\n\r\n    borderColor: \"#97D8AE\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n\r\n  options: {\r\n    width: \"40%\",\r\n    height: \"40%\",\r\n    backgroundColor: \"#cdcdcd\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  botao: {\r\n    width: \"40%\",\r\n    height: \"55%\",\r\n    backgroundColor: \"#97D8AE\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: 15,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n    elevation: 8,\r\n  },\r\n  textoBotao: {\r\n    fontSize: 18,\r\n    fontWeight: \"800\",\r\n    color: \"#3C8F5A\",\r\n  },\r\n  botaoGraficos: {\r\n    width: \"40%\",\r\n    height: \"33%\",\r\n    backgroundColor: \"#97D8AE\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: 15,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n    elevation: 8,\r\n  },\r\n});\r\n\r\nfunction Relatorio() {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <View style={telaRelatorio.container}>\r\n      <ScrollView>\r\n        <View style={[telaRelatorio.cima, {height:telaAltura}]}>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"Graficos\", {\r\n                tipo: \"idade\",\r\n                texto: \"Faixa Etária\",\r\n              })\r\n            }\r\n            style={telaRelatorio.botaoGraficos}\r\n          >\r\n            <MaterialCommunityIcons\r\n              name=\"format-list-numbered-rtl\"\r\n              color={\"white\"}\r\n              size={50}\r\n            />\r\n\r\n            <Text style={telaRelatorio.textoBotao}>Idade</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"Graficos\", {\r\n                tipo: \"medicamentos\",\r\n                texto: \"Medicamentos\",\r\n              })\r\n            }\r\n            style={telaRelatorio.botaoGraficos}\r\n          >\r\n            <MaterialCommunityIcons name=\"pill\" color={\"white\"} size={50} />\r\n\r\n            <Text style={telaRelatorio.textoBotao}>Medicamentos</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"Graficos\", {\r\n                tipo: \"Comorbidades\",\r\n                texto: \"Comorbidades\",\r\n              })\r\n            }\r\n            style={telaRelatorio.botaoGraficos}\r\n          >\r\n            <MaterialCommunityIcons name=\"diabetes\" color={\"white\"} size={50} />\r\n\r\n            <Text style={telaRelatorio.textoBotao}>Comorbidades</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"Graficos\", {\r\n                tipo: \"alergia\",\r\n                texto: \"Alergias\",\r\n              })\r\n            }\r\n            style={telaRelatorio.botaoGraficos}\r\n          >\r\n            <MaterialCommunityIcons name=\"allergy\" color={\"white\"} size={50} />\r\n\r\n            <Text style={telaRelatorio.textoBotao}>Alergias</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"Graficos\", {\r\n                tipo: \"tipoSanguineo\",\r\n                texto: \"Tipo Sanguíneo\",\r\n              })\r\n            }\r\n            style={telaRelatorio.botaoGraficos}\r\n          >\r\n            <MaterialCommunityIcons\r\n              name=\"ab-testing\"\r\n              color={\"white\"}\r\n              size={50}\r\n            />\r\n\r\n            <Text style={telaRelatorio.textoBotao}>Tipo Sanguíneo</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"Graficos\", {\r\n                tipo: \"doadorOrgao\",\r\n                texto: \"Doador de Orgãos\",\r\n              })\r\n            }\r\n            style={telaRelatorio.botaoGraficos}\r\n          >\r\n            <MaterialCommunityIcons\r\n              name=\"hand-heart\"\r\n              color={\"white\"}\r\n              size={50}\r\n            />\r\n\r\n            <Text style={telaRelatorio.textoBotao}>Doador de Orgãos</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"Graficos\", {\r\n                tipo: \"doadorSangue\",\r\n                texto: \"Doador de Sangue\",\r\n              })\r\n            }\r\n            style={telaRelatorio.botaoGraficos}\r\n          >\r\n            <MaterialCommunityIcons\r\n              name=\"blood-bag\"\r\n              color={\"white\"}\r\n              size={50}\r\n            />\r\n\r\n            <Text style={telaRelatorio.textoBotao}>Doador de Sangue</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Graficos({ route }) {\r\n  const navigation = useNavigation();\r\n  const { tipo, texto } = route.params;\r\n  const { vetorUser } = useContext(ContextInfo);\r\n  let todosUsuarios = []\r\n  const listarTodosUsuarios = async () => {\r\n    try {\r\n      const response = await api.get(\"/users\");\r\n      console.log(response.data);\r\n \r\n      todosUsuarios = [...todosUsuarios,...response.data]\r\n      console.log(\"Dentro\", todosUsuarios)\r\n     \r\n      todosUsuarios.map((infos) => {\r\n        console.log(\"Tipo\", tipo);\r\n        let i = Object.keys(infos).indexOf(tipo);\r\n        amostra.push(Object.values(infos)[i]);\r\n        console.log(\"1\", amostra);\r\n      });\r\n    \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  listarTodosUsuarios()\r\n  let amostra = [];\r\n  const pieData = [];\r\n  // const data = [] //Dados do Grafico (valores)\r\n  const coresGraph = [\r\n    \"#FF0000\",\r\n    \"#00FF00\",\r\n    \"#0000FF\",\r\n    \"#FFFF00\",\r\n    \"#FF00FF\",\r\n    \"#00FFFF\",\r\n    \"#800000\",\r\n    \"#008000\",\r\n    \"#000080\",\r\n    \"#808000\",\r\n    \"#800080\",\r\n    \"#008080\",\r\n    \"#808080\",\r\n    \"#C0C0C0\",\r\n    \"#FFA500\",\r\n    \"#FFC0CB\",\r\n    \"#008040\",\r\n    \"#FF4500\",\r\n    \"#800000\",\r\n    \"#008000\",\r\n    \"#000080\",\r\n    \"#800000\",\r\n    \"#008000\",\r\n    \"#000080\",\r\n  ];\r\n\r\n   \r\n  // vetorUser.map((infos) => {\r\n  //   console.log(tipo);\r\n  //   let i = Object.keys(infos).indexOf(tipo);\r\n  //   amostra.push(Object.values(infos)[i]);\r\n  //   console.log(\"1\", amostra);\r\n  // });\r\n  // Contando números de elementos repetidos dentro da amostra\r\n  const contadorElementos = {};\r\n  amostra.forEach((elemento) => {\r\n    if (contadorElementos[elemento]) {\r\n      contadorElementos[elemento] += 1;\r\n    } else {\r\n      contadorElementos[elemento] = 1;\r\n    }\r\n  });\r\n  console.log(contadorElementos);\r\n\r\n  // Criando objeto para o grafico\r\n  for (const [key, value] of Object.entries(contadorElementos)) {\r\n    console.log(`${key}: ${value}`);\r\n    let perc = (100 * Number(value)) / todosUsuarios.length;\r\n    console.log(perc);\r\n    const objGraph = {\r\n      value: value,\r\n      color: coresGraph[Math.floor(Math.random() * (coresGraph.length - 1))],\r\n      text: `${perc}% ${key}`,\r\n      nome: `${key}`,\r\n      porcentagem: `${perc}%`\r\n    };\r\n    pieData.push(objGraph);\r\n    console.log(pieData.length)\r\n  }\r\n\r\n  return (\r\n    <View style={graph.container}>\r\n      <ScrollView>\r\n      {/* <LinearGradient colors={[\"#CDE4AD\", \"#97D8AE\", \"#78D1D2\"]} > */}\r\n        <View style={graph.containerTitulo}>\r\n          <Text style={graph.textoTitulo}> {texto} </Text>\r\n        </View>\r\n      {/* </LinearGradient> */}\r\n      {Platform.OS !== 'web'?\r\n      (<View style={graph.containerGraficos}>\r\n        <View style={graph.telaGraficos}>\r\n          <ScrollView horizontal >\r\n        <PieChart\r\n                donut\r\n                isThreeD\r\n                showText\r\n                innerCircleBorderWidth={2}\r\n                innerCircleBorderColor=\"lightgreen\"\r\n                textColor=\"black\"\r\n                radius={230}\r\n                innerRadius={30}\r\n                textSize={25}\r\n                showTextBackground\r\n                textBackgroundColor = 'white'\r\n                labelsPosition = 'mid'\t\r\n                showValuesAsLabels\t\r\n                textBackgroundRadius={26}\r\n                data={pieData}\r\n                initialAngle={90}\r\n                style={graph.telaGraficos}\r\n          \r\n                />\r\n                </ScrollView>\r\n        </View>\r\n        <View style={graph.containerTodosDados}>\r\n        <DataTable > \r\n      <DataTable.Header style={{fontSize: 20, color: \"black\"}}> \r\n        <DataTable.Title>Elemento</DataTable.Title> \r\n        <DataTable.Title>Quantidade</DataTable.Title> \r\n        <DataTable.Title>Porcentagem</DataTable.Title> \r\n\r\n      </DataTable.Header> \r\n       {pieData.map((elementos, index) => {\r\n            return(\r\n              <DataTable.Row key={index} style={graph.textTodosDados}> \r\n             <DataTable.Cell > {elementos.nome}  </DataTable.Cell> \r\n            <DataTable.Cell >   {elementos.value} </DataTable.Cell> \r\n            <DataTable.Cell >   {elementos.porcentagem} </DataTable.Cell> \r\n            </DataTable.Row> \r\n            )\r\n        })}\r\n          <DataTable.Row style={graph.textTodosDados}> \r\n          <DataTable.Cell > Total </DataTable.Cell> \r\n          <DataTable.Cell > {vetorUser.length}  </DataTable.Cell> \r\n          <DataTable.Cell >   </DataTable.Cell> \r\n          </DataTable.Row> \r\n   </DataTable>\r\n      </View>\r\n      </View>)\r\n            :\r\n            (   <View style={graph.containerTodosDados}>\r\n              <DataTable > \r\n            <DataTable.Header style={{fontSize: 20, color: \"black\"}}> \r\n              <DataTable.Title>Elemento</DataTable.Title> \r\n              <DataTable.Title>Quantidade</DataTable.Title> \r\n              <DataTable.Title>Porcentagem</DataTable.Title> \r\n      \r\n            </DataTable.Header> \r\n             {pieData.map((elementos, index) => {\r\n                  return(\r\n                    <DataTable.Row key={index} style={graph.textTodosDados}> \r\n                   <DataTable.Cell > {elementos.nome}  </DataTable.Cell> \r\n                  <DataTable.Cell >   {elementos.value} </DataTable.Cell> \r\n                  <DataTable.Cell >   {elementos.porcentagem} </DataTable.Cell> \r\n                  </DataTable.Row> \r\n                  )\r\n              })}\r\n                <DataTable.Row style={graph.textTodosDados}> \r\n                <DataTable.Cell > Total </DataTable.Cell> \r\n                <DataTable.Cell > {vetorUser.length}  </DataTable.Cell> \r\n                <DataTable.Cell >   </DataTable.Cell> \r\n                </DataTable.Row> \r\n         </DataTable>\r\n            </View>)\r\n    }\r\n    </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst graph = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FFF\",\r\n\r\n  },\r\n  containerTitulo: {\r\n    height: \"5%\",\r\n    width: \"100%\",\r\n    // borderWidth: 4,\r\n    // borderColor: \"#97D8AE\",\r\n    // borderRadius: 20,\r\n    // backgroundColor: \"#97D8AE\",\r\n  },\r\n  textoTitulo: {\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n    fontWeight: 100,\r\n    alignSelf: \"center\",\r\n    color: \"#97D8AE\",\r\n    textTransform: 'uppercase'\r\n  },\r\n  containerGraficos: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    borderWidth: 2,\r\n    borderColor: \"#97D8AE\",\r\n    borderRadius: 20,\r\n  },\r\n  telaGraficos: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n  \r\n  },\r\n  containerTodosDados: {\r\n    height: \"80%\",\r\n    width: \"100%\",\r\n    borderWidth: 2,\r\n    borderColor: \"#97D8AE\",\r\n    borderRadius: 20,\r\n    color: 'red',\r\n    paddingBottom: '2%'\r\n  },\r\n  textTodosDados: {\r\n    fontSize: 40,\r\n    color: 'red'\r\n   \r\n    \r\n\r\n  }\r\n});\r\n\r\nfunction Usuarios() {\r\n  const navigation = useNavigation();\r\n  const { vetorUser } = useContext(ContextInfo);\r\n\r\n  return (\r\n    <View style={feedCards.container}>\r\n      <ScrollView style={{ width: \"100%\" }}>\r\n        {vetorUser.map((infos, index) => (\r\n          <View style={feedCards.cards} key={index}>\r\n            <Text style={feedCards.textoCards}> Nome: {infos.nome}</Text>\r\n            <Text style={feedCards.textoCards}> Idade: {infos.idade} </Text>\r\n            <Text style={feedCards.textoCards}> Alergia: {infos.alergia}</Text>\r\n            <Text style={feedCards.textoCards}>\r\n              {\" \"}\r\n              Tipo Sanguíneo: {infos. tipoSanguineo}\r\n            </Text>\r\n            <Text style={feedCards.textoCards}>\r\n              {\" \"}\r\n              Doador de orgãos: {infos.doadorOrgao}\r\n            </Text>\r\n            <Text style={feedCards.textoCards}>\r\n              {\" \"}\r\n              Telefone: {infos.telefone}\r\n            </Text>\r\n            <Text style={feedCards.textoCards}> CEP: {infos.cep}</Text>\r\n            <Text style={feedCards.textoCards}>\r\n              {\" \"}\r\n              Logradouro: {infos.logradouro}\r\n            </Text>\r\n            <Text style={feedCards.textoCards}>\r\n              {\" \"}\r\n              Número da Residência: {infos.nCasa}\r\n            </Text>\r\n            <Text style={feedCards.textoCards}> E-mail: {infos.email}</Text>\r\n            <Text style={feedCards.textoCards}>\r\n              {\" \"}\r\n              Nome do Contanto de Emergência: {infos.contatoEmergencia}\r\n            </Text>\r\n            <Text style={feedCards.textoCards}>\r\n              {\" \"}\r\n              Telefone de Emergência: {infos.telefoneEmergencia}\r\n            </Text>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst feedCards = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n  cima: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    gap: 20,\r\n    backgroundColor: \"transparent\",\r\n    borderBottomWidth: 2,\r\n    borderColor: \"#97D8AE\",\r\n  },\r\n\r\n  containerCards: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    // borderWidth: 1,\r\n    // borderColor: '#97D8AE',\r\n    flexDirection: \"row\",\r\n    // justifyContent: 'space-evenly',\r\n    // alignItems: 'stretch'\r\n    paddingBottom: 200,\r\n  },\r\n  cards: {\r\n    borderWidth: 2,\r\n    borderRadius: 20,\r\n    height: 300,\r\n    width: \"100%\",\r\n    borderColor: \"#97D8AE\",\r\n    marginBottom: 20,\r\n  },\r\n  textoCards: {\r\n    fontSize: 18,\r\n    color: \"black\",\r\n  },\r\n});\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAE/B,SAASC,sBAAsB,QAAQ,oBAAoB;AAAC,OAAAC,gBAAA;AAE5D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,WAAW;AACpB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,EAAEC,SAAS,QAAQ,oBAAoB;AAC1D,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,QAAQ,QAAQ,yCAAyC;AAAC,OAAAC,UAAA;AAEnE,OAAOC,GAAG;AACV,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrE,IAAMC,KAAK,GAAGd,oBAAoB,CAAC,CAAC;AACpC,IAAMe,UAAU,GAAGR,UAAU,CAACS,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAElD,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAAC,WAAA,GAAmBjB,UAAU,CAACD,WAAW,CAAC;IAAlCmB,MAAM,GAAAD,WAAA,CAANC,MAAM;EACd,IAAMC,UAAU,GAAGtB,aAAa,CAAC,CAAC;EAElC,OACEc,KAAA,CAACC,KAAK,CAACQ,SAAS;IAACC,gBAAgB,EAAC,WAAW;IAAAC,QAAA,GAC3Cb,IAAA,CAACG,KAAK,CAACW,MAAM;MACXC,IAAI,EAAC,WAAW;MAChBC,SAAS,EAAEC,SAAU;MACrBC,OAAO,EAAE;QACPC,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE;UACXC,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBC,WAAW,EAAE,CAAC;UACdC,sBAAsB,EAAE,EAAE;UAC1BC,uBAAuB,EAAE;QAC3B,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE,KAAK;UACjBC,QAAQ,EAAE;QACZ,CAAC;QACDC,gBAAgB,EAAE,QAAQ;QAC1BC,WAAW,EAAE,SAAAA,YAAA;UAAA,OACX/B,IAAA,CAACR,UAAU;YACTwC,IAAI,EAAC,WAAW;YAChBC,IAAI,EAAE,EAAG;YACTC,KAAK,EAAC,OAAO;YACbC,OAAO,EAAE,SAAAA,QAAA,EAAM;cACbzB,UAAU,CAAC0B,QAAQ,CAAC,QAAQ,CAAC;cAC7B3B,MAAM,CAAC,CAAC;YACV;UAAE,CACH,CAAC;QAAA;MAEN;IAAE,CACH,CAAC,EACFT,IAAA,CAACG,KAAK,CAACW,MAAM;MACXC,IAAI,EAAC,WAAW;MAChBC,SAAS,EAAEqB,SAAU;MACrBnB,OAAO,EAAE;QACPC,KAAK,EAAE,YAAY;QACnBC,WAAW,EAAE;UACXC,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBC,WAAW,EAAE,CAAC;UACdC,sBAAsB,EAAE,EAAE;UAC1BC,uBAAuB,EAAE;QAC3B,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE,KAAK;UACjBC,QAAQ,EAAE;QACZ,CAAC;QACDC,gBAAgB,EAAE;MACpB;IAAE,CACH,CAAC,EACF9B,IAAA,CAACG,KAAK,CAACW,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAEsB;IAAS,CAAE,CAAC,EAErDtC,IAAA,CAACG,KAAK,CAACW,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAEuB,QAAS;MAACrB,OAAO,EAAE;QACxDC,KAAK,EAAE,UAAU;QACjBC,WAAW,EAAE;UACXC,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBC,WAAW,EAAE,CAAC;UACdC,sBAAsB,EAAE,EAAE;UAC1BC,uBAAuB,EAAE;QAC3B,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE,KAAK;UACjBC,QAAQ,EAAE;QACZ,CAAC;QACDC,gBAAgB,EAAE;MACpB;IAAE,CAAC,CAAC;EAAA,CACS,CAAC;AAEtB;AACA,SAASb,SAASA,CAAA,EAAG;EACnB,IAAMP,UAAU,GAAGtB,aAAa,CAAC,CAAC;EAClC,OACEY,IAAA,CAAClB,IAAI;IAAC0D,KAAK,EAAEC,IAAI,CAACC,SAAU;IAAA7B,QAAA,EAC1BX,KAAA,CAACpB,IAAI;MAAC0D,KAAK,EAAEC,IAAI,CAACE,IAAK;MAAA9B,QAAA,GACrBX,KAAA,CAACf,gBAAgB;QACfgD,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMzB,UAAU,CAAC0B,QAAQ,CAAC,WAAW,CAAC;QAAA,CAAC;QAChDI,KAAK,EAAEC,IAAI,CAACG,KAAM;QAAA/B,QAAA,GAElBb,IAAA,CAACd,sBAAsB;UAAC6B,IAAI,EAAC,OAAO;UAACmB,KAAK,EAAE,OAAQ;UAACD,IAAI,EAAE;QAAG,CAAE,CAAC,EAEjEjC,IAAA,CAACnB,IAAI;UAAC2D,KAAK,EAAEC,IAAI,CAACI,UAAW;UAAAhC,QAAA,EAAC;QAAS,CAAM,CAAC;MAAA,CAC9B,CAAC,EAEnBX,KAAA,CAACf,gBAAgB;QACfgD,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMzB,UAAU,CAAC0B,QAAQ,CAAC,MAAM,EAAE;YAAErB,IAAI,EAAE;UAAQ,CAAC,CAAC;QAAA,CAAC;QAC9DyB,KAAK,EAAEC,IAAI,CAACG,KAAM;QAAA/B,QAAA,GAElBb,IAAA,CAACd,sBAAsB;UACrB6B,IAAI,EAAC,iBAAiB;UACtBmB,KAAK,EAAE,OAAQ;UACfD,IAAI,EAAE;QAAG,CACV,CAAC,EAEFjC,IAAA,CAACnB,IAAI;UAAC2D,KAAK,EAAEC,IAAI,CAACI,UAAW;UAAAhC,QAAA,EAAC;QAAO,CAAM,CAAC;MAAA,CAC5B,CAAC,EAEnBX,KAAA,CAACf,gBAAgB;QACfgD,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,CAAC;QAAA,CAAC;QAC/CI,KAAK,EAAEC,IAAI,CAACG,KAAM;QAAA/B,QAAA,GAElBb,IAAA,CAACd,sBAAsB;UACrB6B,IAAI,EAAC,0BAA0B;UAC/BmB,KAAK,EAAE,OAAQ;UACfD,IAAI,EAAE;QAAG,CACV,CAAC,EAEFjC,IAAA,CAACnB,IAAI;UAAC2D,KAAK,EAAEC,IAAI,CAACI,UAAW;UAAAhC,QAAA,EAAC;QAAQ,CAAM,CAAC;MAAA,CAC7B,CAAC,EAEnBb,IAAA,CAAClB,IAAI;QAAC0D,KAAK,EAAEC,IAAI,CAACvB;MAAQ,CAAO,CAAC;IAAA,CAC9B;EAAC,CACH,CAAC;AAEX;AAEA,IAAMuB,IAAI,GAAG1D,UAAU,CAAC+D,MAAM,CAAC;EAC7BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpB5B,eAAe,EAAE;EACnB,CAAC;EACDsB,IAAI,EAAE;IACJrC,MAAM,EAAE,KAAK;IACb4C,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,KAAK;IACjBH,cAAc,EAAE,QAAQ;IACxBI,YAAY,EAAE,QAAQ;IACtBC,QAAQ,EAAE,MAAM;IAChBC,GAAG,EAAE,EAAE;IACPjC,eAAe,EAAE;EAGnB,CAAC;EAEDH,OAAO,EAAE;IACPgC,KAAK,EAAE,KAAK;IACZ5C,MAAM,EAAE,KAAK;IACbe,eAAe,EAAE,SAAS;IAC1BkC,YAAY,EAAE,EAAE;IAChBP,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDL,KAAK,EAAE;IACLM,KAAK,EAAE,KAAK;IACZ5C,MAAM,EAAE,KAAK;IACbe,eAAe,EAAE,SAAS;IAC1BkC,YAAY,EAAE,EAAE;IAChBP,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,GAAG,EAAE,EAAE;IACPE,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEP,KAAK,EAAE,CAAC;MAAE5C,MAAM,EAAE;IAAE,CAAC;IACrCoD,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACb,CAAC;EACDf,UAAU,EAAE;IACVhB,QAAQ,EAAE,EAAE;IACZD,UAAU,EAAE,KAAK;IACjBM,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,IAAM2B,aAAa,GAAG9E,UAAU,CAAC+D,MAAM,CAAC;EACtCJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IAGP1B,eAAe,EAAE,MAAM;IACvBiC,GAAG,EAAE;EACP,CAAC;EACDX,IAAI,EAAE;IACJQ,UAAU,EAAE,KAAK;IACjBJ,IAAI,EAAE,CAAC;IACPG,KAAK,EAAE,MAAM;IACbF,cAAc,EAAE,QAAQ;IACxBI,YAAY,EAAE,QAAQ;IACtBC,QAAQ,EAAE,MAAM;IAChBC,GAAG,EAAE,EAAE;IACPjC,eAAe,EAAE,aAAa;IAE9BC,WAAW,EAAE,SAAS;IACtBwC,aAAa,EAAE;EACjB,CAAC;EAGD5C,OAAO,EAAE;IACPgC,KAAK,EAAE,KAAK;IACZ5C,MAAM,EAAE,KAAK;IACbe,eAAe,EAAE,SAAS;IAC1BkC,YAAY,EAAE,EAAE;IAChBP,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDL,KAAK,EAAE;IACLM,KAAK,EAAE,KAAK;IACZ5C,MAAM,EAAE,KAAK;IACbe,eAAe,EAAE,SAAS;IAC1BkC,YAAY,EAAE,EAAE;IAChBP,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,GAAG,EAAE,EAAE;IACPE,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEP,KAAK,EAAE,CAAC;MAAE5C,MAAM,EAAE;IAAE,CAAC;IACrCoD,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACb,CAAC;EACDf,UAAU,EAAE;IACVhB,QAAQ,EAAE,EAAE;IACZD,UAAU,EAAE,KAAK;IACjBM,KAAK,EAAE;EACT,CAAC;EACD6B,aAAa,EAAE;IACbb,KAAK,EAAE,KAAK;IACZ5C,MAAM,EAAE,KAAK;IACbe,eAAe,EAAE,SAAS;IAC1BkC,YAAY,EAAE,EAAE;IAChBP,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,GAAG,EAAE,EAAE;IACPE,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEP,KAAK,EAAE,CAAC;MAAE5C,MAAM,EAAE;IAAE,CAAC;IACrCoD,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,SAASvB,SAASA,CAAA,EAAG;EACnB,IAAM3B,UAAU,GAAGtB,aAAa,CAAC,CAAC;EAClC,OACEY,IAAA,CAAClB,IAAI;IAAC0D,KAAK,EAAEqB,aAAa,CAACnB,SAAU;IAAA7B,QAAA,EACnCb,IAAA,CAAChB,UAAU;MAAA6B,QAAA,EACTX,KAAA,CAACpB,IAAI;QAAC0D,KAAK,EAAE,CAACqB,aAAa,CAAClB,IAAI,EAAE;UAACrC,MAAM,EAACF;QAAU,CAAC,CAAE;QAAAS,QAAA,GACrDX,KAAA,CAACf,gBAAgB;UACfgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,EAAE;cAC9B4B,IAAI,EAAE,OAAO;cACbC,KAAK,EAAE;YACT,CAAC,CAAC;UAAA,CACH;UACDzB,KAAK,EAAEqB,aAAa,CAACE,aAAc;UAAAlD,QAAA,GAEnCb,IAAA,CAACd,sBAAsB;YACrB6B,IAAI,EAAC,0BAA0B;YAC/BmB,KAAK,EAAE,OAAQ;YACfD,IAAI,EAAE;UAAG,CACV,CAAC,EAEFjC,IAAA,CAACnB,IAAI;YAAC2D,KAAK,EAAEqB,aAAa,CAAChB,UAAW;YAAAhC,QAAA,EAAC;UAAK,CAAM,CAAC;QAAA,CACnC,CAAC,EACnBX,KAAA,CAACf,gBAAgB;UACfgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,EAAE;cAC9B4B,IAAI,EAAE,cAAc;cACpBC,KAAK,EAAE;YACT,CAAC,CAAC;UAAA,CACH;UACDzB,KAAK,EAAEqB,aAAa,CAACE,aAAc;UAAAlD,QAAA,GAEnCb,IAAA,CAACd,sBAAsB;YAAC6B,IAAI,EAAC,MAAM;YAACmB,KAAK,EAAE,OAAQ;YAACD,IAAI,EAAE;UAAG,CAAE,CAAC,EAEhEjC,IAAA,CAACnB,IAAI;YAAC2D,KAAK,EAAEqB,aAAa,CAAChB,UAAW;YAAAhC,QAAA,EAAC;UAAY,CAAM,CAAC;QAAA,CAC1C,CAAC,EACnBX,KAAA,CAACf,gBAAgB;UACfgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,EAAE;cAC9B4B,IAAI,EAAE,cAAc;cACpBC,KAAK,EAAE;YACT,CAAC,CAAC;UAAA,CACH;UACDzB,KAAK,EAAEqB,aAAa,CAACE,aAAc;UAAAlD,QAAA,GAEnCb,IAAA,CAACd,sBAAsB;YAAC6B,IAAI,EAAC,UAAU;YAACmB,KAAK,EAAE,OAAQ;YAACD,IAAI,EAAE;UAAG,CAAE,CAAC,EAEpEjC,IAAA,CAACnB,IAAI;YAAC2D,KAAK,EAAEqB,aAAa,CAAChB,UAAW;YAAAhC,QAAA,EAAC;UAAY,CAAM,CAAC;QAAA,CAC1C,CAAC,EACnBX,KAAA,CAACf,gBAAgB;UACfgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,EAAE;cAC9B4B,IAAI,EAAE,SAAS;cACfC,KAAK,EAAE;YACT,CAAC,CAAC;UAAA,CACH;UACDzB,KAAK,EAAEqB,aAAa,CAACE,aAAc;UAAAlD,QAAA,GAEnCb,IAAA,CAACd,sBAAsB;YAAC6B,IAAI,EAAC,SAAS;YAACmB,KAAK,EAAE,OAAQ;YAACD,IAAI,EAAE;UAAG,CAAE,CAAC,EAEnEjC,IAAA,CAACnB,IAAI;YAAC2D,KAAK,EAAEqB,aAAa,CAAChB,UAAW;YAAAhC,QAAA,EAAC;UAAQ,CAAM,CAAC;QAAA,CACtC,CAAC,EACnBX,KAAA,CAACf,gBAAgB;UACfgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,EAAE;cAC9B4B,IAAI,EAAE,eAAe;cACrBC,KAAK,EAAE;YACT,CAAC,CAAC;UAAA,CACH;UACDzB,KAAK,EAAEqB,aAAa,CAACE,aAAc;UAAAlD,QAAA,GAEnCb,IAAA,CAACd,sBAAsB;YACrB6B,IAAI,EAAC,YAAY;YACjBmB,KAAK,EAAE,OAAQ;YACfD,IAAI,EAAE;UAAG,CACV,CAAC,EAEFjC,IAAA,CAACnB,IAAI;YAAC2D,KAAK,EAAEqB,aAAa,CAAChB,UAAW;YAAAhC,QAAA,EAAC;UAAc,CAAM,CAAC;QAAA,CAC5C,CAAC,EACnBX,KAAA,CAACf,gBAAgB;UACfgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,EAAE;cAC9B4B,IAAI,EAAE,aAAa;cACnBC,KAAK,EAAE;YACT,CAAC,CAAC;UAAA,CACH;UACDzB,KAAK,EAAEqB,aAAa,CAACE,aAAc;UAAAlD,QAAA,GAEnCb,IAAA,CAACd,sBAAsB;YACrB6B,IAAI,EAAC,YAAY;YACjBmB,KAAK,EAAE,OAAQ;YACfD,IAAI,EAAE;UAAG,CACV,CAAC,EAEFjC,IAAA,CAACnB,IAAI;YAAC2D,KAAK,EAAEqB,aAAa,CAAChB,UAAW;YAAAhC,QAAA,EAAC;UAAgB,CAAM,CAAC;QAAA,CAC9C,CAAC,EACnBX,KAAA,CAACf,gBAAgB;UACfgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPzB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,EAAE;cAC9B4B,IAAI,EAAE,cAAc;cACpBC,KAAK,EAAE;YACT,CAAC,CAAC;UAAA,CACH;UACDzB,KAAK,EAAEqB,aAAa,CAACE,aAAc;UAAAlD,QAAA,GAEnCb,IAAA,CAACd,sBAAsB;YACrB6B,IAAI,EAAC,WAAW;YAChBmB,KAAK,EAAE,OAAQ;YACfD,IAAI,EAAE;UAAG,CACV,CAAC,EAEFjC,IAAA,CAACnB,IAAI;YAAC2D,KAAK,EAAEqB,aAAa,CAAChB,UAAW;YAAAhC,QAAA,EAAC;UAAgB,CAAM,CAAC;QAAA,CAC9C,CAAC;MAAA,CACf;IAAC,CACG;EAAC,CACT,CAAC;AAEX;AAEA,SAAS0B,QAAQA,CAAA2B,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACvB,IAAMzD,UAAU,GAAGtB,aAAa,CAAC,CAAC;EAClC,IAAAgF,aAAA,GAAwBD,KAAK,CAACE,MAAM;IAA5BL,IAAI,GAAAI,aAAA,CAAJJ,IAAI;IAAEC,KAAK,GAAAG,aAAA,CAALH,KAAK;EACnB,IAAAK,YAAA,GAAsB/E,UAAU,CAACD,WAAW,CAAC;IAArCiF,SAAS,GAAAD,YAAA,CAATC,SAAS;EACjB,IAAIC,aAAa,GAAG,EAAE;EACtB,IAAMC,mBAAmB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACF,IAAMC,QAAQ,SAAS/E,GAAG,CAACQ,GAAG,CAAC,QAAQ,CAAC;QACxCwE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;QAE1BP,aAAa,MAAAQ,MAAA,CAAAC,kBAAA,CAAOT,aAAa,GAAAS,kBAAA,CAAIL,QAAQ,CAACG,IAAI,EAAC;QACnDF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,aAAa,CAAC;QAEpCA,aAAa,CAACU,GAAG,CAAC,UAACC,KAAK,EAAK;UAC3BN,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEd,IAAI,CAAC;UACzB,IAAIoB,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAACvB,IAAI,CAAC;UACxCwB,OAAO,CAACC,IAAI,CAACJ,MAAM,CAACK,MAAM,CAACP,KAAK,CAAC,CAACC,CAAC,CAAC,CAAC;UACrCP,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEU,OAAO,CAAC;QAC3B,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,gBAlBKlB,mBAAmBA,CAAA;MAAA,OAAAC,KAAA,CAAAkB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAkBxB;EACDpB,mBAAmB,CAAC,CAAC;EACrB,IAAIe,OAAO,GAAG,EAAE;EAChB,IAAMM,OAAO,GAAG,EAAE;EAElB,IAAMC,UAAU,GAAG,CACjB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;EAUD,IAAMC,iBAAiB,GAAG,CAAC,CAAC;EAC5BR,OAAO,CAACS,OAAO,CAAC,UAACC,QAAQ,EAAK;IAC5B,IAAIF,iBAAiB,CAACE,QAAQ,CAAC,EAAE;MAC/BF,iBAAiB,CAACE,QAAQ,CAAC,IAAI,CAAC;IAClC,CAAC,MAAM;MACLF,iBAAiB,CAACE,QAAQ,CAAC,GAAG,CAAC;IACjC;EACF,CAAC,CAAC;EACFrB,OAAO,CAACC,GAAG,CAACkB,iBAAiB,CAAC;EAG9B,SAAAG,KAAA,IAA2Bd,MAAM,CAACe,OAAO,CAACJ,iBAAiB,CAAC,EAAE;IAAA,IAAAK,KAAA,GAAAC,cAAA,CAAAH,KAAA;IAAA,IAAlDI,GAAG,GAAAF,KAAA;IAAA,IAAEG,KAAK,GAAAH,KAAA;IACpBxB,OAAO,CAACC,GAAG,CAAIyB,GAAG,UAAKC,KAAO,CAAC;IAC/B,IAAIC,IAAI,GAAI,GAAG,GAAGC,MAAM,CAACF,KAAK,CAAC,GAAIhC,aAAa,CAACmC,MAAM;IACvD9B,OAAO,CAACC,GAAG,CAAC2B,IAAI,CAAC;IACjB,IAAMG,QAAQ,GAAG;MACfJ,KAAK,EAAEA,KAAK;MACZtE,KAAK,EAAE6D,UAAU,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIhB,UAAU,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MACtEK,IAAI,EAAKP,IAAI,UAAKF,GAAK;MACvBU,IAAI,OAAKV,GAAK;MACdW,WAAW,EAAKT,IAAI;IACtB,CAAC;IACDX,OAAO,CAACL,IAAI,CAACmB,QAAQ,CAAC;IACtB/B,OAAO,CAACC,GAAG,CAACgB,OAAO,CAACa,MAAM,CAAC;EAC7B;EAEA,OACE3G,IAAA,CAAClB,IAAI;IAAC0D,KAAK,EAAE2E,KAAK,CAACzE,SAAU;IAAA7B,QAAA,EAC3BX,KAAA,CAAClB,UAAU;MAAA6B,QAAA,GAETb,IAAA,CAAClB,IAAI;QAAC0D,KAAK,EAAE2E,KAAK,CAACC,eAAgB;QAAAvG,QAAA,EACjCX,KAAA,CAACrB,IAAI;UAAC2D,KAAK,EAAE2E,KAAK,CAACE,WAAY;UAAAxG,QAAA,GAAC,GAAC,EAACoD,KAAK,EAAC,GAAC;QAAA,CAAM;MAAC,CAC5C,CAAC,EAERhF,QAAQ,CAACqI,EAAE,KAAK,KAAK,GACrBpH,KAAA,CAACpB,IAAI;QAAC0D,KAAK,EAAE2E,KAAK,CAACI,iBAAkB;QAAA1G,QAAA,GACpCb,IAAA,CAAClB,IAAI;UAAC0D,KAAK,EAAE2E,KAAK,CAACK,YAAa;UAAA3G,QAAA,EAC9Bb,IAAA,CAAChB,UAAU;YAACyI,UAAU;YAAA5G,QAAA,EACxBb,IAAA,CAACL,QAAQ;cACD+H,KAAK;cACLC,QAAQ;cACRC,QAAQ;cACRC,sBAAsB,EAAE,CAAE;cAC1BC,sBAAsB,EAAC,YAAY;cACnCC,SAAS,EAAC,OAAO;cACjBC,MAAM,EAAE,GAAI;cACZC,WAAW,EAAE,EAAG;cAChBC,QAAQ,EAAE,EAAG;cACbC,kBAAkB;cAClBC,mBAAmB,EAAG,OAAO;cAC7BC,cAAc,EAAG,KAAK;cACtBC,kBAAkB;cAClBC,oBAAoB,EAAE,EAAG;cACzBxD,IAAI,EAAEe,OAAQ;cACd0C,YAAY,EAAE,EAAG;cACjBhG,KAAK,EAAE2E,KAAK,CAACK;YAAa,CAEzB;UAAC,CACU;QAAC,CACf,CAAC,EACPxH,IAAA,CAAClB,IAAI;UAAC0D,KAAK,EAAE2E,KAAK,CAACsB,mBAAoB;UAAA5H,QAAA,EACvCX,KAAA,CAACT,SAAS;YAAAoB,QAAA,GACZX,KAAA,CAACT,SAAS,CAACiJ,MAAM;cAAClG,KAAK,EAAE;gBAACX,QAAQ,EAAE,EAAE;gBAAEK,KAAK,EAAE;cAAO,CAAE;cAAArB,QAAA,GACtDb,IAAA,CAACP,SAAS,CAACkJ,KAAK;gBAAA9H,QAAA,EAAC;cAAQ,CAAiB,CAAC,EAC3Cb,IAAA,CAACP,SAAS,CAACkJ,KAAK;gBAAA9H,QAAA,EAAC;cAAU,CAAiB,CAAC,EAC7Cb,IAAA,CAACP,SAAS,CAACkJ,KAAK;gBAAA9H,QAAA,EAAC;cAAW,CAAiB,CAAC;YAAA,CAE9B,CAAC,EACjBiF,OAAO,CAACZ,GAAG,CAAC,UAAC0D,SAAS,EAAEC,KAAK,EAAK;cAC9B,OACE3I,KAAA,CAACT,SAAS,CAACqJ,GAAG;gBAAatG,KAAK,EAAE2E,KAAK,CAAC4B,cAAe;gBAAAlI,QAAA,GACxDX,KAAA,CAACT,SAAS,CAACuJ,IAAI;kBAAAnI,QAAA,GAAE,GAAC,EAAC+H,SAAS,CAAC3B,IAAI,EAAC,IAAE;gBAAA,CAAgB,CAAC,EACtD/G,KAAA,CAACT,SAAS,CAACuJ,IAAI;kBAAAnI,QAAA,GAAE,KAAG,EAAC+H,SAAS,CAACpC,KAAK,EAAC,GAAC;gBAAA,CAAgB,CAAC,EACvDtG,KAAA,CAACT,SAAS,CAACuJ,IAAI;kBAAAnI,QAAA,GAAE,KAAG,EAAC+H,SAAS,CAAC1B,WAAW,EAAC,GAAC;gBAAA,CAAgB,CAAC;cAAA,GAHvC2B,KAIP,CAAC;YAEpB,CAAC,CAAC,EACA3I,KAAA,CAACT,SAAS,CAACqJ,GAAG;cAACtG,KAAK,EAAE2E,KAAK,CAAC4B,cAAe;cAAAlI,QAAA,GAC3Cb,IAAA,CAACP,SAAS,CAACuJ,IAAI;gBAAAnI,QAAA,EAAE;cAAO,CAAgB,CAAC,EACzCX,KAAA,CAACT,SAAS,CAACuJ,IAAI;gBAAAnI,QAAA,GAAE,GAAC,EAAC0D,SAAS,CAACoC,MAAM,EAAC,IAAE;cAAA,CAAgB,CAAC,EACvD3G,IAAA,CAACP,SAAS,CAACuJ,IAAI;gBAAAnI,QAAA,EAAE;cAAG,CAAgB,CAAC;YAAA,CACtB,CAAC;UAAA,CACZ;QAAC,CACH,CAAC;MAAA,CACD,CAAC,GAEGb,IAAA,CAAClB,IAAI;QAAC0D,KAAK,EAAE2E,KAAK,CAACsB,mBAAoB;QAAA5H,QAAA,EACzCX,KAAA,CAACT,SAAS;UAAAoB,QAAA,GACZX,KAAA,CAACT,SAAS,CAACiJ,MAAM;YAAClG,KAAK,EAAE;cAACX,QAAQ,EAAE,EAAE;cAAEK,KAAK,EAAE;YAAO,CAAE;YAAArB,QAAA,GACtDb,IAAA,CAACP,SAAS,CAACkJ,KAAK;cAAA9H,QAAA,EAAC;YAAQ,CAAiB,CAAC,EAC3Cb,IAAA,CAACP,SAAS,CAACkJ,KAAK;cAAA9H,QAAA,EAAC;YAAU,CAAiB,CAAC,EAC7Cb,IAAA,CAACP,SAAS,CAACkJ,KAAK;cAAA9H,QAAA,EAAC;YAAW,CAAiB,CAAC;UAAA,CAE9B,CAAC,EACjBiF,OAAO,CAACZ,GAAG,CAAC,UAAC0D,SAAS,EAAEC,KAAK,EAAK;YAC9B,OACE3I,KAAA,CAACT,SAAS,CAACqJ,GAAG;cAAatG,KAAK,EAAE2E,KAAK,CAAC4B,cAAe;cAAAlI,QAAA,GACxDX,KAAA,CAACT,SAAS,CAACuJ,IAAI;gBAAAnI,QAAA,GAAE,GAAC,EAAC+H,SAAS,CAAC3B,IAAI,EAAC,IAAE;cAAA,CAAgB,CAAC,EACtD/G,KAAA,CAACT,SAAS,CAACuJ,IAAI;gBAAAnI,QAAA,GAAE,KAAG,EAAC+H,SAAS,CAACpC,KAAK,EAAC,GAAC;cAAA,CAAgB,CAAC,EACvDtG,KAAA,CAACT,SAAS,CAACuJ,IAAI;gBAAAnI,QAAA,GAAE,KAAG,EAAC+H,SAAS,CAAC1B,WAAW,EAAC,GAAC;cAAA,CAAgB,CAAC;YAAA,GAHvC2B,KAIP,CAAC;UAEpB,CAAC,CAAC,EACA3I,KAAA,CAACT,SAAS,CAACqJ,GAAG;YAACtG,KAAK,EAAE2E,KAAK,CAAC4B,cAAe;YAAAlI,QAAA,GAC3Cb,IAAA,CAACP,SAAS,CAACuJ,IAAI;cAAAnI,QAAA,EAAE;YAAO,CAAgB,CAAC,EACzCX,KAAA,CAACT,SAAS,CAACuJ,IAAI;cAAAnI,QAAA,GAAE,GAAC,EAAC0D,SAAS,CAACoC,MAAM,EAAC,IAAE;YAAA,CAAgB,CAAC,EACvD3G,IAAA,CAACP,SAAS,CAACuJ,IAAI;cAAAnI,QAAA,EAAE;YAAG,CAAgB,CAAC;UAAA,CACtB,CAAC;QAAA,CACZ;MAAC,CACH,CAAE;IAAA,CAEJ;EAAC,CACP,CAAC;AAEX;AAEA,IAAMsG,KAAK,GAAGpI,UAAU,CAAC+D,MAAM,CAAC;EAC9BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpB5B,eAAe,EAAE;EAEnB,CAAC;EACD+F,eAAe,EAAE;IACf9G,MAAM,EAAE,IAAI;IACZ4C,KAAK,EAAE;EAKT,CAAC;EACDmE,WAAW,EAAE;IACXxF,QAAQ,EAAE,EAAE;IACZoH,SAAS,EAAE,QAAQ;IACnBrH,UAAU,EAAE,GAAG;IACfsH,SAAS,EAAE,QAAQ;IACnBhH,KAAK,EAAE,SAAS;IAChBiH,aAAa,EAAE;EACjB,CAAC;EACD5B,iBAAiB,EAAE;IACjBjH,MAAM,EAAE,MAAM;IACd4C,KAAK,EAAE,MAAM;IACb3B,WAAW,EAAE,CAAC;IACdD,WAAW,EAAE,SAAS;IACtBiC,YAAY,EAAE;EAChB,CAAC;EACDiE,YAAY,EAAE;IACZlH,MAAM,EAAE,KAAK;IACb4C,KAAK,EAAE;EAET,CAAC;EACDuF,mBAAmB,EAAE;IACnBnI,MAAM,EAAE,KAAK;IACb4C,KAAK,EAAE,MAAM;IACb3B,WAAW,EAAE,CAAC;IACdD,WAAW,EAAE,SAAS;IACtBiC,YAAY,EAAE,EAAE;IAChBrB,KAAK,EAAE,KAAK;IACZkH,aAAa,EAAE;EACjB,CAAC;EACDL,cAAc,EAAE;IACdlH,QAAQ,EAAE,EAAE;IACZK,KAAK,EAAE;EAIT;AACF,CAAC,CAAC;AAEF,SAASI,QAAQA,CAAA,EAAG;EAClB,IAAM5B,UAAU,GAAGtB,aAAa,CAAC,CAAC;EAClC,IAAAiK,YAAA,GAAsB9J,UAAU,CAACD,WAAW,CAAC;IAArCiF,SAAS,GAAA8E,YAAA,CAAT9E,SAAS;EAEjB,OACEvE,IAAA,CAAClB,IAAI;IAAC0D,KAAK,EAAE8G,SAAS,CAAC5G,SAAU;IAAA7B,QAAA,EAC/Bb,IAAA,CAAChB,UAAU;MAACwD,KAAK,EAAE;QAAEU,KAAK,EAAE;MAAO,CAAE;MAAArC,QAAA,EAClC0D,SAAS,CAACW,GAAG,CAAC,UAACC,KAAK,EAAE0D,KAAK;QAAA,OAC1B3I,KAAA,CAACpB,IAAI;UAAC0D,KAAK,EAAE8G,SAAS,CAACC,KAAM;UAAA1I,QAAA,GAC3BX,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAAC,SAAO,EAACsE,KAAK,CAAC8B,IAAI;UAAA,CAAO,CAAC,EAC7D/G,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAAC,UAAQ,EAACsE,KAAK,CAACsE,KAAK,EAAC,GAAC;UAAA,CAAM,CAAC,EAChEvJ,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAAC,YAAU,EAACsE,KAAK,CAACuE,OAAO;UAAA,CAAO,CAAC,EACnExJ,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAC/B,GAAG,EAAC,qBACW,EAACsE,KAAK,CAAEwE,aAAa;UAAA,CACjC,CAAC,EACPzJ,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAC/B,GAAG,EAAC,uBACa,EAACsE,KAAK,CAACyE,WAAW;UAAA,CAChC,CAAC,EACP1J,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAC/B,GAAG,EAAC,YACK,EAACsE,KAAK,CAAC0E,QAAQ;UAAA,CACrB,CAAC,EACP3J,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAAC,QAAM,EAACsE,KAAK,CAAC2E,GAAG;UAAA,CAAO,CAAC,EAC3D5J,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAC/B,GAAG,EAAC,cACO,EAACsE,KAAK,CAAC4E,UAAU;UAAA,CACzB,CAAC,EACP7J,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAC/B,GAAG,EAAC,8BACiB,EAACsE,KAAK,CAAC6E,KAAK;UAAA,CAC9B,CAAC,EACP9J,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAAC,WAAS,EAACsE,KAAK,CAAC8E,KAAK;UAAA,CAAO,CAAC,EAChE/J,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAC/B,GAAG,EAAC,qCAC2B,EAACsE,KAAK,CAAC+E,iBAAiB;UAAA,CACpD,CAAC,EACPhK,KAAA,CAACrB,IAAI;YAAC2D,KAAK,EAAE8G,SAAS,CAACE,UAAW;YAAA3I,QAAA,GAC/B,GAAG,EAAC,6BACmB,EAACsE,KAAK,CAACgF,kBAAkB;UAAA,CAC7C,CAAC;QAAA,GAjC0BtB,KAkC7B,CAAC;MAAA,CACR;IAAC,CACQ;EAAC,CACT,CAAC;AAEX;AAEA,IAAMS,SAAS,GAAGvK,UAAU,CAAC+D,MAAM,CAAC;EAClCJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpB5B,eAAe,EAAE;EACnB,CAAC;EACDsB,IAAI,EAAE;IACJrC,MAAM,EAAE,KAAK;IACb4C,KAAK,EAAE,MAAM;IACbF,cAAc,EAAE,QAAQ;IACxBI,YAAY,EAAE,QAAQ;IACtBE,GAAG,EAAE,EAAE;IACPjC,eAAe,EAAE,aAAa;IAC9B+I,iBAAiB,EAAE,CAAC;IACpB9I,WAAW,EAAE;EACf,CAAC;EAED+I,cAAc,EAAE;IACdnH,KAAK,EAAE,MAAM;IACb5C,MAAM,EAAE,EAAE;IAGVwD,aAAa,EAAE,KAAK;IAGpBsF,aAAa,EAAE;EACjB,CAAC;EACDG,KAAK,EAAE;IACLhI,WAAW,EAAE,CAAC;IACdgC,YAAY,EAAE,EAAE;IAChBjD,MAAM,EAAE,GAAG;IACX4C,KAAK,EAAE,MAAM;IACb5B,WAAW,EAAE,SAAS;IACtBgJ,YAAY,EAAE;EAChB,CAAC;EACDd,UAAU,EAAE;IACV3H,QAAQ,EAAE,EAAE;IACZK,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}