{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ListAccordionGroupContext = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar ListAccordionGroupContext = exports.ListAccordionGroupContext = React.createContext(null);\nvar ListAccordionGroup = function ListAccordionGroup(_ref) {\n  var expandedIdProp = _ref.expandedId,\n    onAccordionPress = _ref.onAccordionPress,\n    children = _ref.children;\n  var _React$useState = React.useState(undefined),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    expandedId = _React$useState2[0],\n    setExpandedId = _React$useState2[1];\n  var onAccordionPressDefault = function onAccordionPressDefault(newExpandedId) {\n    setExpandedId(function (currentExpandedId) {\n      return currentExpandedId === newExpandedId ? undefined : newExpandedId;\n    });\n  };\n  return React.createElement(ListAccordionGroupContext.Provider, {\n    value: {\n      expandedId: expandedIdProp || expandedId,\n      onAccordionPress: onAccordionPress || onAccordionPressDefault\n    }\n  }, children);\n};\nListAccordionGroup.displayName = 'List.AccordionGroup';\nvar _default = exports.default = ListAccordionGroup;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ListAccordionGroupContext","exports","createContext","ListAccordionGroup","_ref","expandedIdProp","expandedId","onAccordionPress","children","_React$useState","useState","undefined","_React$useState2","_slicedToArray2","setExpandedId","onAccordionPressDefault","newExpandedId","currentExpandedId","createElement","Provider","value","displayName","_default"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\List\\ListAccordionGroup.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport type Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onAccordionPress?: (expandedId: string | number) => void;\n  /**\n   * Id of the currently expanded list accordion\n   */\n  expandedId?: string | number;\n  /**\n   * React elements containing list accordions\n   */\n  children: React.ReactNode;\n};\n\nexport type ListAccordionGroupContextType = {\n  expandedId: string | number | undefined;\n  onAccordionPress: (expandedId: string | number) => void;\n} | null;\n\nexport const ListAccordionGroupContext =\n  React.createContext<ListAccordionGroupContextType>(null);\n\n/**\n * List.AccordionGroup allows to control a group of List Accordions. `id` prop for List.Accordion is required in order for group to work.\n * List.AccordionGroup can be a controlled or uncontrolled component. The example shows the uncontrolled version.\n * At most one Accordion can be expanded at a given time.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, Text } from 'react-native';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.AccordionGroup>\n *     <List.Accordion title=\"Accordion 1\" id=\"1\">\n *       <List.Item title=\"Item 1\" />\n *     </List.Accordion>\n *     <List.Accordion title=\"Accordion 2\" id=\"2\">\n *       <List.Item title=\"Item 2\" />\n *     </List.Accordion>\n *     <View>\n *       <Text>\n *         List.Accordion can be wrapped because implementation uses React.Context.\n *       </Text>\n *       <List.Accordion title=\"Accordion 3\" id=\"3\">\n *         <List.Item title=\"Item 3\" />\n *       </List.Accordion>\n *     </View>\n *   </List.AccordionGroup>\n * );\n *\n * export default MyComponent;\n *```\n */\nconst ListAccordionGroup = ({\n  expandedId: expandedIdProp,\n  onAccordionPress,\n  children,\n}: Props) => {\n  const [expandedId, setExpandedId] = React.useState<\n    string | number | undefined\n  >(undefined);\n\n  const onAccordionPressDefault = (newExpandedId: string | number) => {\n    setExpandedId((currentExpandedId) =>\n      currentExpandedId === newExpandedId ? undefined : newExpandedId\n    );\n  };\n\n  return (\n    <ListAccordionGroupContext.Provider\n      value={{\n        expandedId: expandedIdProp || expandedId, // component can be controlled or uncontrolled\n        onAccordionPress: onAccordionPress || onAccordionPressDefault,\n      }}\n    >\n      {children}\n    </ListAccordionGroupContext.Provider>\n  );\n};\n\nListAccordionGroup.displayName = 'List.AccordionGroup';\n\nexport default ListAccordionGroup;\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA8B,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAH,wBAAAO,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAsBvB,IAAMW,yBAAyB,GAAAC,OAAA,CAAAD,yBAAA,GACpCzB,KAAK,CAAC2B,aAAa,CAAgC,IAAI,CAAC;AAmC1D,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAGC,IAAA,EAId;EAAA,IAHCC,cAAc,GAGpBD,IAAA,CAHNE,UAAU;IACVC,gBAAgB,GAEVH,IAAA,CAFNG,gBAAgB;IAChBC,QAAA,GACMJ,IAAA,CADNI,QAAA;EAEA,IAAAC,eAAA,GAAoClC,KAAK,CAACmC,QAAQ,CAEhDC,SAAS,CAAC;IAAAC,gBAAA,OAAAC,eAAA,CAAA5B,OAAA,EAAAwB,eAAA;IAFLH,UAAU,GAAAM,gBAAA;IAAEE,aAAa,GAAAF,gBAAA;EAIhC,IAAMG,uBAAuB,GAAI,SAA3BA,uBAAuBA,CAAIC,aAA8B,EAAK;IAClEF,aAAa,CAAE,UAAAG,iBAAiB;MAAA,OAC9BA,iBAAiB,KAAKD,aAAa,GAAGL,SAAS,GAAGK,aACpD;IAAA,EAAC;EACH,CAAC;EAED,OACEzC,KAAA,CAAA2C,aAAA,CAAClB,yBAAyB,CAACmB,QAAQ;IACjCC,KAAK,EAAE;MACLd,UAAU,EAAED,cAAc,IAAIC,UAAU;MACxCC,gBAAgB,EAAEA,gBAAgB,IAAIQ;IACxC;EAAE,GAEDP,QACiC,CAAC;AAEzC,CAAC;AAEDL,kBAAkB,CAACkB,WAAW,GAAG,qBAAqB;AAAA,IAAAC,QAAA,GAAArB,OAAA,CAAAhB,OAAA,GAEvCkB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}