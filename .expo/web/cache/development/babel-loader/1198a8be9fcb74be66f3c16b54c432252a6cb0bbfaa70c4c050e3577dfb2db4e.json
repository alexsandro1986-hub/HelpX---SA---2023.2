{"ast":null,"code":"import normalizeColor from \"./compiler/normalizeColor\";\nimport normalizeValueWithProperty from \"./compiler/normalizeValueWithProperty\";\nvar emptyObject = {};\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = function createBoxShadowValue(style) {\n  var shadowColor = style.shadowColor,\n    shadowOffset = style.shadowOffset,\n    shadowOpacity = style.shadowOpacity,\n    shadowRadius = style.shadowRadius;\n  var _ref = shadowOffset || defaultOffset,\n    height = _ref.height,\n    width = _ref.width;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var createTextShadowValue = function createTextShadowValue(style) {\n  var textShadowColor = style.textShadowColor,\n    textShadowOffset = style.textShadowOffset,\n    textShadowRadius = style.textShadowRadius;\n  var _ref2 = textShadowOffset || defaultOffset,\n    height = _ref2.height,\n    width = _ref2.width;\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var preprocess = function preprocess(originalStyle) {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    }\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? boxShadow + \", \" + boxShadowValue : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? textShadow + \", \" + textShadowValue : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n    nextStyle[prop] = value;\n  }\n  return nextStyle;\n};\nexport default preprocess;","map":{"version":3,"names":["normalizeColor","normalizeValueWithProperty","emptyObject","defaultOffset","height","width","createBoxShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color","createTextShadowValue","textShadowColor","textShadowOffset","textShadowRadius","_ref2","radius","preprocess","originalStyle","nextStyle","originalProp","originalValue","prop","value","Object","prototype","hasOwnProperty","call","boxShadowValue","boxShadow","textShadowValue","textShadow"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-web/src/exports/StyleSheet/preprocess.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeColor from './compiler/normalizeColor';\nimport normalizeValueWithProperty from './compiler/normalizeValueWithProperty';\n\nconst emptyObject = {};\n\n/**\n * Shadows\n */\n\nconst defaultOffset = { height: 0, width: 0 };\n\nexport const createBoxShadowValue = (style: Object): void | string => {\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius } = style;\n  const { height, width } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (\n    color != null &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\nexport const createTextShadowValue = (style: Object): void | string => {\n  const { textShadowColor, textShadowOffset, textShadowRadius } = style;\n  const { height, width } = textShadowOffset || defaultOffset;\n  const radius = textShadowRadius || 0;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(radius);\n  const color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (\n    color &&\n    (height !== 0 || width !== 0 || radius !== 0) &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\n/**\n * Preprocess styles\n */\nexport const preprocess = <T: {| [key: string]: any |}>(\n  originalStyle: T\n): T => {\n  const style = originalStyle || emptyObject;\n  const nextStyle = {};\n\n  for (const originalProp in style) {\n    const originalValue = style[originalProp];\n    let prop = originalProp;\n    let value = originalValue;\n\n    if (\n      !Object.prototype.hasOwnProperty.call(style, originalProp) ||\n      originalValue == null\n    ) {\n      continue;\n    }\n\n    // Convert shadow styles\n    if (\n      prop === 'shadowColor' ||\n      prop === 'shadowOffset' ||\n      prop === 'shadowOpacity' ||\n      prop === 'shadowRadius'\n    ) {\n      const boxShadowValue = createBoxShadowValue(style);\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        const { boxShadow } = style;\n        prop = 'boxShadow';\n        value = boxShadow ? `${boxShadow}, ${boxShadowValue}` : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    // Convert text shadow styles\n    if (\n      prop === 'textShadowColor' ||\n      prop === 'textShadowOffset' ||\n      prop === 'textShadowRadius'\n    ) {\n      const textShadowValue = createTextShadowValue(style);\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        const { textShadow } = style;\n        prop = 'textShadow';\n        value = textShadow\n          ? `${textShadow}, ${textShadowValue}`\n          : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  }\n\n  // $FlowIgnore\n  return nextStyle;\n};\n\nexport default preprocess;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}