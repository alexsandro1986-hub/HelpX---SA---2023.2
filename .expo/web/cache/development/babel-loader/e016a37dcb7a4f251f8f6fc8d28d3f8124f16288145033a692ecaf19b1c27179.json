{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DataTablePagination = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _theming = require(\"../../core/theming\");\nvar _Button = _interopRequireDefault(require(\"../Button/Button\"));\nvar _IconButton = _interopRequireDefault(require(\"../IconButton/IconButton\"));\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\nvar _Menu = _interopRequireDefault(require(\"../Menu/Menu\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"label\", \"accessibilityLabel\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"showFastPaginationControls\", \"numberOfItemsPerPageList\", \"numberOfItemsPerPage\", \"onItemsPerPageChange\", \"selectPageDropdownLabel\", \"selectPageDropdownAccessibilityLabel\", \"selectPageDropdownRippleColor\", \"dropdownItemRippleColor\", \"theme\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar PaginationControls = function PaginationControls(_ref) {\n  var page = _ref.page,\n    numberOfPages = _ref.numberOfPages,\n    onPageChange = _ref.onPageChange,\n    showFastPaginationControls = _ref.showFastPaginationControls,\n    themeOverrides = _ref.theme,\n    paginationControlRippleColor = _ref.paginationControlRippleColor;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  return React.createElement(React.Fragment, null, showFastPaginationControls ? React.createElement(_IconButton.default, {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n        color = _ref2.color;\n      return React.createElement(_MaterialCommunityIcon.default, {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(0);\n    },\n    accessibilityLabel: \"page-first\",\n    theme: theme\n  }) : null, React.createElement(_IconButton.default, {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n        color = _ref3.color;\n      return React.createElement(_MaterialCommunityIcon.default, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    },\n    accessibilityLabel: \"chevron-left\",\n    theme: theme\n  }), React.createElement(_IconButton.default, {\n    icon: function icon(_ref4) {\n      var size = _ref4.size,\n        color = _ref4.color;\n      return React.createElement(_MaterialCommunityIcon.default, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    },\n    accessibilityLabel: \"chevron-right\",\n    theme: theme\n  }), showFastPaginationControls ? React.createElement(_IconButton.default, {\n    icon: function icon(_ref5) {\n      var size = _ref5.size,\n        color = _ref5.color;\n      return React.createElement(_MaterialCommunityIcon.default, {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(numberOfPages - 1);\n    },\n    accessibilityLabel: \"page-last\",\n    theme: theme\n  }) : null);\n};\nvar PaginationDropdown = function PaginationDropdown(_ref6) {\n  var numberOfItemsPerPageList = _ref6.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref6.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref6.onItemsPerPageChange,\n    themeOverrides = _ref6.theme,\n    selectPageDropdownRippleColor = _ref6.selectPageDropdownRippleColor,\n    dropdownItemRippleColor = _ref6.dropdownItemRippleColor;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var colors = theme.colors;\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    showSelect = _React$useState2[0],\n    toggleSelect = _React$useState2[1];\n  return React.createElement(_Menu.default, {\n    visible: showSelect,\n    onDismiss: function onDismiss() {\n      return toggleSelect(!showSelect);\n    },\n    theme: theme,\n    anchor: React.createElement(_Button.default, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return toggleSelect(true);\n      },\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle,\n      theme: theme,\n      rippleColor: selectPageDropdownRippleColor\n    }, \"\" + numberOfItemsPerPage)\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(function (option) {\n    return React.createElement(_Menu.default.Item, {\n      key: option,\n      titleStyle: option === numberOfItemsPerPage && {\n        color: colors === null || colors === void 0 ? void 0 : colors.primary\n      },\n      onPress: function onPress() {\n        onItemsPerPageChange === null || onItemsPerPageChange === void 0 ? void 0 : onItemsPerPageChange(option);\n        toggleSelect(false);\n      },\n      rippleColor: dropdownItemRippleColor,\n      title: option,\n      theme: theme\n    });\n  }));\n};\nvar DataTablePagination = exports.DataTablePagination = function DataTablePagination(_ref7) {\n  var label = _ref7.label,\n    accessibilityLabel = _ref7.accessibilityLabel,\n    page = _ref7.page,\n    numberOfPages = _ref7.numberOfPages,\n    onPageChange = _ref7.onPageChange,\n    style = _ref7.style,\n    _ref7$showFastPaginat = _ref7.showFastPaginationControls,\n    showFastPaginationControls = _ref7$showFastPaginat === void 0 ? false : _ref7$showFastPaginat,\n    numberOfItemsPerPageList = _ref7.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref7.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref7.onItemsPerPageChange,\n    selectPageDropdownLabel = _ref7.selectPageDropdownLabel,\n    selectPageDropdownAccessibilityLabel = _ref7.selectPageDropdownAccessibilityLabel,\n    selectPageDropdownRippleColor = _ref7.selectPageDropdownRippleColor,\n    dropdownItemRippleColor = _ref7.dropdownItemRippleColor,\n    themeOverrides = _ref7.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref7, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var labelColor = (0, _color.default)(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(_reactNative.View, _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && React.createElement(_reactNative.View, {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, React.createElement(_Text.default, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange,\n    selectPageDropdownRippleColor: selectPageDropdownRippleColor,\n    dropdownItemRippleColor: dropdownItemRippleColor,\n    theme: theme\n  })), React.createElement(_Text.default, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), React.createElement(_reactNative.View, {\n    style: styles.iconsContainer\n  }, React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages,\n    theme: theme\n  })));\n};\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nvar _default = exports.default = DataTablePagination;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_color","_interopRequireDefault","_theming","_Button","_IconButton","_MaterialCommunityIcon","_Menu","_Text","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","PaginationControls","_ref","page","numberOfPages","onPageChange","showFastPaginationControls","themeOverrides","theme","paginationControlRippleColor","useInternalTheme","textColor","isV3","colors","onSurface","text","createElement","Fragment","IconButton","icon","_ref2","size","color","MaterialCommunityIcon","name","direction","I18nManager","getConstants","isRTL","iconColor","rippleColor","disabled","onPress","accessibilityLabel","_ref3","_ref4","_ref5","PaginationDropdown","_ref6","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","selectPageDropdownRippleColor","dropdownItemRippleColor","_React$useState","useState","_React$useState2","_slicedToArray2","showSelect","toggleSelect","Menu","visible","onDismiss","anchor","Button","mode","style","styles","button","contentStyle","map","option","Item","titleStyle","primary","title","DataTablePagination","exports","_ref7","label","_ref7$showFastPaginat","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","_objectWithoutProperties2","labelColor","alpha","rgb","string","View","_extends","container","optionsContainer","Text","numberOfLines","iconsContainer","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign","_default"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\DataTable\\DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme?: ThemeProp;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n  /**\n   * Color of the dropdown item ripple effect.\n   */\n  dropdownItemRippleColor?: ColorValue;\n  /**\n   * Color of the select page dropdown ripple effect.\n   */\n  selectPageDropdownRippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n  /**\n   * Color of the pagination control ripple effect.\n   */\n  paginationControlRippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n  theme: themeOverrides,\n  paginationControlRippleColor,\n}: PaginationControlsProps) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          rippleColor={paginationControlRippleColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n          theme={theme}\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        rippleColor={paginationControlRippleColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n        theme={theme}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        rippleColor={paginationControlRippleColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n        theme={theme}\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          rippleColor={paginationControlRippleColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n          theme={theme}\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  theme: themeOverrides,\n  selectPageDropdownRippleColor,\n  dropdownItemRippleColor,\n}: PaginationDropdownProps) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { colors } = theme;\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      theme={theme}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n          theme={theme}\n          rippleColor={selectPageDropdownRippleColor}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          rippleColor={dropdownItemRippleColor}\n          title={option}\n          theme={theme}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  selectPageDropdownRippleColor,\n  dropdownItemRippleColor,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n              selectPageDropdownRippleColor={selectPageDropdownRippleColor}\n              dropdownItemRippleColor={dropdownItemRippleColor}\n              theme={theme}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n          theme={theme}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default DataTablePagination;\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"],"mappings":";;;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AASA,IAAAE,MAAA,GAAAC,sBAAA,CAAAH,OAAA;AAGA,IAAAI,QAAA,GAAAJ,OAAA;AACA,IAAAK,OAAA,GAAAF,sBAAA,CAAAH,OAAA;AACA,IAAAM,WAAA,GAAAH,sBAAA,CAAAH,OAAA;AACA,IAAAO,sBAAA,GAAAJ,sBAAA,CAAAH,OAAA;AACA,IAAAQ,KAAA,GAAAL,sBAAA,CAAAH,OAAA;AACA,IAAAS,KAAA,GAAAN,sBAAA,CAAAH,OAAA;AAAqC,IAAAU,SAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAb,wBAAAiB,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;;;;;;;;;;;;;;;AAkFrC,IAAMW,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAGC,IAAA,EAOI;EAAA,IAN7BC,IAAI,GAMoBD,IAAA,CANxBC,IAAI;IACJC,aAAa,GAKWF,IAAA,CALxBE,aAAa;IACbC,YAAY,GAIYH,IAAA,CAJxBG,YAAY;IACZC,0BAA0B,GAGFJ,IAAA,CAHxBI,0BAA0B;IACnBC,cAAc,GAEGL,IAAA,CAFxBM,KAAK;IACLC,4BAAA,GACwBP,IAAA,CADxBO,4BAAA;EAEA,IAAMD,KAAK,GAAG,IAAAE,yBAAgB,EAACH,cAAc,CAAC;EAE9C,IAAMI,SAAS,GAAGH,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACK,MAAM,CAACC,SAAS,GAAGN,KAAK,CAACK,MAAM,CAACE,IAAI;EAEzE,OACEjD,KAAA,CAAAkD,aAAA,CAAAlD,KAAA,CAAAmD,QAAA,QACGX,0BAA0B,GACzBxC,KAAA,CAAAkD,aAAA,CAACE,mBAAU;IACTC,IAAI,EAAE,SAAAA,KAAAC,KAAA;MAAA,IAAGC,IAAI,GAASD,KAAA,CAAbC,IAAI;QAAEC,KAAA,GAAOF,KAAA,CAAPE,KAAA;MAAO,OACpBxD,KAAA,CAAAkD,aAAA,CAACO,8BAAqB;QACpBC,IAAI,EAAC,YAAY;QACjBF,KAAK,EAAEA,KAAM;QACbD,IAAI,EAAEA,IAAK;QACXI,SAAS,EAAEC,wBAAW,CAACC,YAAY,CAAC,CAAC,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAC7D,CAAC;IAAA,CACF;IACFC,SAAS,EAAElB,SAAU;IACrBmB,WAAW,EAAErB,4BAA6B;IAC1CsB,QAAQ,EAAE5B,IAAI,KAAK,CAAE;IACrB6B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAM3B,YAAY,CAAC,CAAC,CAAE;IAAA;IAC/B4B,kBAAkB,EAAC,YAAY;IAC/BzB,KAAK,EAAEA;EAAM,CACd,CAAC,GACA,IAAI,EACR1C,KAAA,CAAAkD,aAAA,CAACE,mBAAU;IACTC,IAAI,EAAE,SAAAA,KAAAe,KAAA;MAAA,IAAGb,IAAI,GAASa,KAAA,CAAbb,IAAI;QAAEC,KAAA,GAAOY,KAAA,CAAPZ,KAAA;MAAO,OACpBxD,KAAA,CAAAkD,aAAA,CAACO,8BAAqB;QACpBC,IAAI,EAAC,cAAc;QACnBF,KAAK,EAAEA,KAAM;QACbD,IAAI,EAAEA,IAAK;QACXI,SAAS,EAAEC,wBAAW,CAACC,YAAY,CAAC,CAAC,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAC7D,CAAC;IAAA,CACF;IACFC,SAAS,EAAElB,SAAU;IACrBmB,WAAW,EAAErB,4BAA6B;IAC1CsB,QAAQ,EAAE5B,IAAI,KAAK,CAAE;IACrB6B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAM3B,YAAY,CAACF,IAAI,GAAG,CAAC,CAAE;IAAA;IACtC8B,kBAAkB,EAAC,cAAc;IACjCzB,KAAK,EAAEA;EAAM,CACd,CAAC,EACF1C,KAAA,CAAAkD,aAAA,CAACE,mBAAU;IACTC,IAAI,EAAE,SAAAA,KAAAgB,KAAA;MAAA,IAAGd,IAAI,GAASc,KAAA,CAAbd,IAAI;QAAEC,KAAA,GAAOa,KAAA,CAAPb,KAAA;MAAO,OACpBxD,KAAA,CAAAkD,aAAA,CAACO,8BAAqB;QACpBC,IAAI,EAAC,eAAe;QACpBF,KAAK,EAAEA,KAAM;QACbD,IAAI,EAAEA,IAAK;QACXI,SAAS,EAAEC,wBAAW,CAACC,YAAY,CAAC,CAAC,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAC7D,CAAC;IAAA,CACF;IACFC,SAAS,EAAElB,SAAU;IACrBmB,WAAW,EAAErB,4BAA6B;IAC1CsB,QAAQ,EAAE3B,aAAa,KAAK,CAAC,IAAID,IAAI,KAAKC,aAAa,GAAG,CAAE;IAC5D4B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAM3B,YAAY,CAACF,IAAI,GAAG,CAAC,CAAE;IAAA;IACtC8B,kBAAkB,EAAC,eAAe;IAClCzB,KAAK,EAAEA;EAAM,CACd,CAAC,EACDF,0BAA0B,GACzBxC,KAAA,CAAAkD,aAAA,CAACE,mBAAU;IACTC,IAAI,EAAE,SAAAA,KAAAiB,KAAA;MAAA,IAAGf,IAAI,GAASe,KAAA,CAAbf,IAAI;QAAEC,KAAA,GAAOc,KAAA,CAAPd,KAAA;MAAO,OACpBxD,KAAA,CAAAkD,aAAA,CAACO,8BAAqB;QACpBC,IAAI,EAAC,WAAW;QAChBF,KAAK,EAAEA,KAAM;QACbD,IAAI,EAAEA,IAAK;QACXI,SAAS,EAAEC,wBAAW,CAACC,YAAY,CAAC,CAAC,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAC7D,CAAC;IAAA,CACF;IACFC,SAAS,EAAElB,SAAU;IACrBmB,WAAW,EAAErB,4BAA6B;IAC1CsB,QAAQ,EAAE3B,aAAa,KAAK,CAAC,IAAID,IAAI,KAAKC,aAAa,GAAG,CAAE;IAC5D4B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAM3B,YAAY,CAACD,aAAa,GAAG,CAAC,CAAE;IAAA;IAC/C6B,kBAAkB,EAAC,WAAW;IAC9BzB,KAAK,EAAEA;EAAM,CACd,CAAC,GACA,IACJ,CAAC;AAEP,CAAC;AAED,IAAM6B,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAGC,KAAA,EAOI;EAAA,IAN7BC,wBAAwB,GAMAD,KAAA,CANxBC,wBAAwB;IACxBC,oBAAoB,GAKIF,KAAA,CALxBE,oBAAoB;IACpBC,oBAAoB,GAIIH,KAAA,CAJxBG,oBAAoB;IACblC,cAAc,GAGG+B,KAAA,CAHxB9B,KAAK;IACLkC,6BAA6B,GAELJ,KAAA,CAFxBI,6BAA6B;IAC7BC,uBAAA,GACwBL,KAAA,CADxBK,uBAAA;EAEA,IAAMnC,KAAK,GAAG,IAAAE,yBAAgB,EAACH,cAAc,CAAC;EAC9C,IAAQM,MAAA,GAAWL,KAAK,CAAhBK,MAAA;EACR,IAAA+B,eAAA,GAAmC9E,KAAK,CAAC+E,QAAQ,CAAU,KAAK,CAAC;IAAAC,gBAAA,OAAAC,eAAA,CAAA7D,OAAA,EAAA0D,eAAA;IAA1DI,UAAU,GAAAF,gBAAA;IAAEG,YAAY,GAAAH,gBAAA;EAE/B,OACEhF,KAAA,CAAAkD,aAAA,CAACkC,aAAI;IACHC,OAAO,EAAEH,UAAW;IACpBI,SAAS,EAAE,SAAAA,UAAA;MAAA,OAAMH,YAAY,CAAC,CAACD,UAAU,CAAE;IAAA;IAC3CxC,KAAK,EAAEA,KAAM;IACb6C,MAAM,EACJvF,KAAA,CAAAkD,aAAA,CAACsC,eAAM;MACLC,IAAI,EAAC,UAAU;MACfvB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMiB,YAAY,CAAC,IAAI,CAAE;MAAA;MAClCO,KAAK,EAAEC,MAAM,CAACC,MAAO;MACrBvC,IAAI,EAAC,WAAW;MAChBwC,YAAY,EAAEF,MAAM,CAACE,YAAa;MAClCnD,KAAK,EAAEA,KAAM;MACbsB,WAAW,EAAEY;IAA8B,QAEvCF,oBACE;EACT,GAEAD,wBAAwB,aAAxBA,wBAAwB,uBAAxBA,wBAAwB,CAAEqB,GAAG,CAAE,UAAAC,MAAM;IAAA,OACpC/F,KAAA,CAAAkD,aAAA,CAACkC,aAAI,CAACY,IAAI;MACRnE,GAAG,EAAEkE,MAAO;MACZE,UAAU,EACRF,MAAM,KAAKrB,oBAAoB,IAAI;QACjClB,KAAK,EAAET,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmD;MACjB,CACD;MACDhC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbS,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAGoB,MAAM,CAAC;QAC9BZ,YAAY,CAAC,KAAK,CAAC;MACrB,CAAE;MACFnB,WAAW,EAAEa,uBAAwB;MACrCsB,KAAK,EAAEJ,MAAO;MACdrD,KAAK,EAAEA;IAAM,CACd,CACF;EAAA,EACG,CAAC;AAEX,CAAC;AAyDD,IAAM0D,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA,GAAG,SAAtBA,mBAAmBA,CAAGE,KAAA,EAiBf;EAAA,IAhBXC,KAAK,GAgBCD,KAAA,CAhBNC,KAAK;IACLpC,kBAAkB,GAeZmC,KAAA,CAfNnC,kBAAkB;IAClB9B,IAAI,GAcEiE,KAAA,CAdNjE,IAAI;IACJC,aAAa,GAaPgE,KAAA,CAbNhE,aAAa;IACbC,YAAY,GAYN+D,KAAA,CAZN/D,YAAY;IACZmD,KAAK,GAWCY,KAAA,CAXNZ,KAAK;IAAAc,qBAAA,GAWCF,KAAA,CAVN9D,0BAA0B;IAA1BA,0BAA0B,GAAAgE,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAClC/B,wBAAwB,GASlB6B,KAAA,CATN7B,wBAAwB;IACxBC,oBAAoB,GAQd4B,KAAA,CARN5B,oBAAoB;IACpBC,oBAAoB,GAOd2B,KAAA,CAPN3B,oBAAoB;IACpB8B,uBAAuB,GAMjBH,KAAA,CANNG,uBAAuB;IACvBC,oCAAoC,GAK9BJ,KAAA,CALNI,oCAAoC;IACpC9B,6BAA6B,GAIvB0B,KAAA,CAJN1B,6BAA6B;IAC7BC,uBAAuB,GAGjByB,KAAA,CAHNzB,uBAAuB;IAChBpC,cAAc,GAEf6D,KAAA,CAFN5D,KAAK;IACFiE,IAAA,OAAAC,yBAAA,CAAAxF,OAAA,EACGkF,KAAA,EAAA1F,SAAA;EACN,IAAM8B,KAAK,GAAG,IAAAE,yBAAgB,EAACH,cAAc,CAAC;EAC9C,IAAMoE,UAAU,GAAG,IAAArD,cAAK,EACtBd,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACK,MAAM,CAACC,SAAS,GAAGN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,MAAM,CAACE,IACtD,CAAC,CACE6D,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAC,CAAC,CACLC,MAAM,CAAC,CAAC;EAEX,OACEhH,KAAA,CAAAkD,aAAA,CAAC+D,iBAAI,EAAAC,QAAA,KACCP,IAAI;IACRjB,KAAK,EAAE,CAACC,MAAM,CAACwB,SAAS,EAAEzB,KAAK,CAAE;IACjCvB,kBAAkB,EAAC;EAAsB,IAExCM,wBAAwB,IACvBC,oBAAoB,IACpBC,oBAAoB,IAClB3E,KAAA,CAAAkD,aAAA,CAAC+D,iBAAI;IACH9C,kBAAkB,EAAC,gBAAgB;IACnCuB,KAAK,EAAEC,MAAM,CAACyB;EAAiB,GAE/BpH,KAAA,CAAAkD,aAAA,CAACmE,aAAI;IACH3B,KAAK,EAAE,CAACC,MAAM,CAACY,KAAK,EAAE;MAAE/C,KAAK,EAAEqD;IAAW,CAAC,CAAE;IAC7CS,aAAa,EAAE,CAAE;IACjBnD,kBAAkB,EAChBuC,oCAAoC,IACpC;EACD,GAEAD,uBACG,CAAC,EACPzG,KAAA,CAAAkD,aAAA,CAACqB,kBAAkB;IACjBE,wBAAwB,EAAEA,wBAAyB;IACnDC,oBAAoB,EAAEA,oBAAqB;IAC3CC,oBAAoB,EAAEA,oBAAqB;IAC3CC,6BAA6B,EAAEA,6BAA8B;IAC7DC,uBAAuB,EAAEA,uBAAwB;IACjDnC,KAAK,EAAEA;EAAM,CACd,CACG,CACP,EACH1C,KAAA,CAAAkD,aAAA,CAACmE,aAAI;IACH3B,KAAK,EAAE,CAACC,MAAM,CAACY,KAAK,EAAE;MAAE/C,KAAK,EAAEqD;IAAW,CAAC,CAAE;IAC7CS,aAAa,EAAE,CAAE;IACjBnD,kBAAkB,EAAEA,kBAAkB,IAAI;EAAQ,GAEjDoC,KACG,CAAC,EACPvG,KAAA,CAAAkD,aAAA,CAAC+D,iBAAI;IAACvB,KAAK,EAAEC,MAAM,CAAC4B;EAAe,GACjCvH,KAAA,CAAAkD,aAAA,CAACf,kBAAkB;IACjBK,0BAA0B,EAAEA,0BAA2B;IACvDD,YAAY,EAAEA,YAAa;IAC3BF,IAAI,EAAEA,IAAK;IACXC,aAAa,EAAEA,aAAc;IAC7BI,KAAK,EAAEA;EAAM,CACd,CACG,CACF,CAAC;AAEX,CAAC;AAED0D,mBAAmB,CAACoB,WAAW,GAAG,sBAAsB;AAExD,IAAM7B,MAAM,GAAG8B,uBAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,cAAc,EAAE,UAAU;IAC1BC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;EACZ,CAAC;EACDX,gBAAgB,EAAE;IAChBQ,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBG,cAAc,EAAE;EAClB,CAAC;EACDzB,KAAK,EAAE;IACL0B,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACf,CAAC;EACDtC,MAAM,EAAE;IACNuC,SAAS,EAAE,QAAQ;IACnBD,WAAW,EAAE;EACf,CAAC;EACDX,cAAc,EAAE;IACdK,aAAa,EAAE;EACjB,CAAC;EACD/B,YAAY,EAAE;IACZ+B,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAAA,IAAAQ,QAAA,GAAA/B,OAAA,CAAAjF,OAAA,GAEagF,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}