{"ast":null,"code":"var _jsxFileName = \"/home/runner/work/react-native-action-sheet/react-native-action-sheet/src/ActionSheetProvider.tsx\";\nimport * as React from 'react';\nimport NativeActionSheet from \"./ActionSheet\";\nimport CustomActionSheet from \"./ActionSheet/CustomActionSheet\";\nimport { Provider } from \"./context\";\nexport default React.forwardRef(function ActionSheetProvider(_ref, ref) {\n  var children = _ref.children,\n    useNativeDriver = _ref.useNativeDriver,\n    _ref$useCustomActionS = _ref.useCustomActionSheet,\n    useCustomActionSheet = _ref$useCustomActionS === void 0 ? false : _ref$useCustomActionS;\n  var actionSheetRef = React.useRef(null);\n  var context = React.useMemo(function () {\n    return {\n      showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {\n        if (actionSheetRef.current) {\n          actionSheetRef.current.showActionSheetWithOptions(options, callback);\n        }\n      }\n    };\n  }, [actionSheetRef]);\n  React.useImperativeHandle(ref, function () {\n    return {\n      getContext: function getContext() {\n        return context;\n      },\n      showActionSheetWithOptions: context.showActionSheetWithOptions\n    };\n  }, [context]);\n  var ActionSheet = React.useMemo(function () {\n    return useCustomActionSheet ? CustomActionSheet : NativeActionSheet;\n  }, [useCustomActionSheet]);\n  return React.createElement(Provider, {\n    value: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(ActionSheet, {\n    ref: actionSheetRef,\n    useNativeDriver: useNativeDriver,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.Children.only(children)));\n});","map":{"version":3,"names":["React","NativeActionSheet","CustomActionSheet","Provider","forwardRef","ActionSheetProvider","_ref","ref","children","useNativeDriver","_ref$useCustomActionS","useCustomActionSheet","actionSheetRef","useRef","context","useMemo","showActionSheetWithOptions","options","callback","current","useImperativeHandle","getContext","ActionSheet","createElement","value","__source","fileName","_jsxFileName","lineNumber","columnNumber","Children","only"],"sources":["C:\\Users\\andrey_lopes\\sa.ReactNative2semestre\\node_modules\\@expo\\react-native-action-sheet\\lib\\module\\ActionSheetProvider.tsx"],"sourcesContent":["import * as React from 'react';\n\n// NativeActionSheet will always be custom when on Android/web\nimport NativeActionSheet from './ActionSheet';\nimport CustomActionSheet from './ActionSheet/CustomActionSheet';\nimport { Provider } from './context';\nimport { ActionSheetOptions, ActionSheetProviderRef } from './types';\n\ninterface Props {\n  children: React.ReactNode;\n  useNativeDriver?: boolean;\n  useCustomActionSheet?: boolean;\n}\n\nexport default React.forwardRef<ActionSheetProviderRef, Props>(function ActionSheetProvider(\n  { children, useNativeDriver, useCustomActionSheet = false },\n  ref\n) {\n  const actionSheetRef = React.useRef<NativeActionSheet>(null);\n\n  const context = React.useMemo(\n    () => ({\n      showActionSheetWithOptions: (options: ActionSheetOptions, callback: (i: number) => void) => {\n        if (actionSheetRef.current) {\n          actionSheetRef.current.showActionSheetWithOptions(options, callback);\n        }\n      },\n    }),\n    [actionSheetRef]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      // backwards compatible with 13.x before context was being passed right on the ref\n      getContext: () => context,\n      showActionSheetWithOptions: context.showActionSheetWithOptions,\n    }),\n    [context]\n  );\n\n  const ActionSheet = React.useMemo(\n    () => (useCustomActionSheet ? CustomActionSheet : NativeActionSheet),\n    [useCustomActionSheet]\n  );\n\n  return (\n    <Provider value={context}>\n      <ActionSheet ref={actionSheetRef} useNativeDriver={useNativeDriver}>\n        {React.Children.only(children)}\n      </ActionSheet>\n    </Provider>\n  );\n});\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,iBAAP;AACA,OAAOC,iBAAP;AACA,SAASC,QAAT;AASA,eAAeH,KAAK,CAACI,UAAN,CAAgD,SAASC,mBAATA,CAAAC,IAAA,EAE7DC,GAF6D,EAG7D;EAAA,IAFEC,QAEF,GAAAF,IAAA,CAFEE,QAEF;IAFYC,eAEZ,GAAAH,IAAA,CAFYG,eAEZ;IAAAC,qBAAA,GAAAJ,IAAA,CAF6BK,oBAE7B;IAF6BA,oBAE7B,GAAAD,qBAAA,cAFoD,KAEpD,GAAAA,qBAAA;EACA,IAAME,cAAc,GAAGZ,KAAK,CAACa,MAAN,CAAgC,IAAhC,CAAvB;EAEA,IAAMC,OAAO,GAAGd,KAAK,CAACe,OAAN,CACd;IAAA,OAAO;MACLC,0BAA0B,EAAE,SAAAA,2BAACC,OAAD,EAA8BC,QAA9B,EAAgE;QAC1F,IAAIN,cAAc,CAACO,OAAnB,EAA4B;UAC1BP,cAAc,CAACO,OAAf,CAAuBH,0BAAvB,CAAkDC,OAAlD,EAA2DC,QAA3D;QACD;MACF;IALI,CAAP;EAAA,CADc,EAQd,CAACN,cAAD,CARc,CAAhB;EAWAZ,KAAK,CAACoB,mBAAN,CACEb,GADF,EAEE;IAAA,OAAO;MAELc,UAAU,EAAE,SAAAA,WAAA;QAAA,OAAMP,OAAN;MAAA,CAFP;MAGLE,0BAA0B,EAAEF,OAAO,CAACE;IAH/B,CAAP;EAAA,CAFF,EAOE,CAACF,OAAD,CAPF;EAUA,IAAMQ,WAAW,GAAGtB,KAAK,CAACe,OAAN,CAClB;IAAA,OAAOJ,oBAAoB,GAAGT,iBAAH,GAAuBD,iBAAlD;EAAA,CADkB,EAElB,CAACU,oBAAD,CAFkB,CAApB;EAKA,OACEX,KAAA,CAAAuB,aAAA,CAACpB,QAAD;IAAUqB,KAAK,EAAEV,OAAjB;IAAAW,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACE7B,KAAA,CAAAuB,aAAA,CAACD,WAAD;IAAaf,GAAG,EAAEK,cAAlB;IAAkCH,eAAe,EAAEA,eAAnD;IAAAgB,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG7B,KAAK,CAAC8B,QAAN,CAAeC,IAAf,CAAoBvB,QAApB,CADH,CADF,CADF;AAOD,CAvCc,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}