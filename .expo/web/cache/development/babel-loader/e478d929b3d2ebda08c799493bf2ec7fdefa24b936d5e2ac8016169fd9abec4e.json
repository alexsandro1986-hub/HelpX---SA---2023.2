{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { useCallbackOne } from 'use-memo-one';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Actions(_ref) {\n  var _ref$options = _ref.options,\n    options = _ref$options === void 0 ? {} : _ref$options,\n    _ref$optionTintColor = _ref.optionTintColor,\n    optionTintColor = _ref$optionTintColor === void 0 ? Color.optionTintColor : _ref$optionTintColor,\n    icon = _ref.icon,\n    wrapperStyle = _ref.wrapperStyle,\n    iconTextStyle = _ref.iconTextStyle,\n    onPressActionButton = _ref.onPressActionButton,\n    containerStyle = _ref.containerStyle;\n  var _useChatContext = useChatContext(),\n    actionSheet = _useChatContext.actionSheet;\n  var onActionsPress = useCallbackOne(function () {\n    var optionKeys = Object.keys(options);\n    var cancelButtonIndex = optionKeys.indexOf('Cancel');\n    actionSheet().showActionSheetWithOptions({\n      options: optionKeys,\n      cancelButtonIndex: cancelButtonIndex,\n      tintColor: optionTintColor\n    }, function (buttonIndex) {\n      var key = optionKeys[buttonIndex];\n      if (key) {\n        options[key]();\n      }\n    });\n  }, []);\n  var renderIcon = useCallbackOne(function () {\n    if (icon) {\n      return icon();\n    }\n    return _jsx(View, {\n      style: [styles.wrapper, wrapperStyle],\n      children: _jsx(Text, {\n        style: [styles.iconText, iconTextStyle],\n        children: \"+\"\n      })\n    });\n  }, []);\n  return _jsx(TouchableOpacity, {\n    style: [styles.container, containerStyle],\n    onPress: onPressActionButton || onActionsPress,\n    children: renderIcon()\n  });\n}\nActions.propTypes = {\n  onSend: PropTypes.func,\n  options: PropTypes.object,\n  optionTintColor: PropTypes.string,\n  icon: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  wrapperStyle: StylePropType,\n  containerStyle: StylePropType\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: 26,\n    height: 26,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  wrapper: {\n    borderRadius: 13,\n    borderColor: Color.defaultColor,\n    borderWidth: 2,\n    flex: 1\n  },\n  iconText: {\n    color: Color.defaultColor,\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["PropTypes","React","StyleSheet","Text","TouchableOpacity","View","Color","StylePropType","useChatContext","useCallbackOne","jsx","_jsx","Actions","_ref","_ref$options","options","_ref$optionTintColor","optionTintColor","icon","wrapperStyle","iconTextStyle","onPressActionButton","containerStyle","_useChatContext","actionSheet","onActionsPress","optionKeys","Object","keys","cancelButtonIndex","indexOf","showActionSheetWithOptions","tintColor","buttonIndex","key","renderIcon","style","styles","wrapper","children","iconText","container","onPress","propTypes","onSend","func","object","string","create","width","height","marginLeft","marginBottom","borderRadius","borderColor","defaultColor","borderWidth","flex","color","fontWeight","fontSize","backgroundColor","backgroundTransparent","textAlign"],"sources":["../src/Actions.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}