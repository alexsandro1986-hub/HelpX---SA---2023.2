{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Underline = require(\"./Addons/Underline\");\nvar _enums = require(\"./Adornment/enums\");\nvar _TextInputAdornment = _interopRequireWildcard(require(\"./Adornment/TextInputAdornment\"));\nvar _constants = require(\"./constants\");\nvar _helpers = require(\"./helpers\");\nvar _InputLabel = _interopRequireDefault(require(\"./Label/InputLabel\"));\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"cursorColor\", \"underlineColor\", \"underlineStyle\", \"activeUnderlineColor\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLabelTextLayout\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\"],\n  _excluded2 = [\"fontSize\", \"lineHeight\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar TextInputFlat = function TextInputFlat(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    customSelectionColor = _ref.selectionColor,\n    cursorColor = _ref.cursorColor,\n    underlineColor = _ref.underlineColor,\n    underlineStyle = _ref.underlineStyle,\n    activeUnderlineColor = _ref.activeUnderlineColor,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(_reactNative.TextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLabelTextLayout = _ref.onLabelTextLayout,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-flat' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isAndroid = _reactNative.Platform.OS === 'android';\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    LABEL_PADDING_TOP = _getConstants.LABEL_PADDING_TOP,\n    FLAT_INPUT_OFFSET = _getConstants.FLAT_INPUT_OFFSET,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT;\n  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref2.fontSize,\n    lineHeightStyle = _ref2.lineHeight,\n    fontWeight = _ref2.fontWeight,\n    height = _ref2.height,\n    paddingHorizontal = _ref2.paddingHorizontal,\n    textAlign = _ref2.textAlign,\n    viewStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  var fontSize = fontSizeStyle || _constants.MAXIMIZED_LABEL_FONT_SIZE;\n  var lineHeight = lineHeightStyle || fontSize * 1.2;\n  var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n  var adornmentConfig = (0, _TextInputAdornment.getAdornmentConfig)({\n    left: left,\n    right: right\n  });\n  var _calculateFlatInputHo = (0, _helpers.calculateFlatInputHorizontalPadding)({\n      adornmentConfig: adornmentConfig,\n      isV3: isV3\n    }),\n    paddingLeft = _calculateFlatInputHo.paddingLeft,\n    paddingRight = _calculateFlatInputHo.paddingRight;\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal;\n    paddingRight = paddingHorizontal;\n  }\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var rightAffixWidth = right ? rightLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = (0, _TextInputAdornment.getAdornmentStyleAdjustmentForNativeInput)({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    paddingHorizontal: paddingHorizontal,\n    inputOffset: FLAT_INPUT_OFFSET,\n    mode: _enums.InputMode.Flat,\n    isV3: isV3\n  });\n  var _getFlatInputColors = (0, _helpers.getFlatInputColors)({\n      underlineColor: underlineColor,\n      activeUnderlineColor: activeUnderlineColor,\n      customSelectionColor: customSelectionColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getFlatInputColors.inputTextColor,\n    activeColor = _getFlatInputColors.activeColor,\n    underlineColorCustom = _getFlatInputColors.underlineColorCustom,\n    placeholderColor = _getFlatInputColors.placeholderColor,\n    errorColor = _getFlatInputColors.errorColor,\n    backgroundColor = _getFlatInputColors.backgroundColor,\n    selectionColor = _getFlatInputColors.selectionColor;\n  var containerStyle = {\n    backgroundColor: backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness\n  };\n  var labelScale = _constants.MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = _constants.MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (_reactNative.I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (_reactNative.I18nManager.getConstants().isRTL ? -1 : 1) * paddingLeft;\n  var minInputHeight = dense ? (label ? _constants.MIN_DENSE_HEIGHT_WL : _constants.MIN_DENSE_HEIGHT) - _constants.LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n  var inputHeight = (0, _helpers.calculateInputHeight)(labelHeight, height, minInputHeight);\n  var topPosition = (0, _helpers.calculateLabelTopPosition)(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: isAndroid,\n    styles: _reactNative.StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n  };\n  var pad = (0, _helpers.calculatePadding)(paddingSettings);\n  var paddingFlat = (0, _helpers.adjustPaddingFlat)(Object.assign({}, paddingSettings, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + _constants.MINIMIZED_LABEL_Y_OFFSET);\n  var _React$useRef = React.useRef([new _reactNative.Animated.Value(0), new _reactNative.Animated.Value(1)]),\n    placeholderOpacityAnims = _React$useRef.current;\n  var placeholderOpacity = hasActiveOutline ? parentState.labeled : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n  var minHeight = height || (dense ? label ? _constants.MIN_DENSE_HEIGHT_WL : _constants.MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  var flatHeight = inputHeight + (!height ? dense ? _constants.LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n  var iconTopPosition = (flatHeight - _constants.ADORNMENT_SIZE) / 2;\n  var leftAffixTopPosition = leftLayout.height ? (0, _helpers.calculateFlatAffixTopPosition)(Object.assign({\n    height: flatHeight\n  }, paddingFlat, {\n    affixHeight: leftLayout.height\n  })) : null;\n  var rightAffixTopPosition = rightLayout.height ? (0, _helpers.calculateFlatAffixTopPosition)(Object.assign({\n    height: flatHeight\n  }, paddingFlat, {\n    affixHeight: rightLayout.height\n  })) : null;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    onLabelTextLayout: onLabelTextLayout,\n    placeholderOpacity: placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: _constants.LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    paddingLeft: isAndroid ? _reactNative.I18nManager.isRTL ? paddingRight : paddingLeft : paddingLeft,\n    paddingRight: isAndroid ? _reactNative.I18nManager.isRTL ? paddingLeft : paddingRight : paddingRight,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    errorColor: errorColor,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle,\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n  };\n  var affixTopPosition = (_affixTopPosition = {}, (0, _defineProperty2.default)(_affixTopPosition, _enums.AdornmentSide.Left, leftAffixTopPosition), (0, _defineProperty2.default)(_affixTopPosition, _enums.AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, (0, _defineProperty2.default)(_onAffixChange, _enums.AdornmentSide.Left, onLeftAffixLayoutChange), (0, _defineProperty2.default)(_onAffixChange, _enums.AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    paddingHorizontal: paddingHorizontal,\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, (0, _defineProperty2.default)(_topPosition, _enums.AdornmentType.Affix, affixTopPosition), (0, _defineProperty2.default)(_topPosition, _enums.AdornmentType.Icon, iconTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled: disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = Object.assign({}, adornmentProps, {\n      left: left,\n      right: right,\n      textStyle: Object.assign({}, font, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(_reactNative.View, {\n    style: [containerStyle, viewStyle]\n  }, React.createElement(_Underline.Underline, {\n    style: underlineStyle,\n    hasActiveOutline: hasActiveOutline,\n    parentState: parentState,\n    underlineColorCustom: underlineColorCustom,\n    error: error,\n    colors: colors,\n    activeColor: activeColor,\n    theme: theme\n  }), React.createElement(_reactNative.View, {\n    style: [styles.labelContainer, {\n      minHeight: minHeight\n    }]\n  }, !isAndroid && multiline && !!label && !disabled && React.createElement(_reactNative.View, {\n    testID: \"patch-container\",\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n      backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n      left: paddingLeft,\n      right: paddingRight\n    }]\n  }), label ? React.createElement(_InputLabel.default, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width\n  }, labelProps)) : null, render === null || render === void 0 ? void 0 : render(Object.assign({}, rest, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor: selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColor != null ? placeholderTextColor : placeholderColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: flatHeight\n    } : {}, paddingFlat, Object.assign({\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    }, font, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left',\n      minWidth: parentState.labelTextLayout.width + 2 * FLAT_INPUT_OFFSET\n    }), _reactNative.Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID: testID\n  }))), React.createElement(_TextInputAdornment.default, adornmentProps));\n};\nvar _default = exports.default = TextInputFlat;\nvar styles = _reactNative.StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_Underline","_enums","_TextInputAdornment","_constants","_helpers","_InputLabel","_interopRequireDefault","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","TextInputFlat","_ref","_affixTopPosition","_onAffixChange","_topPosition","_ref$disabled","disabled","_ref$editable","editable","label","_ref$error","error","customSelectionColor","selectionColor","cursorColor","underlineColor","underlineStyle","activeUnderlineColor","textColor","dense","style","theme","_ref$render","render","props","createElement","NativeTextInput","_ref$multiline","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","_ref$testID","testID","contentStyle","rest","_objectWithoutProperties2","isAndroid","Platform","OS","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","_getConstants","getConstants","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","_ref2","StyleSheet","flatten","fontSizeStyle","fontSize","lineHeightStyle","lineHeight","fontWeight","height","paddingHorizontal","textAlign","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","getAdornmentConfig","_calculateFlatInputHo","calculateFlatInputHorizontalPadding","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","inputOffset","mode","InputMode","Flat","_getFlatInputColors","getFlatInputColors","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","LABEL_PADDING_TOP_DENSE","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","calculatePadding","paddingFlat","adjustPaddingFlat","assign","baseLabelTranslateY","MINIMIZED_LABEL_Y_OFFSET","_React$useRef","useRef","Animated","Value","placeholderOpacityAnims","current","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","calculateFlatAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","labelError","placeholderStyle","placeholder","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","opacity","value","affixTopPosition","_defineProperty2","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","View","Underline","labelContainer","pointerEvents","absoluteFill","densePatchContainer","patchContainer","InputLabel","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","ref","underlineColorAndroid","input","color","textAlignVertical","minWidth","labelTextLayout","outline","TextInputAdornment","_default","exports","create","position","paddingTop","paddingBottom","margin","zIndex"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n  Animated,\n} from 'react-native';\n\nimport { Underline } from './Addons/Underline';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  contentStyle,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight: lineHeightStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight = lineHeightStyle || fontSize * 1.2;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n    selectionColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingLeft: isAndroid\n      ? I18nManager.isRTL\n        ? paddingRight\n        : paddingLeft\n      : paddingLeft,\n    paddingRight: isAndroid\n      ? I18nManager.isRTL\n        ? paddingLeft\n        : paddingRight\n      : paddingRight,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n  };\n\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n        theme={theme}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && !disabled && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            {...labelProps}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              paddingLeft,\n              paddingRight,\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n              minWidth:\n                parentState.labelTextLayout.width + 2 * FLAT_INPUT_OFFSET,\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"],"mappings":";;;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAUA,IAAAE,UAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AACA,IAAAI,mBAAA,GAAAL,uBAAA,CAAAC,OAAA;AAOA,IAAAK,UAAA,GAAAL,OAAA;AAUA,IAAAM,QAAA,GAAAN,OAAA;AAWA,IAAAO,WAAA,GAAAC,sBAAA,CAAAR,OAAA;AAA2C,IAAAS,SAAA;EAAAC,UAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAb,wBAAAiB,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;;;;;;;;;;;;;;;AAG3C,IAAMW,aAAa,GAAG,SAAhBA,aAAaA,CAAGC,IAAA,EAgCK;EAAA,IAAAC,iBAAA,EAAAC,cAAA,EAAAC,YAAA;EAAA,IAAAC,aAAA,GAALJ,IAAA,CA/BpBK,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,aAAA,GA+BIN,IAAA,CA9BpBO,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,IAAI,GAAAA,aAAA;IACfE,KAAK,GA6BeR,IAAA,CA7BpBQ,KAAK;IAAAC,UAAA,GA6BeT,IAAA,CA5BpBU,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,KAAK,GAAAA,UAAA;IACGE,oBAAoB,GA2BhBX,IAAA,CA3BpBY,cAAc;IACdC,WAAW,GA0BSb,IAAA,CA1BpBa,WAAW;IACXC,cAAc,GAyBMd,IAAA,CAzBpBc,cAAc;IACdC,cAAc,GAwBMf,IAAA,CAxBpBe,cAAc;IACdC,oBAAoB,GAuBAhB,IAAA,CAvBpBgB,oBAAoB;IACpBC,SAAS,GAsBWjB,IAAA,CAtBpBiB,SAAS;IACTC,KAAK,GAqBelB,IAAA,CArBpBkB,KAAK;IACLC,KAAK,GAoBenB,IAAA,CApBpBmB,KAAK;IACLC,KAAK,GAmBepB,IAAA,CAnBpBoB,KAAK;IAAAC,WAAA,GAmBerB,IAAA,CAlBpBsB,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAI,UAAAE,KAAkB;MAAA,OAAK3D,KAAA,CAAA4D,aAAA,CAACC,sBAAe,EAAKF,KAAQ,CAAC;IAAA,IAAAF,WAAA;IAAAK,cAAA,GAkB3C1B,IAAA,CAjBpB2B,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;IACjBE,WAAW,GAgBS5B,IAAA,CAhBpB4B,WAAW;IACXC,QAAQ,GAeY7B,IAAA,CAfpB6B,QAAQ;IACRC,OAAO,GAca9B,IAAA,CAdpB8B,OAAO;IACPC,UAAU,GAaU/B,IAAA,CAbpB+B,UAAU;IACVC,MAAM,GAYchC,IAAA,CAZpBgC,MAAM;IACNC,YAAY,GAWQjC,IAAA,CAXpBiC,YAAY;IACZC,oBAAoB,GAUAlC,IAAA,CAVpBkC,oBAAoB;IACpBC,iBAAiB,GASGnC,IAAA,CATpBmC,iBAAiB;IACjBC,uBAAuB,GAQHpC,IAAA,CARpBoC,uBAAuB;IACvBC,wBAAwB,GAOJrC,IAAA,CAPpBqC,wBAAwB;IACxBC,IAAI,GAMgBtC,IAAA,CANpBsC,IAAI;IACJC,KAAK,GAKevC,IAAA,CALpBuC,KAAK;IACLC,oBAAoB,GAIAxC,IAAA,CAJpBwC,oBAAoB;IAAAC,WAAA,GAIAzC,IAAA,CAHpB0C,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,iBAAiB,GAAAA,WAAA;IAC1BE,YAAY,GAEQ3C,IAAA,CAFpB2C,YAAY;IACTC,IAAA,OAAAC,yBAAA,CAAA7D,OAAA,EACiBgB,IAAA,EAAAzB,SAAA;EACpB,IAAMuE,SAAS,GAAGC,qBAAQ,CAACC,EAAE,KAAK,SAAS;EAC3C,IAAQC,MAAM,GAAsB7B,KAAK,CAAjC6B,MAAM;IAAEC,IAAI,GAAgB9B,KAAK,CAAzB8B,IAAI;IAAEC,SAAA,GAAc/B,KAAK,CAAnB+B,SAAA;EACtB,IAAMC,IAAI,GAAGF,IAAI,GAAG9B,KAAK,CAACiC,KAAK,CAACC,SAAS,GAAGlC,KAAK,CAACiC,KAAK,CAACE,OAAO;EAC/D,IAAMC,gBAAgB,GAAG5B,WAAW,CAAC6B,OAAO,IAAI/C,KAAK;EAErD,IAAAgD,aAAA,GACE,IAAAC,qBAAY,EAACT,IAAI,CAAC;IADZU,iBAAiB,GAAAF,aAAA,CAAjBE,iBAAiB;IAAEC,iBAAiB,GAAAH,aAAA,CAAjBG,iBAAiB;IAAEC,UAAA,GAAAJ,aAAA,CAAAI,UAAA;EAG9C,IAAAC,KAAA,GAQKC,uBAAU,CAACC,OAAO,CAAC9C,KAAK,CAAC,IAAI,CAAC,CAAe;IAPtC+C,aAAa,GAAAH,KAAA,CAAvBI,QAAQ;IACIC,eAAe,GAAAL,KAAA,CAA3BM,UAAU;IACVC,UAAU,GAAAP,KAAA,CAAVO,UAAU;IACVC,MAAM,GAAAR,KAAA,CAANQ,MAAM;IACNC,iBAAiB,GAAAT,KAAA,CAAjBS,iBAAiB;IACjBC,SAAS,GAAAV,KAAA,CAATU,SAAS;IACNC,SAAA,OAAA7B,yBAAA,CAAA7D,OAAA,EAAA+E,KAAA,EAAAvF,UAAA;EAEL,IAAM2F,QAAQ,GAAGD,aAAa,IAAIS,oCAAyB;EAC3D,IAAMN,UAAU,GAAGD,eAAe,IAAID,QAAQ,GAAG,GAAG;EAEpD,IAAMS,yBAAyB,GAC7BJ,iBAAiB,KAAKK,SAAS,IAAI,OAAOL,iBAAiB,KAAK,QAAQ;EAE1E,IAAMM,eAAe,GAAG,IAAAC,sCAAkB,EAAC;IACzCzC,IAAI,EAAJA,IAAI;IACJC,KAAA,EAAAA;EACF,CAAC,CAAC;EAEF,IAAAyC,qBAAA,GAAoC,IAAAC,4CAAmC,EAAC;MACtEH,eAAe,EAAfA,eAAe;MACf5B,IAAA,EAAAA;IACF,CAAC,CAAC;IAHIgC,WAAW,GAAAF,qBAAA,CAAXE,WAAW;IAAEC,YAAA,GAAAH,qBAAA,CAAAG,YAAA;EAKnB,IAAIP,yBAAyB,EAAE;IAC7BM,WAAW,GAAGV,iBAA2B;IACzCW,YAAY,GAAGX,iBAA2B;EAC5C;EAEA,IAAQY,UAAU,GAAkBxD,WAAW,CAAvCwD,UAAU;IAAEC,WAAA,GAAgBzD,WAAW,CAA3ByD,WAAA;EAEpB,IAAMC,eAAe,GAAG/C,KAAK,GACzB8C,WAAW,CAACE,KAAK,IAAIC,yBAAc,GACnCA,yBAAc;EAElB,IAAMC,cAAc,GAAGnD,IAAI,GACvB8C,UAAU,CAACG,KAAK,IAAIC,yBAAc,GAClCA,yBAAc;EAElB,IAAME,sCAAsC,GAC1C,IAAAC,6DAAyC,EAAC;IACxCb,eAAe,EAAfA,eAAe;IACfQ,eAAe,EAAfA,eAAe;IACfG,cAAc,EAAdA,cAAc;IACdjB,iBAAiB,EAAjBA,iBAAiB;IACjBoB,WAAW,EAAE/B,iBAAiB;IAC9BgC,IAAI,EAAEC,gBAAS,CAACC,IAAI;IACpB7C,IAAA,EAAAA;EACF,CAAC,CAAC;EAEJ,IAAA8C,mBAAA,GAQI,IAAAC,2BAAkB,EAAC;MACrBnF,cAAc,EAAdA,cAAc;MACdE,oBAAoB,EAApBA,oBAAoB;MACpBL,oBAAoB,EAApBA,oBAAoB;MACpBM,SAAS,EAATA,SAAS;MACTZ,QAAQ,EAARA,QAAQ;MACRK,KAAK,EAALA,KAAK;MACLU,KAAA,EAAAA;IACF,CAAC,CAAC;IAfA8E,cAAc,GAAAF,mBAAA,CAAdE,cAAc;IACdC,WAAW,GAAAH,mBAAA,CAAXG,WAAW;IACXC,oBAAoB,GAAAJ,mBAAA,CAApBI,oBAAoB;IACpBC,gBAAgB,GAAAL,mBAAA,CAAhBK,gBAAgB;IAChBC,UAAU,GAAAN,mBAAA,CAAVM,UAAU;IACVC,eAAe,GAAAP,mBAAA,CAAfO,eAAe;IACf3F,cAAA,GAAAoF,mBAAA,CAAApF,cAAA;EAWF,IAAM4F,cAAc,GAAG;IACrBD,eAAe,EAAfA,eAAe;IACfE,mBAAmB,EAAErF,KAAK,CAAC+B,SAAS;IACpCuD,oBAAoB,EAAEtF,KAAK,CAAC+B;EAC9B,CAAC;EAED,IAAMwD,UAAU,GAAGC,oCAAyB,GAAGzC,QAAQ;EACvD,IAAM0C,SAAS,GAAGlC,oCAAyB,GAAGR,QAAQ;EAEtD,IAAM2C,UAAU,GAAGlF,WAAW,CAACmF,WAAW,CAACxB,KAAK;EAChD,IAAMyB,WAAW,GAAGpF,WAAW,CAACmF,WAAW,CAACxC,MAAM;EAClD,IAAM0C,cAAc,GAAGH,UAAU,GAAG,CAAC;EACrC,IAAMI,eAAe,GAAGF,WAAW,GAAG,CAAC;EAEvC,IAAMG,mBAAmB,GACvB,CAACC,wBAAW,CAACzD,YAAY,CAAC,CAAC,CAAC0D,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,KACvCJ,cAAc,GAAIN,UAAU,GAAGG,UAAU,GAAI,CAAC,CAAC,GAClD,CAAC,CAAC,GAAGH,UAAU,KACZS,wBAAW,CAACzD,YAAY,CAAC,CAAC,CAAC0D,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAC3CnC,WAAW;EAEf,IAAMoC,cAAc,GAAGpG,KAAK,GACxB,CAACV,KAAK,GAAG+G,8BAAmB,GAAGC,2BAAgB,IAAIC,kCAAuB,GAC1E3D,UAAU,GAAGF,iBAAiB;EAElC,IAAM8D,WAAW,GAAG,IAAAC,6BAAoB,EAACX,WAAW,EAAEzC,MAAM,EAAE+C,cAAc,CAAC;EAE7E,IAAMM,WAAW,GAAG,IAAAC,kCAAyB,EAC3Cb,WAAW,EACXU,WAAW,EACX/F,SAAS,IAAI4C,MAAM,GAAG,CAAC,GAAG,CAACA,MAAM,GAAG+C,cAAc,GAAG,CAAC,GAAG,CAC3D,CAAC;EAED,IAAI/C,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAExCuD,OAAO,CAACC,IAAI,CAAC,kDAAkD,CAAC;EAClE;EAEA,IAAMC,eAAe,GAAG;IACtBzD,MAAM,EAAEA,MAAM,GAAG,CAACA,MAAM,GAAG,IAAI;IAC/B2C,eAAe,EAAfA,eAAe;IACfe,MAAM,EAAEpE,iBAAiB;IACzBlC,SAAS,EAAEA,SAAS,GAAGA,SAAS,GAAG,IAAI;IACvCT,KAAK,EAAEA,KAAK,GAAGA,KAAK,GAAG,IAAI;IAC3B0G,WAAW,EAAXA,WAAW;IACXzD,QAAQ,EAARA,QAAQ;IACRE,UAAU,EAAVA,UAAU;IACV7D,KAAK,EAALA,KAAK;IACL0H,KAAK,EAAErB,SAAS;IAChB/D,SAAS,EAATA,SAAS;IACTqF,MAAM,EAAEnE,uBAAU,CAACC,OAAO,CACxB/C,KAAK,GAAGiH,MAAM,CAACC,cAAc,GAAGD,MAAM,CAACE,SACzC;EACF,CAAC;EAED,IAAMC,GAAG,GAAG,IAAAC,yBAAgB,EAACP,eAAe,CAAC;EAE7C,IAAMQ,WAAW,GAAG,IAAAC,0BAAiB,EAAAnJ,MAAA,CAAAoJ,MAAA,KAChCV,eAAe;IAClBM,GAAA,EAAAA;EAAA,EACD,CAAC;EAEF,IAAMK,mBAAmB,GACvB,CAACzB,eAAe,IAAIU,WAAW,GAAGgB,mCAAwB,CAAC;EAE7D,IAAAC,aAAA,GAA6CjL,KAAK,CAACkL,MAAM,CAAC,CACxD,IAAIC,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,EACrB,IAAID,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CACtB,CAAC;IAHeC,uBAAA,GAAAJ,aAAA,CAATK,OAAO;EAKf,IAAMC,kBAAkB,GAAG3F,gBAAgB,GACvC5B,WAAW,CAACwH,OAAO,GACnBH,uBAAuB,CAACrH,WAAW,CAACmF,WAAW,CAACsC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;EAErE,IAAMC,SAAS,GACb/E,MAAM,KACLrD,KAAK,GAAIV,KAAK,GAAG+G,8BAAmB,GAAGC,2BAAgB,GAAI1D,UAAU,CAAC;EAEzE,IAAMyF,UAAU,GACd7B,WAAW,IACV,CAACnD,MAAM,GAAIrD,KAAK,GAAGuG,kCAAuB,GAAG7D,iBAAiB,GAAI,CAAC,CAAC;EAEvE,IAAM4F,eAAe,GAAG,CAACD,UAAU,GAAG/D,yBAAc,IAAI,CAAC;EAEzD,IAAMiE,oBAAoB,GAAGrE,UAAU,CAACb,MAAM,GAC1C,IAAAmF,sCAA6B,EAAApK,MAAA,CAAAoJ,MAAA;IAC3BnE,MAAM,EAAEgF;EAAU,GACff,WAAW;IACdmB,WAAW,EAAEvE,UAAU,CAACb;EAAA,EACzB,CAAC,GACF,IAAI;EAER,IAAMqF,qBAAqB,GAAGvE,WAAW,CAACd,MAAM,GAC5C,IAAAmF,sCAA6B,EAAApK,MAAA,CAAAoJ,MAAA;IAC3BnE,MAAM,EAAEgF;EAAU,GACff,WAAW;IACdmB,WAAW,EAAEtE,WAAW,CAACd;EAAA,EAC1B,CAAC,GACF,IAAI;EAER,IAAMsF,UAAU,GAAG;IACjBrJ,KAAK,EAALA,KAAK;IACL0B,oBAAoB,EAApBA,oBAAoB;IACpBC,iBAAiB,EAAjBA,iBAAiB;IACjBgH,kBAAkB,EAAlBA,kBAAkB;IAClBW,UAAU,EAAEpJ,KAAK;IACjBqJ,gBAAgB,EAAE5B,MAAM,CAAC6B,WAAW;IACpCrB,mBAAmB,EAAnBA,mBAAmB;IACnBxB,mBAAmB,EAAnBA,mBAAmB;IACnB/D,IAAI,EAAJA,IAAI;IACJe,QAAQ,EAARA,QAAQ;IACRE,UAAU,EAAVA,UAAU;IACVC,UAAU,EAAVA,UAAU;IACVqC,UAAU,EAAVA,UAAU;IACVsD,aAAa,EAAEC,gCAAqB;IACpCtC,WAAW,EAAXA,WAAW;IACX1C,WAAW,EAAEpC,SAAS,GAClBsE,wBAAW,CAACC,KAAK,GACflC,YAAY,GACZD,WAAW,GACbA,WAAW;IACfC,YAAY,EAAErC,SAAS,GACnBsE,wBAAW,CAACC,KAAK,GACfnC,WAAW,GACXC,YAAY,GACdA,YAAY;IAChB3B,gBAAgB,EAAhBA,gBAAgB;IAChB2C,WAAW,EAAXA,WAAW;IACXE,gBAAgB,EAAhBA,gBAAgB;IAChBC,UAAU,EAAVA,UAAU;IACVnD,SAAS,EAATA,SAAS;IACTgH,qBAAqB,EAAEvH,IAAI,CAACuH,qBAAqB;IACjDzH,MAAM,EAANA,MAAM;IACNC,YAAY,EAAZA,YAAY;IACZyH,OAAO,EACLxI,WAAW,CAACyI,KAAK,IAAIzI,WAAW,CAAC6B,OAAO,GACpC7B,WAAW,CAACmF,WAAW,CAACsC,QAAQ,GAC9B,CAAC,GACD,CAAC,GACH;EACR,CAAC;EAED,IAAMiB,gBAAgB,IAAArK,iBAAA,WAAAsK,gBAAA,CAAAvL,OAAA,EAAAiB,iBAAA,EACnBuK,oBAAa,CAACC,IAAI,EAAGhB,oBAAoB,OAAAc,gBAAA,CAAAvL,OAAA,EAAAiB,iBAAA,EACzCuK,oBAAa,CAACE,KAAK,EAAGd,qBAAA,GAAA3J,iBAAA,CACxB;EACD,IAAM0K,aAAa,IAAAzK,cAAA,WAAAqK,gBAAA,CAAAvL,OAAA,EAAAkB,cAAA,EAChBsK,oBAAa,CAACC,IAAI,EAAGrI,uBAAuB,OAAAmI,gBAAA,CAAAvL,OAAA,EAAAkB,cAAA,EAC5CsK,oBAAa,CAACE,KAAK,EAAGrI,wBAAA,GAAAnC,cAAA,CACxB;EAED,IAAI0K,cAAuC,GAAG;IAC5CpG,iBAAiB,EAAjBA,iBAAiB;IACjBM,eAAe,EAAfA,eAAe;IACf/C,UAAU,EAAVA,UAAU;IACV6F,WAAW,GAAAzH,YAAA,WAAAoK,gBAAA,CAAAvL,OAAA,EAAAmB,YAAA,EACR0K,oBAAa,CAACC,KAAK,EAAGR,gBAAgB,OAAAC,gBAAA,CAAAvL,OAAA,EAAAmB,YAAA,EACtC0K,oBAAa,CAACE,IAAI,EAAGvB,eAAA,GAAArJ,YAAA,CACvB;IACDwK,aAAa,EAAbA,aAAa;IACbK,kBAAkB,EAAEpJ,WAAW,CAAC6B,OAAO;IACvC0G,qBAAqB,EAAEvH,IAAI,CAACuH,qBAAqB;IACjD9J,QAAA,EAAAA;EACF,CAAC;EACD,IAAIyE,eAAe,CAACmG,MAAM,EAAE;IAC1BL,cAAc,GAAAtL,MAAA,CAAAoJ,MAAA,KACTkC,cAAc;MACjBtI,IAAI,EAAJA,IAAI;MACJC,KAAK,EAALA,KAAK;MACL2I,SAAS,EAAA5L,MAAA,CAAAoJ,MAAA,KAAOtF,IAAI;QAAEe,QAAQ,EAARA,QAAQ;QAAEE,UAAU,EAAVA,UAAU;QAAEC,UAAA,EAAAA;MAAA,EAAY;MACxD6G,OAAO,EAAEvJ,WAAW,CAACwH;IAAA,EACtB;EACH;EAEA,OACExL,KAAA,CAAA4D,aAAA,CAAC4J,iBAAI;IAACjK,KAAK,EAAE,CAACqF,cAAc,EAAE9B,SAAS;EAAE,GACvC9G,KAAA,CAAA4D,aAAA,CAAC6J,oBAAS;IACRlK,KAAK,EAAEJ,cAAe;IACtByC,gBAAgB,EAAEA,gBAAiB;IACnC5B,WAAW,EAAEA,WAAY;IACzBwE,oBAAoB,EAAEA,oBAAqB;IAC3C1F,KAAK,EAAEA,KAAM;IACbuC,MAAM,EAAEA,MAAO;IACfkD,WAAW,EAAEA,WAAY;IACzB/E,KAAK,EAAEA;EAAM,CACd,CAAC,EACFxD,KAAA,CAAA4D,aAAA,CAAC4J,iBAAI;IACHjK,KAAK,EAAE,CACLgH,MAAM,CAACmD,cAAc,EACrB;MACEhC,SAAA,EAAAA;IACF,CAAC;EACD,GAED,CAACxG,SAAS,IAAInB,SAAS,IAAI,CAAC,CAACnB,KAAK,IAAI,CAACH,QAAQ,IAG9CzC,KAAA,CAAA4D,aAAA,CAAC4J,iBAAI;IACH1I,MAAM,EAAC,iBAAiB;IACxB6I,aAAa,EAAC,MAAM;IACpBpK,KAAK,EAAE,CACL6C,uBAAU,CAACwH,YAAY,EACvBtK,KAAK,GAAGiH,MAAM,CAACsD,mBAAmB,GAAGtD,MAAM,CAACuD,cAAc,EAC1D;MACEnF,eAAe,EACb7B,SAAS,CAAC6B,eAAe,IAAIC,cAAc,CAACD,eAAe;MAC7DjE,IAAI,EAAE4C,WAAW;MACjB3C,KAAK,EAAE4C;IACT,CAAC;EACD,CACH,CACF,EACA3E,KAAK,GACJ5C,KAAA,CAAA4D,aAAA,CAACmK,mBAAU,EAAAC,QAAA;IACTxC,OAAO,EAAExH,WAAW,CAACwH,OAAQ;IAC7B1I,KAAK,EAAEkB,WAAW,CAAClB,KAAM;IACzB+C,OAAO,EAAE7B,WAAW,CAAC6B,OAAQ;IAC7BoI,MAAM,EAAEC,OAAO,CAAClK,WAAW,CAACyI,KAAK,IAAIR,UAAU,CAACC,UAAU,CAAE;IAC5DiC,mBAAmB,EAAEnK,WAAW,CAACmF,WAAW,CAACsC,QAAS;IACtD2C,gBAAgB,EAAEpK,WAAW,CAACmF,WAAW,CAACxB;EAAM,GAC5CsE,UAAU,CACf,CAAC,GACA,IAAI,EACPvI,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAAhC,MAAA,CAAAoJ,MAAA,KACF9F,IAAI;IACPqJ,GAAG,EAAEpK,QAAQ;IACbI,YAAY,EAAZA,YAAY;IACZ+H,WAAW,EAAExJ,KAAK,GAAGoB,WAAW,CAACoI,WAAW,GAAGpH,IAAI,CAACoH,WAAW;IAC/DzJ,QAAQ,EAAE,CAACF,QAAQ,IAAIE,QAAQ;IAC/BK,cAAc,EAAdA,cAAc;IACdC,WAAW,EACT,OAAOA,WAAW,KAAK,WAAW,GAAGsF,WAAW,GAAGtF,WAAW;IAChE2B,oBAAoB,EAAEA,oBAAoB,WAApBA,oBAAoB,GAAI6D,gBAAgB;IAC9DvE,OAAO,EAAPA,OAAO;IACPE,MAAM,EAANA,MAAM;IACNkK,qBAAqB,EAAE,aAAa;IACpCvK,SAAS,EAATA,SAAS;IACTR,KAAK,EAAE,CACLgH,MAAM,CAACgE,KAAK,EACZ,CAACxK,SAAS,IAAKA,SAAS,IAAI4C,MAAO,GAAG;MAAEA,MAAM,EAAEgF;IAAW,CAAC,GAAG,CAAC,CAAC,EACjEf,WAAW,EAAAlJ,MAAA,CAAAoJ,MAAA;MAETxD,WAAW,EAAXA,WAAW;MACXC,YAAY,EAAZA;IAAY,GACT/B,IAAI;MACPe,QAAQ,EAARA,QAAQ;MACRE,UAAU,EAAVA,UAAU;MACVC,UAAU,EAAVA,UAAU;MACV8H,KAAK,EAAElG,cAAc;MACrBmG,iBAAiB,EAAE1K,SAAS,GAAG,KAAK,GAAG,QAAQ;MAC/C8C,SAAS,EAAEA,SAAS,GAChBA,SAAS,GACT2C,wBAAW,CAACzD,YAAY,CAAC,CAAC,CAAC0D,KAAK,GAChC,OAAO,GACP,MAAM;MACViF,QAAQ,EACN1K,WAAW,CAAC2K,eAAe,CAAChH,KAAK,GAAG,CAAC,GAAG1B;IAAA,IAE5Cd,qBAAQ,CAACC,EAAE,KAAK,KAAK,IAAI;MAAEwJ,OAAO,EAAE;IAAO,CAAC,EAC5C9G,sCAAsC,EACtC/C,YAAY,CACb;IACDD,MAAA,EAAAA;EAAA,EACD,CACG,CAAC,EACP9E,KAAA,CAAA4D,aAAA,CAACiL,2BAAkB,EAAK7B,cAAiB,CACrC,CAAC;AAEX,CAAC;AAAA,IAAA8B,QAAA,GAAAC,OAAA,CAAA3N,OAAA,GAEce,aAAa;AAE5B,IAAMoI,MAAM,GAAGnE,uBAAU,CAAC4I,MAAM,CAAC;EAC/B5C,WAAW,EAAE;IACX6C,QAAQ,EAAE,UAAU;IACpBvK,IAAI,EAAE;EACR,CAAC;EACDgJ,cAAc,EAAE;IACdwB,UAAU,EAAE,CAAC;IACbC,aAAa,EAAE;EACjB,CAAC;EACDZ,KAAK,EAAE;IACLa,MAAM,EAAE;EACV,CAAC;EACD3E,SAAS,EAAE;IACTyE,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACD3E,cAAc,EAAE;IACd0E,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACDrB,cAAc,EAAE;IACdnH,MAAM,EAAE,EAAE;IACV0I,MAAM,EAAE;EACV,CAAC;EACDxB,mBAAmB,EAAE;IACnBlH,MAAM,EAAE,EAAE;IACV0I,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}