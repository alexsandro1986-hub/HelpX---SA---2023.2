{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { Fragment, useCallback, useEffect, useMemo, useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./styles\";\nimport Svg, { Path, LinearGradient, Stop, Circle, Rect, Text as CanvasText } from 'react-native-svg';\nimport BarAndLineChartsWrapper from \"../Components/BarAndLineChartsWrapper\";\nimport { getAxesAndRulesProps, getExtendedContainerHeightWithPadding } from \"../utils\";\nimport { AxesAndRulesDefaults, LineDefaults, chartTypes } from \"../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialData = null;\nexport var LineChartBicolor = function LineChartBicolor(props) {\n  var _props$scrollToEnd, _props$scrollAnimatio, _props$scrollEventThr, _props$initialSpacing, _props$endSpacing, _props$spacing, _props$xAxisThickness, _props$dataPointsHeig, _props$dataPointsWidt, _props$dataPointsRadi, _props$dataPointsColo, _props$dataPointsShap, _props$rotateLabel, _props$isAnimated, _props$hideDataPoints, _props$startOpacity, _props$endOpacity, _props$startOpacityNe, _props$endOpacityNega, _props$showXAxisIndic, _props$xAxisIndicesHe, _props$xAxisIndicesWi, _props$xAxisIndicesCo, _props$xAxisTextNumbe, _props$showFractional, _props$yAxisLabelWidt, _props$disableScroll, _props$focusEnabled, _props$showDataPointO, _props$showStripOnFoc, _props$showTextOnFocu, _props$stripWidth, _props$stripColor, _props$stripOpacity, _props$unFocusOnPress, _props$delayBeforeUnF;\n  var scrollRef = useRef();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    toggle = _useState2[0],\n    setToggle = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pointsArray = _useState4[0],\n    setPointsArray = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fillPointsArray = _useState6[0],\n    setFillPointsArray = _useState6[1];\n  var _useState7 = useState(-1),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedIndex = _useState8[0],\n    setSelectedIndex = _useState8[1];\n  var containerHeight = props.height || AxesAndRulesDefaults.containerHeight;\n  var noOfSections = props.noOfSections || AxesAndRulesDefaults.noOfSections;\n  var data = useMemo(function () {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(function (item) {\n        var _props$yAxisOffset;\n        item.value = item.value - ((_props$yAxisOffset = props.yAxisOffset) != null ? _props$yAxisOffset : 0);\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n  var scrollToEnd = (_props$scrollToEnd = props.scrollToEnd) != null ? _props$scrollToEnd : LineDefaults.scrollToEnd;\n  var scrollAnimation = (_props$scrollAnimatio = props.scrollAnimation) != null ? _props$scrollAnimatio : LineDefaults.scrollAnimation;\n  var scrollEventThrottle = (_props$scrollEventThr = props.scrollEventThrottle) != null ? _props$scrollEventThr : LineDefaults.scrollEventThrottle;\n  var opacValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var widthValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var labelsExtraHeight = props.labelsExtraHeight || 0;\n  var animationDuration = props.animationDuration || LineDefaults.animationDuration;\n  var startIndex1 = props.startIndex || 0;\n  var endIndex1;\n  if (props.endIndex === undefined || props.endIndex === null) {\n    endIndex1 = data.length - 1;\n  } else {\n    endIndex1 = props.endIndex;\n  }\n  if (!initialData) {\n    initialData = _toConsumableArray(data);\n  }\n  var adjustToWidth = props.adjustToWidth || false;\n  var initialSpacing = (_props$initialSpacing = props.initialSpacing) != null ? _props$initialSpacing : LineDefaults.initialSpacing;\n  var endSpacing = (_props$endSpacing = props.endSpacing) != null ? _props$endSpacing : adjustToWidth ? 0 : LineDefaults.endSpacing;\n  var thickness = props.thickness || LineDefaults.thickness;\n  var spacing = (_props$spacing = props.spacing) != null ? _props$spacing : adjustToWidth ? ((props.width || AxesAndRulesDefaults.width) - initialSpacing) / data.length : LineDefaults.spacing;\n  var xAxisThickness = (_props$xAxisThickness = props.xAxisThickness) != null ? _props$xAxisThickness : AxesAndRulesDefaults.xAxisThickness;\n  var dataPointsHeight1 = (_props$dataPointsHeig = props.dataPointsHeight) != null ? _props$dataPointsHeig : LineDefaults.dataPointsHeight;\n  var dataPointsWidth1 = (_props$dataPointsWidt = props.dataPointsWidth) != null ? _props$dataPointsWidt : LineDefaults.dataPointsWidth;\n  var dataPointsRadius1 = (_props$dataPointsRadi = props.dataPointsRadius) != null ? _props$dataPointsRadi : LineDefaults.dataPointsRadius;\n  var dataPointsColor1 = (_props$dataPointsColo = props.dataPointsColor) != null ? _props$dataPointsColo : LineDefaults.dataPointsColor;\n  var dataPointsShape1 = (_props$dataPointsShap = props.dataPointsShape) != null ? _props$dataPointsShap : LineDefaults.dataPointsShape;\n  var labelsAppear = useCallback(function () {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false\n    }).start();\n  }, [opacValue]);\n  var appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1]\n  });\n  var decreaseWidth = useCallback(function () {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start();\n  }, [animationDuration, widthValue]);\n  var areaChart = props.areaChart || false;\n  var textFontSize1 = props.textFontSize || LineDefaults.textFontSize;\n  var textColor1 = props.textColor || LineDefaults.textColor;\n  var totalWidth = initialSpacing;\n  var maxItem = 0,\n    minItem = 0;\n  data.forEach(function (item) {\n    if (item.value > maxItem) {\n      maxItem = item.value;\n    }\n    if (item.value < minItem) {\n      minItem = item.value;\n    }\n    totalWidth += spacing;\n  });\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - maxItem % 10);\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n    if (minItem !== 0) {\n      minItem *= 10 * (props.roundToDigits || 1);\n      minItem = minItem - (10 + minItem % 10);\n      minItem /= 10 * (props.roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(props.roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - maxItem % 10);\n    if (minItem !== 0) {\n      minItem = minItem - (10 + minItem % 10);\n    }\n  }\n  var maxValue = props.maxValue || maxItem;\n  var mostNegativeValue = props.mostNegativeValue || minItem;\n  useEffect(function () {\n    decreaseWidth();\n    labelsAppear();\n  }, [animationDuration, decreaseWidth, labelsAppear]);\n  var extendedContainerHeight = getExtendedContainerHeightWithPadding(containerHeight, props.overflowTop);\n  var yAtxAxis = extendedContainerHeight - xAxisThickness / 2;\n  var getX = function getX(index) {\n    return initialSpacing + spacing * index;\n  };\n  var getY = function getY(index) {\n    return yAtxAxis - data[index].value * containerHeight / maxValue;\n  };\n  useEffect(function () {\n    var ppArray = [];\n    var pp = 'M' + initialSpacing + ' ' + getY(0),\n      prevValuev,\n      nextValue;\n    for (var _i = 0; _i < data.length - 1; _i++) {\n      prevValuev = data[_i].value;\n      nextValue = data[_i + 1].value;\n      if (prevValuev < 0 && nextValue < 0) {\n        pp += 'L' + getX(_i) + ' ' + getY(_i) + ' ';\n      } else if (prevValuev < 0 && nextValue > 0) {\n        pp += 'L' + getX(_i) + ' ' + getY(_i) + ' ';\n        var prevX = getX(_i);\n        var prevY = getY(_i);\n        var nextX = getX(_i + 1);\n        var nextY = getY(_i + 1);\n        var slope = (nextY - prevY) / (nextX - prevX);\n        var x = (yAtxAxis - prevY) / slope + prevX;\n        pp += 'L' + (x - thickness / 2) + ' ' + yAtxAxis + ' ';\n        var _pointsOb = {\n          points: pp.startsWith('L') ? pp.replace('L', 'M') : pp,\n          color: 'red'\n        };\n        ppArray.push(_pointsOb);\n        setPointsArray([].concat(ppArray));\n        pp = 'M' + x + ' ' + yAtxAxis + ' L' + nextX + ' ' + nextY + ' ';\n        _pointsOb = {\n          points: pp,\n          color: 'green'\n        };\n        ppArray.push(_pointsOb);\n      } else if (prevValuev > 0 && nextValue < 0) {\n        pp += 'L' + getX(_i) + ' ' + getY(_i) + ' ';\n        var _prevX = getX(_i);\n        var _prevY = getY(_i);\n        var _nextX = getX(_i + 1);\n        var _nextY = getY(_i + 1);\n        var _slope = (_nextY - _prevY) / (_nextX - _prevX);\n        var _x = (yAtxAxis - _prevY) / _slope + _prevX;\n        pp += 'L' + (_x - thickness / 2) + ' ' + yAtxAxis + ' ';\n        var _pointsOb2 = {\n          points: pp.startsWith('L') ? pp.replace('L', 'M') : pp,\n          color: 'green'\n        };\n        ppArray.push(_pointsOb2);\n        setPointsArray([].concat(ppArray));\n        pp = 'M' + _x + ' ' + yAtxAxis + ' L' + _nextX + ' ' + _nextY + ' ';\n        _pointsOb2 = {\n          points: pp,\n          color: 'red'\n        };\n        ppArray.push(_pointsOb2);\n      } else {\n        pp += 'L' + getX(_i) + ' ' + getY(_i) + ' ';\n      }\n    }\n    var i = data.length - 1;\n    prevValuev = data[i - 1].value;\n    nextValue = data[i].value;\n    if (prevValuev > 0 && nextValue > 0 || prevValuev < 0 && nextValue < 0) {\n      pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n    }\n    var pointsOb = {\n      points: pp.startsWith('L') ? pp.replace('L', 'M') : pp,\n      color: nextValue > 0 ? 'green' : 'red'\n    };\n    ppArray.push(pointsOb);\n    setPointsArray([].concat(ppArray));\n    var startIndex = -1,\n      endIndex = -1,\n      startX,\n      startY,\n      endY,\n      color = 'green',\n      localArray = [],\n      broken = false;\n    pp = 'M' + initialSpacing + ' ' + yAtxAxis;\n    for (i = 0; i < data.length - 1; i++) {\n      prevValuev = data[i].value;\n      nextValue = data[i + 1].value;\n      pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n      if (prevValuev > 0 && nextValue < 0 || prevValuev < 0 && nextValue > 0) {\n        var _prevX2 = getX(i);\n        var _prevY2 = getY(i);\n        var _nextX2 = getX(i + 1);\n        var _nextY2 = getY(i + 1);\n        var _slope2 = (_nextY2 - _prevY2) / (_nextX2 - _prevX2);\n        var _x2 = (yAtxAxis - _prevY2) / _slope2 + _prevX2;\n        pp += 'L' + (_x2 - thickness / 2) + ' ' + yAtxAxis + ' ';\n        broken = true;\n        break;\n      }\n    }\n    if (!broken) {\n      i = data.length - 1;\n      pp += 'L' + getX(i) + ' ' + getY(i) + ' L' + getX(i) + ' ' + (yAtxAxis - xAxisThickness / 2);\n    }\n    localArray.push({\n      points: pp,\n      color: data[0].value >= 0 ? 'green' : 'red'\n    });\n    var xs = [];\n    data.forEach(function (item, index) {\n      var x = getX(index);\n      xs.push(x + '');\n    });\n    pointsArray.forEach(function (item, index) {\n      var splitArray = item.points.split(' ').filter(function (spItem) {\n        return spItem && spItem !== ' ';\n      });\n      if (splitArray[1] === yAtxAxis + '' && !xs.includes(splitArray[0].replace('M', '').replace('L', ''))) {\n        startIndex = index;\n        startX = splitArray[0].replace('M', '').replace('L', '');\n        if (splitArray.length > 3) {\n          startY = splitArray[1].replace('M', '').replace('L', '');\n          endY = splitArray[3].replace('M', '').replace('L', '');\n          if (Number(startY) < Number(endY)) {\n            color = 'red';\n          } else {\n            color = 'green';\n          }\n        }\n      }\n      if (splitArray[splitArray.length - 1] === yAtxAxis + '' && !xs.includes(splitArray[splitArray.length - 2].replace('M', '').replace('L', ''))) {\n        endIndex = index;\n      }\n      if (startX) {\n        var filPts = '';\n        for (var j = startIndex; j <= endIndex; j++) {\n          if (pointsArray[j]) {\n            filPts += pointsArray[j].points.replaceAll('M', 'L');\n          }\n        }\n        filPts += 'L ' + startX + ' ' + yAtxAxis;\n        localArray.push({\n          points: filPts.replace('L', 'M'),\n          color: color\n        });\n      }\n    });\n    if (broken) {\n      pp = 'M' + getX(data.length - 1) + ' ' + yAtxAxis;\n      for (var _i2 = data.length - 1; _i2 > 0; _i2--) {\n        prevValuev = data[_i2].value;\n        nextValue = data[_i2 - 1].value;\n        pp += 'L' + getX(_i2) + ' ' + getY(_i2) + ' ';\n        if (prevValuev > 0 && nextValue < 0 || prevValuev < 0 && nextValue > 0) {\n          var _prevX3 = getX(_i2);\n          var _prevY3 = getY(_i2);\n          var _nextX3 = getX(_i2 - 1);\n          var _nextY3 = getY(_i2 - 1);\n          var _slope3 = (_nextY3 - _prevY3) / (_nextX3 - _prevX3);\n          var _x3 = (yAtxAxis - _prevY3) / _slope3 + _prevX3;\n          pp += 'L' + _x3 + ' ' + yAtxAxis + ' ';\n          break;\n        }\n      }\n      localArray.push({\n        points: pp,\n        color: data[data.length - 1].value > 0 ? 'green' : 'red'\n      });\n    }\n    setFillPointsArray([].concat(localArray));\n    setToggle(true);\n  }, [areaChart, containerHeight, data, dataPointsWidth1, initialSpacing, spacing, xAxisThickness, toggle, maxValue]);\n  var horizSections = [{\n    value: '0'\n  }];\n  var stepHeight = props.stepHeight || containerHeight / noOfSections;\n  var stepValue = props.stepValue || maxValue / noOfSections;\n  var noOfSectionsBelowXAxis = props.noOfSectionsBelowXAxis || -mostNegativeValue / stepValue;\n  var thickness1 = props.thickness || LineDefaults.thickness;\n  var zIndex = props.zIndex || 0;\n  var strokeDashArray1 = props.strokeDashArray;\n  var rotateLabel = (_props$rotateLabel = props.rotateLabel) != null ? _props$rotateLabel : AxesAndRulesDefaults.rotateLabel;\n  var isAnimated = (_props$isAnimated = props.isAnimated) != null ? _props$isAnimated : LineDefaults.isAnimated;\n  var hideDataPoints1 = (_props$hideDataPoints = props.hideDataPoints) != null ? _props$hideDataPoints : LineDefaults.hideDataPoints;\n  var color = props.color || 'green';\n  var colorNegative = props.colorNegative || 'red';\n  var startFillColor = props.startFillColor || 'lightgreen';\n  var endFillColor = props.endFillColor || 'white';\n  var startOpacity = (_props$startOpacity = props.startOpacity) != null ? _props$startOpacity : LineDefaults.startOpacity;\n  var endOpacity = (_props$endOpacity = props.endOpacity) != null ? _props$endOpacity : LineDefaults.endOpacity;\n  var startFillColorNegative = props.startFillColorNegative || 'pink';\n  var endFillColorNegative = props.endFillColorNegative || 'white';\n  var startOpacityNegative = (_props$startOpacityNe = props.startOpacityNegative) != null ? _props$startOpacityNe : LineDefaults.startOpacity;\n  var endOpacityNegative = (_props$endOpacityNega = props.endOpacityNegative) != null ? _props$endOpacityNega : LineDefaults.endOpacity;\n  var gradientDirection = props.gradientDirection || 'vertical';\n  var showXAxisIndices = (_props$showXAxisIndic = props.showXAxisIndices) != null ? _props$showXAxisIndic : AxesAndRulesDefaults.showXAxisIndices;\n  var xAxisIndicesHeight = (_props$xAxisIndicesHe = props.xAxisIndicesHeight) != null ? _props$xAxisIndicesHe : AxesAndRulesDefaults.xAxisIndicesHeight;\n  var xAxisIndicesWidth = (_props$xAxisIndicesWi = props.xAxisIndicesWidth) != null ? _props$xAxisIndicesWi : AxesAndRulesDefaults.xAxisIndicesWidth;\n  var xAxisIndicesColor = (_props$xAxisIndicesCo = props.xAxisIndicesColor) != null ? _props$xAxisIndicesCo : AxesAndRulesDefaults.xAxisIndicesColor;\n  var xAxisTextNumberOfLines = (_props$xAxisTextNumbe = props.xAxisTextNumberOfLines) != null ? _props$xAxisTextNumbe : AxesAndRulesDefaults.xAxisTextNumberOfLines;\n  var horizontalRulesStyle = props.horizontalRulesStyle;\n  var showFractionalValues = (_props$showFractional = props.showFractionalValues) != null ? _props$showFractional : AxesAndRulesDefaults.showFractionalValues;\n  var yAxisLabelWidth = (_props$yAxisLabelWidt = props.yAxisLabelWidth) != null ? _props$yAxisLabelWidt : props.hideYAxisText ? AxesAndRulesDefaults.yAxisEmptyLabelWidth : AxesAndRulesDefaults.yAxisLabelWidth;\n  var horizontal = false;\n  var yAxisAtTop = false;\n  var disableScroll = (_props$disableScroll = props.disableScroll) != null ? _props$disableScroll : LineDefaults.disableScroll;\n  var showScrollIndicator = props.showScrollIndicator || LineDefaults.showScrollIndicator;\n  var focusEnabled = (_props$focusEnabled = props.focusEnabled) != null ? _props$focusEnabled : LineDefaults.focusEnabled;\n  var showDataPointOnFocus = (_props$showDataPointO = props.showDataPointOnFocus) != null ? _props$showDataPointO : LineDefaults.showDataPointOnFocus;\n  var showStripOnFocus = (_props$showStripOnFoc = props.showStripOnFocus) != null ? _props$showStripOnFoc : LineDefaults.showStripOnFocus;\n  var showTextOnFocus = (_props$showTextOnFocu = props.showTextOnFocus) != null ? _props$showTextOnFocu : LineDefaults.showTextOnFocus;\n  var stripHeight = props.stripHeight;\n  var stripWidth = (_props$stripWidth = props.stripWidth) != null ? _props$stripWidth : LineDefaults.stripWidth;\n  var stripColor = (_props$stripColor = props.stripColor) != null ? _props$stripColor : color;\n  var stripOpacity = (_props$stripOpacity = props.stripOpacity) != null ? _props$stripOpacity : (startOpacity + endOpacity) / 2;\n  var unFocusOnPressOut = (_props$unFocusOnPress = props.unFocusOnPressOut) != null ? _props$unFocusOnPress : LineDefaults.unFocusOnPressOut;\n  var delayBeforeUnFocus = (_props$delayBeforeUnF = props.delayBeforeUnFocus) != null ? _props$delayBeforeUnF : LineDefaults.delayBeforeUnFocus;\n  horizSections.pop();\n  for (var i = 0; i <= noOfSections; i++) {\n    var _props$yAxisLabelText;\n    var value = maxValue - stepValue * i;\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n    horizSections.push({\n      value: props.yAxisLabelTexts ? (_props$yAxisLabelText = props.yAxisLabelTexts[noOfSections - i]) != null ? _props$yAxisLabelText : value.toString() : value.toString()\n    });\n  }\n  var renderLabel = function renderLabel(index, label, labelTextStyle, labelComponent) {\n    return _jsx(View, {\n      style: [{\n        position: 'absolute',\n        bottom: 30,\n        zIndex: 10,\n        width: spacing + labelsExtraHeight,\n        left: index === 0 && initialSpacing < 10 ? getX(index) - spacing / 2 + 8 : getX(index) - spacing / 2,\n        justifyContent: 'center'\n      }, rotateLabel && {\n        transform: [{\n          rotate: '60deg'\n        }]\n      }],\n      children: labelComponent ? labelComponent() : _jsx(Text, {\n        style: labelTextStyle || {\n          textAlign: 'center'\n        },\n        numberOfLines: xAxisTextNumberOfLines,\n        children: label || ''\n      })\n    });\n  };\n  var renderAnimatedLabel = function renderAnimatedLabel(index, label, labelTextStyle, labelComponent) {\n    return _jsx(Animated.View, {\n      style: [{\n        height: rotateLabel ? 40 : 20,\n        position: 'absolute',\n        bottom: rotateLabel ? 10 : 30,\n        zIndex: 10,\n        width: spacing,\n        left: index === 0 && initialSpacing < 10 ? getX(index) - spacing / 2 + 8 : getX(index) - spacing / 2,\n        opacity: appearingOpacity\n      }, rotateLabel && {\n        transform: [{\n          rotate: '60deg'\n        }]\n      }],\n      children: labelComponent ? labelComponent() : _jsx(Text, {\n        style: labelTextStyle || {\n          textAlign: 'center'\n        },\n        numberOfLines: xAxisTextNumberOfLines,\n        children: label || ''\n      })\n    });\n  };\n  var animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth]\n  });\n  var onStripPress = function onStripPress(item, index) {\n    setSelectedIndex(index);\n    if (props.onFocus) {\n      props.onFocus(item, index);\n    }\n  };\n  var renderDataPoints = function renderDataPoints(dataForRender, dataPtsShape, dataPtsWidth, dataPtsHeight, dataPtsColor, dataPtsRadius, textColor, textFontSize, startIndex, endIndex) {\n    return dataForRender.map(function (item, index) {\n      var _item$stripHeight, _item$stripWidth, _item$stripOpacity;\n      if (index < startIndex || index > endIndex) return null;\n      if (item.hideDataPoint) {\n        return null;\n      }\n      var dataPointsShape, dataPointsWidth, dataPointsHeight, dataPointsColor, dataPointsRadius, text, customDataPoint, dataPointLabelComponent;\n      if (index === selectedIndex) {\n        dataPointsShape = item.focusedDataPointShape || props.focusedDataPointShape || item.dataPointShape || dataPtsShape;\n        dataPointsWidth = item.focusedDataPointWidth || props.focusedDataPointWidth || item.dataPointWidth || dataPtsWidth;\n        dataPointsHeight = item.focusedDataPointHeight || props.focusedDataPointHeight || item.dataPointHeight || dataPtsHeight;\n        dataPointsColor = item.focusedDataPointColor || props.focusedDataPointColor || 'orange';\n        dataPointsRadius = item.focusedDataPointRadius || props.focusedDataPointRadius || item.dataPointRadius || dataPtsRadius;\n        if (showTextOnFocus) {\n          text = item.dataPointText;\n        }\n        customDataPoint = item.focusedCustomDataPoint || props.focusedCustomDataPoint || item.customDataPoint || props.customDataPoint;\n        dataPointLabelComponent = item.focusedDataPointLabelComponent || item.dataPointLabelComponent;\n      } else {\n        dataPointsShape = item.dataPointShape || dataPtsShape;\n        dataPointsWidth = item.dataPointWidth || dataPtsWidth;\n        dataPointsHeight = item.dataPointHeight || dataPtsHeight;\n        dataPointsColor = item.dataPointColor || dataPtsColor;\n        dataPointsRadius = item.dataPointRadius || dataPtsRadius;\n        if (showTextOnFocus) {\n          text = '';\n        }\n        customDataPoint = item.customDataPoint || props.customDataPoint;\n        dataPointLabelComponent = item.dataPointLabelComponent;\n      }\n      var currentStripHeight = (_item$stripHeight = item.stripHeight) != null ? _item$stripHeight : stripHeight;\n      var currentStripWidth = (_item$stripWidth = item.stripWidth) != null ? _item$stripWidth : stripWidth;\n      var currentStripOpacity = (_item$stripOpacity = item.stripOpacity) != null ? _item$stripOpacity : stripOpacity;\n      var currentStripColor = item.stripColor || stripColor;\n      return _jsxs(Fragment, {\n        children: [focusEnabled ? _jsx(_Fragment, {\n          children: unFocusOnPressOut ? _jsx(Rect, {\n            onPressIn: function onPressIn() {\n              return onStripPress(item, index);\n            },\n            onPressOut: function onPressOut() {\n              return setTimeout(function () {\n                return setSelectedIndex(-1);\n              }, delayBeforeUnFocus);\n            },\n            x: initialSpacing + (spacing * index - spacing / 2),\n            y: 8,\n            width: spacing,\n            height: containerHeight,\n            fill: 'none'\n          }) : _jsx(Rect, {\n            onPress: function onPress() {\n              return onStripPress(item, index);\n            },\n            x: initialSpacing + (spacing * index - spacing / 2),\n            y: 8,\n            width: spacing,\n            height: containerHeight,\n            fill: 'none'\n          })\n        }) : null, item.showStrip || focusEnabled && index === selectedIndex && showStripOnFocus ? _jsx(Rect, {\n          x: initialSpacing + (spacing * index - dataPointsWidth / 2),\n          y: currentStripHeight ? containerHeight - currentStripHeight + 8 : containerHeight - dataPointsHeight / 2 + 20 - item.value * containerHeight / maxValue,\n          width: currentStripWidth,\n          height: currentStripHeight || containerHeight - dataPointsHeight / 2 + 20,\n          opacity: currentStripOpacity,\n          fill: currentStripColor\n        }) : null, customDataPoint ? _jsx(View, {\n          style: [styles.customDataPointContainer, {\n            height: dataPointsHeight,\n            width: dataPointsWidth,\n            top: containerHeight - item.value * containerHeight / maxValue,\n            left: getX(index) - dataPointsWidth\n          }],\n          children: customDataPoint()\n        }) : null, dataPointsShape === 'rectangular' ? _jsx(Fragment, {\n          children: customDataPoint ? null : _jsx(Rect, {\n            x: getX(index) - dataPointsWidth,\n            y: extendedContainerHeight + dataPointsHeight / 2 - item.value * containerHeight / maxValue,\n            width: dataPointsWidth,\n            height: dataPointsHeight,\n            fill: showDataPointOnFocus ? index === selectedIndex ? dataPointsColor : 'none' : dataPointsColor,\n            onPress: function onPress() {\n              item.onPress ? item.onPress(item, index) : props.onPress ? props.onPress(item, index) : null;\n            }\n          })\n        }, index) : _jsx(Fragment, {\n          children: customDataPoint ? null : _jsx(Circle, {\n            cx: getX(index),\n            cy: getY(index),\n            r: dataPointsRadius,\n            fill: showDataPointOnFocus ? index === selectedIndex ? dataPointsColor : 'none' : dataPointsColor,\n            onPress: function onPress() {\n              item.onPress ? item.onPress(item, index) : props.onPress ? props.onPress(item, index) : null;\n            }\n          })\n        }, index), dataPointLabelComponent ? !showTextOnFocus || index === selectedIndex ? _jsx(View, {\n          style: [styles.customDataPointContainer, {\n            top: containerHeight + (item.dataPointLabelShiftY || props.dataPointLabelShiftY || 0) - item.value * containerHeight / maxValue,\n            left: initialSpacing + (item.dataPointLabelShiftX || props.dataPointLabelShiftX || 0) - (item.dataPointLabelWidth ? item.dataPointLabelWidth + 20 : props.dataPointLabelWidth ? props.dataPointLabelWidth + 20 : 50) / 2 + spacing * index\n          }],\n          children: dataPointLabelComponent()\n        }) : null : text || item.dataPointText ? !showTextOnFocus || index === selectedIndex ? _jsx(CanvasText, {\n          fill: item.textColor || textColor,\n          fontSize: item.textFontSize || textFontSize,\n          x: initialSpacing - dataPointsWidth + spacing * index + (item.textShiftX || props.textShiftX || 0),\n          y: extendedContainerHeight - dataPointsHeight / 2 - item.value * containerHeight / maxValue + (item.textShiftY || props.textShiftY || 0),\n          children: !showTextOnFocus ? item.dataPointText : text\n        }) : null : null]\n      }, index);\n    });\n  };\n  var renderSpecificVerticalLines = function renderSpecificVerticalLines(dataForRender) {\n    return dataForRender.map(function (item, index) {\n      if (item.showVerticalLine) {\n        return _jsx(Rect, {\n          x: initialSpacing - (item.verticalLineThickness || 1) / 2 - 1 + spacing * index,\n          y: item.verticalLineUptoDataPoint ? containerHeight - item.value * containerHeight / maxValue + 10 : -xAxisThickness,\n          width: item.verticalLineThickness || 1,\n          height: item.verticalLineUptoDataPoint ? item.value * containerHeight / maxValue - xAxisThickness : containerHeight + 10 - xAxisThickness,\n          fill: item.verticalLineColor || 'lightgray'\n        }, index);\n      }\n      return null;\n    });\n  };\n  var lineSvgComponent = function lineSvgComponent(pointsArray, currentLineThickness, color, startFillColor, endFillColor, startOpacity, endOpacity, strokeDashArray) {\n    return _jsxs(Svg, {\n      children: [strokeDashArray && strokeDashArray.length === 2 && typeof strokeDashArray[0] === 'number' && typeof strokeDashArray[1] === 'number' ? pointsArray.map(function (points, index) {\n        return _jsx(Path, {\n          d: points.points,\n          fill: \"none\",\n          stroke: points.color === 'green' ? color : colorNegative,\n          strokeWidth: currentLineThickness || thickness,\n          strokeDasharray: strokeDashArray\n        }, index);\n      }) : pointsArray.map(function (points, index) {\n        return _jsx(Path, {\n          d: points.points,\n          fill: \"none\",\n          stroke: points.color === 'green' ? color : colorNegative,\n          strokeWidth: currentLineThickness || thickness\n        }, index);\n      }), areaChart && _jsxs(_Fragment, {\n        children: [_jsxs(LinearGradient, {\n          id: \"Gradient\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: gradientDirection === 'horizontal' ? '1' : '0',\n          y2: gradientDirection === 'vertical' ? '1' : '0',\n          children: [_jsx(Stop, {\n            offset: \"0\",\n            stopColor: startFillColor,\n            stopOpacity: startOpacity.toString()\n          }), _jsx(Stop, {\n            offset: \"1\",\n            stopColor: endFillColor,\n            stopOpacity: endOpacity.toString()\n          })]\n        }), _jsxs(LinearGradient, {\n          id: \"GradientNegative\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: gradientDirection === 'horizontal' ? '1' : '0',\n          y2: gradientDirection === 'vertical' ? '1' : '0',\n          children: [_jsx(Stop, {\n            offset: \"1\",\n            stopColor: startFillColorNegative,\n            stopOpacity: startOpacityNegative.toString()\n          }), _jsx(Stop, {\n            offset: \"0\",\n            stopColor: endFillColorNegative,\n            stopOpacity: endOpacityNegative.toString()\n          })]\n        })]\n      }), areaChart ? fillPointsArray.map(function (item, index) {\n        return _jsx(Path, {\n          d: item.points,\n          fill: item.color === 'green' ? 'url(#Gradient)' : 'url(#GradientNegative)',\n          stroke: 'transparent',\n          strokeWidth: currentLineThickness || thickness\n        }, index);\n      }) : null, renderSpecificVerticalLines(data), !hideDataPoints1 ? renderDataPoints(data, dataPointsShape1, dataPointsWidth1, dataPointsHeight1, dataPointsColor1, dataPointsRadius1, textColor1, textFontSize1, startIndex1, endIndex1) : null]\n    });\n  };\n  var renderLine = function renderLine(zIndex, pointsArray, currentLineThickness, color, startFillColor, endFillColor, startOpacity, endOpacity, strokeDashArray) {\n    return _jsx(View, {\n      style: {\n        position: 'absolute',\n        height: extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight,\n        bottom: 60 + labelsExtraHeight,\n        width: totalWidth,\n        zIndex: zIndex\n      },\n      children: pointsArray.length ? lineSvgComponent(pointsArray, currentLineThickness, color, startFillColor, endFillColor, startOpacity, endOpacity, strokeDashArray) : null\n    });\n  };\n  var renderAnimatedLine = function renderAnimatedLine(zIndex, points, animatedWidth, currentLineThickness, color, startFillColor, endFillColor, startOpacity, endOpacity, strokeDashArray) {\n    return _jsx(Animated.View, {\n      style: {\n        position: 'absolute',\n        height: extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight,\n        bottom: 60,\n        width: animatedWidth,\n        zIndex: zIndex\n      },\n      children: lineSvgComponent(points, currentLineThickness, color, startFillColor, endFillColor, startOpacity, endOpacity, strokeDashArray)\n    });\n  };\n  var renderChartContent = function renderChartContent() {\n    return _jsxs(_Fragment, {\n      children: [isAnimated ? renderAnimatedLine(zIndex, pointsArray, animatedWidth, thickness1, color, startFillColor, endFillColor, startOpacity, endOpacity, strokeDashArray1) : renderLine(zIndex, pointsArray, thickness1, color, startFillColor, endFillColor, startOpacity, endOpacity, strokeDashArray1), data.map(function (item, index) {\n        return _jsx(View, {\n          children: isAnimated ? renderAnimatedLabel(index, item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''), item.labelTextStyle || props.xAxisLabelTextStyle, item.labelComponent) : renderLabel(index, item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''), item.labelTextStyle || props.xAxisLabelTextStyle, item.labelComponent)\n        }, index);\n      })]\n    });\n  };\n  var barAndLineChartsWrapperProps = {\n    chartType: chartTypes.LINE_BI_COLOR,\n    containerHeight: containerHeight,\n    noOfSectionsBelowXAxis: noOfSectionsBelowXAxis,\n    stepHeight: stepHeight,\n    labelsExtraHeight: labelsExtraHeight,\n    yAxisLabelWidth: yAxisLabelWidth,\n    horizontal: horizontal,\n    rtl: false,\n    shiftX: 0,\n    shiftY: 0,\n    scrollRef: scrollRef,\n    yAxisAtTop: yAxisAtTop,\n    initialSpacing: initialSpacing,\n    data: data,\n    stackData: undefined,\n    secondaryData: [],\n    barWidth: 0,\n    xAxisThickness: xAxisThickness,\n    totalWidth: totalWidth,\n    disableScroll: disableScroll,\n    showScrollIndicator: showScrollIndicator,\n    scrollToEnd: scrollToEnd,\n    scrollToIndex: props.scrollToIndex,\n    scrollAnimation: scrollAnimation,\n    scrollEventThrottle: scrollEventThrottle,\n    indicatorColor: props.indicatorColor,\n    setSelectedIndex: setSelectedIndex,\n    spacing: spacing,\n    showLine: false,\n    lineConfig: null,\n    maxValue: maxValue,\n    lineData: [],\n    animatedWidth: animatedWidth,\n    lineBehindBars: false,\n    points: pointsArray,\n    arrowPoints: [],\n    renderChartContent: renderChartContent,\n    remainingScrollViewProps: {},\n    width: props.width,\n    horizSections: horizSections,\n    endSpacing: endSpacing,\n    horizontalRulesStyle: horizontalRulesStyle,\n    noOfSections: noOfSections,\n    showFractionalValues: showFractionalValues,\n    axesAndRulesProps: getAxesAndRulesProps(props, stepValue, undefined),\n    yAxisLabelTexts: props.yAxisLabelTexts,\n    yAxisOffset: props.yAxisOffset,\n    rotateYAxisTexts: 0,\n    hideAxesAndRules: props.hideAxesAndRules,\n    showXAxisIndices: showXAxisIndices,\n    xAxisIndicesHeight: xAxisIndicesHeight,\n    xAxisIndicesWidth: xAxisIndicesWidth,\n    xAxisIndicesColor: xAxisIndicesColor,\n    pointerConfig: null,\n    getPointerProps: null,\n    pointerIndex: 0,\n    pointerX: 0,\n    pointerY: 0\n  };\n  return _jsx(BarAndLineChartsWrapper, _objectSpread({}, barAndLineChartsWrapperProps));\n};","map":{"version":3,"names":["React","Fragment","useCallback","useEffect","useMemo","useState","useRef","View","Animated","Easing","Text","styles","Svg","Path","LinearGradient","Stop","Circle","Rect","CanvasText","BarAndLineChartsWrapper","getAxesAndRulesProps","getExtendedContainerHeightWithPadding","AxesAndRulesDefaults","LineDefaults","chartTypes","jsx","_jsx","_Fragment","jsxs","_jsxs","initialData","LineChartBicolor","props","_props$scrollToEnd","_props$scrollAnimatio","_props$scrollEventThr","_props$initialSpacing","_props$endSpacing","_props$spacing","_props$xAxisThickness","_props$dataPointsHeig","_props$dataPointsWidt","_props$dataPointsRadi","_props$dataPointsColo","_props$dataPointsShap","_props$rotateLabel","_props$isAnimated","_props$hideDataPoints","_props$startOpacity","_props$endOpacity","_props$startOpacityNe","_props$endOpacityNega","_props$showXAxisIndic","_props$xAxisIndicesHe","_props$xAxisIndicesWi","_props$xAxisIndicesCo","_props$xAxisTextNumbe","_props$showFractional","_props$yAxisLabelWidt","_props$disableScroll","_props$focusEnabled","_props$showDataPointO","_props$showStripOnFoc","_props$showTextOnFocu","_props$stripWidth","_props$stripColor","_props$stripOpacity","_props$unFocusOnPress","_props$delayBeforeUnF","scrollRef","_useState","_useState2","_slicedToArray","toggle","setToggle","_useState3","_useState4","pointsArray","setPointsArray","_useState5","_useState6","fillPointsArray","setFillPointsArray","_useState7","_useState8","selectedIndex","setSelectedIndex","containerHeight","height","noOfSections","data","yAxisOffset","map","item","_props$yAxisOffset","value","scrollToEnd","scrollAnimation","scrollEventThrottle","opacValue","Value","widthValue","labelsExtraHeight","animationDuration","startIndex1","startIndex","endIndex1","endIndex","undefined","length","_toConsumableArray","adjustToWidth","initialSpacing","endSpacing","thickness","spacing","width","xAxisThickness","dataPointsHeight1","dataPointsHeight","dataPointsWidth1","dataPointsWidth","dataPointsRadius1","dataPointsRadius","dataPointsColor1","dataPointsColor","dataPointsShape1","dataPointsShape","labelsAppear","setValue","timing","toValue","duration","easing","ease","useNativeDriver","start","appearingOpacity","interpolate","inputRange","outputRange","decreaseWidth","linear","areaChart","textFontSize1","textFontSize","textColor1","textColor","totalWidth","maxItem","minItem","forEach","showFractionalValues","roundToDigits","parseFloat","toFixed","maxValue","mostNegativeValue","extendedContainerHeight","overflowTop","yAtxAxis","getX","index","getY","ppArray","pp","prevValuev","nextValue","i","prevX","prevY","nextX","nextY","slope","x","pointsOb","points","startsWith","replace","color","push","concat","startX","startY","endY","localArray","broken","xs","splitArray","split","filter","spItem","includes","Number","filPts","j","replaceAll","horizSections","stepHeight","stepValue","noOfSectionsBelowXAxis","thickness1","zIndex","strokeDashArray1","strokeDashArray","rotateLabel","isAnimated","hideDataPoints1","hideDataPoints","colorNegative","startFillColor","endFillColor","startOpacity","endOpacity","startFillColorNegative","endFillColorNegative","startOpacityNegative","endOpacityNegative","gradientDirection","showXAxisIndices","xAxisIndicesHeight","xAxisIndicesWidth","xAxisIndicesColor","xAxisTextNumberOfLines","horizontalRulesStyle","yAxisLabelWidth","hideYAxisText","yAxisEmptyLabelWidth","horizontal","yAxisAtTop","disableScroll","showScrollIndicator","focusEnabled","showDataPointOnFocus","showStripOnFocus","showTextOnFocus","stripHeight","stripWidth","stripColor","stripOpacity","unFocusOnPressOut","delayBeforeUnFocus","pop","_props$yAxisLabelText","yAxisLabelTexts","toString","renderLabel","label","labelTextStyle","labelComponent","style","position","bottom","left","justifyContent","transform","rotate","children","textAlign","numberOfLines","renderAnimatedLabel","opacity","animatedWidth","onStripPress","onFocus","renderDataPoints","dataForRender","dataPtsShape","dataPtsWidth","dataPtsHeight","dataPtsColor","dataPtsRadius","_item$stripHeight","_item$stripWidth","_item$stripOpacity","hideDataPoint","text","customDataPoint","dataPointLabelComponent","focusedDataPointShape","dataPointShape","focusedDataPointWidth","dataPointWidth","focusedDataPointHeight","dataPointHeight","focusedDataPointColor","focusedDataPointRadius","dataPointRadius","dataPointText","focusedCustomDataPoint","focusedDataPointLabelComponent","dataPointColor","currentStripHeight","currentStripWidth","currentStripOpacity","currentStripColor","onPressIn","onPressOut","setTimeout","y","fill","onPress","showStrip","customDataPointContainer","top","cx","cy","r","dataPointLabelShiftY","dataPointLabelShiftX","dataPointLabelWidth","fontSize","textShiftX","textShiftY","renderSpecificVerticalLines","showVerticalLine","verticalLineThickness","verticalLineUptoDataPoint","verticalLineColor","lineSvgComponent","currentLineThickness","d","stroke","strokeWidth","strokeDasharray","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","renderLine","renderAnimatedLine","renderChartContent","xAxisLabelTexts","xAxisLabelTextStyle","barAndLineChartsWrapperProps","chartType","LINE_BI_COLOR","rtl","shiftX","shiftY","stackData","secondaryData","barWidth","scrollToIndex","indicatorColor","showLine","lineConfig","lineData","lineBehindBars","arrowPoints","remainingScrollViewProps","axesAndRulesProps","rotateYAxisTexts","hideAxesAndRules","pointerConfig","getPointerProps","pointerIndex","pointerX","pointerY","_objectSpread"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-gifted-charts/src/LineChart/LineChartBicolor.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  useRef,\n} from 'react';\nimport {View, Animated, Easing, Text, ColorValue} from 'react-native';\nimport {styles} from './styles';\nimport Svg, {\n  Path,\n  LinearGradient,\n  Stop,\n  Circle,\n  Rect,\n  Text as CanvasText,\n} from 'react-native-svg';\nimport BarAndLineChartsWrapper from '../Components/BarAndLineChartsWrapper';\nimport {\n  getAxesAndRulesProps,\n  getExtendedContainerHeightWithPadding,\n} from '../utils';\nimport {\n  AxesAndRulesDefaults,\n  LineDefaults,\n  chartTypes,\n  yAxisSides,\n} from '../utils/constants';\nimport {BarAndLineChartsWrapperTypes, RuleType} from '../utils/types';\n\nlet initialData: Array<itemType> | null = null;\n\ntype propTypes = {\n  height?: number;\n  overflowTop?: number;\n  noOfSections?: number;\n  maxValue?: number;\n  mostNegativeValue?: number;\n  stepHeight?: number;\n  stepValue?: number;\n  spacing?: number;\n  initialSpacing?: number;\n  endSpacing?: number;\n  data?: Array<itemType>;\n  zIndex?: number;\n  thickness?: number;\n  strokeDashArray?: Array<number>;\n  rotateLabel?: boolean;\n  isAnimated?: boolean;\n  animationDuration?: number;\n  onDataChangeAnimationDuration?: number;\n  animationEasing?: any;\n  xAxisLength?: number;\n  xAxisThickness?: number;\n  xAxisColor?: ColorValue;\n  xAxisType?: RuleType;\n  hideRules?: boolean;\n  rulesLength?: number;\n  rulesColor?: ColorValue;\n  rulesThickness?: number;\n  focusEnabled?: boolean;\n  onFocus?: Function;\n  showDataPointOnFocus?: boolean;\n  showStripOnFocus?: boolean;\n  showTextOnFocus?: boolean;\n  stripHeight?: number;\n  stripWidth?: number;\n  stripColor?: ColorValue | String | any;\n  stripOpacity?: number;\n  onPress?: Function;\n  unFocusOnPressOut?: boolean;\n  delayBeforeUnFocus?: number;\n\n  rulesType?: RuleType;\n  dashWidth?: number;\n  dashGap?: number;\n  showReferenceLine1?: boolean;\n  referenceLine1Config?: referenceConfigType;\n  referenceLine1Position?: number;\n  showReferenceLine2?: boolean;\n  referenceLine2Config?: referenceConfigType;\n  referenceLine2Position?: number;\n  showReferenceLine3?: boolean;\n  referenceLine3Config?: referenceConfigType;\n  referenceLine3Position?: number;\n\n  showVerticalLines?: boolean;\n  verticalLinesUptoDataPoint?: boolean;\n  verticalLinesThickness?: number;\n  verticalLinesHeight?: number;\n  verticalLinesColor?: ColorValue;\n  verticalLinesStrokeDashArray?: Array<number>;\n  verticalLinesShift?: number;\n  verticalLinesZIndex?: number;\n  noOfVerticalLines?: number;\n  verticalLinesSpacing?: number;\n  hideAxesAndRules?: boolean;\n  areaChart?: boolean;\n\n  disableScroll?: boolean;\n  showScrollIndicator?: boolean;\n  indicatorColor?: 'black' | 'default' | 'white';\n\n  //Indices\n\n  showYAxisIndices?: boolean;\n  showXAxisIndices?: boolean;\n  yAxisIndicesHeight?: number;\n  xAxisIndicesHeight?: number;\n  yAxisIndicesWidth?: number;\n  xAxisIndicesWidth?: number;\n  xAxisIndicesColor?: ColorValue;\n  yAxisIndicesColor?: ColorValue;\n  yAxisSide?: yAxisSides;\n  yAxisOffset?: number;\n\n  startIndex?: number;\n  endIndex?: number;\n\n  color?: string;\n  colorNegative?: string;\n  yAxisThickness?: number;\n  yAxisColor?: ColorValue;\n  yAxisLabelContainerStyle?: any;\n  horizontalRulesStyle?: any;\n  yAxisTextStyle?: any;\n  yAxisTextNumberOfLines?: number;\n  xAxisTextNumberOfLines?: number;\n  showFractionalValues?: boolean;\n  roundToDigits?: number;\n  yAxisLabelWidth?: number;\n  hideYAxisText?: boolean;\n\n  backgroundColor?: ColorValue;\n  curved?: boolean;\n  horizSections?: Array<sectionType>;\n\n  //Data points\n\n  hideDataPoints?: boolean;\n  dataPointsHeight?: number;\n  dataPointsWidth?: number;\n  dataPointsRadius?: number;\n  dataPointsColor?: string;\n  dataPointsShape?: string;\n  customDataPoint?: Function;\n\n  focusedDataPointShape?: String;\n  focusedDataPointWidth?: number;\n  focusedDataPointHeight?: number;\n  focusedDataPointColor?: ColorValue | String | any;\n  focusedDataPointRadius?: number;\n  focusedCustomDataPoint?: Function;\n  dataPointLabelWidth?: number;\n  dataPointLabelShiftX?: number;\n  dataPointLabelShiftY?: number;\n\n  startFillColor?: string;\n  endFillColor?: string;\n  startFillColorNegative?: string;\n  endFillColorNegative?: string;\n  startOpacity?: number;\n  endOpacity?: number;\n  startOpacityNegative?: number;\n  endOpacityNegative?: number;\n  gradientDirection?: string;\n\n  textFontSize?: number;\n  textColor?: string;\n  hideOrigin?: boolean;\n  textShiftX?: number;\n  textShiftY?: number;\n  yAxisLabelTexts?: Array<string>;\n  xAxisLabelTexts?: Array<string>;\n  xAxisLabelTextStyle?: any;\n  width?: number;\n  yAxisLabelPrefix?: String;\n  yAxisLabelSuffix?: String;\n  scrollToEnd?: boolean;\n  scrollToIndex?: number;\n  scrollAnimation?: boolean;\n  scrollEventThrottle?: number;\n  noOfSectionsBelowXAxis?: number;\n  labelsExtraHeight?: number;\n  adjustToWidth?: boolean;\n  getPointerProps?: Function;\n};\ntype referenceConfigType = {\n  thickness: number;\n  width: number;\n  color: ColorValue | String | any;\n  type: String;\n  dashWidth: number;\n  dashGap: number;\n  labelText: String;\n  labelTextStyle: any;\n};\ntype itemType = {\n  value: number;\n  label?: String;\n  labelComponent?: Function;\n  labelTextStyle?: any;\n  dataPointText?: string;\n  textShiftX?: number;\n  textShiftY?: number;\n  textColor?: string;\n  textFontSize?: number;\n\n  hideDataPoint?: boolean;\n  dataPointHeight?: number;\n  dataPointWidth?: number;\n  dataPointRadius?: number;\n  dataPointColor?: string;\n  dataPointShape?: string;\n  customDataPoint?: Function;\n\n  stripHeight?: number;\n  stripWidth?: number;\n  stripColor?: ColorValue | String | any;\n  stripOpacity?: number;\n\n  focusedDataPointShape?: String;\n  focusedDataPointWidth?: number;\n  focusedDataPointHeight?: number;\n  focusedDataPointColor?: ColorValue | String | any;\n  focusedDataPointRadius?: number;\n  focusedCustomDataPoint?: Function;\n\n  dataPointLabelComponent?: Function;\n  focusedDataPointLabelComponent?: Function;\n  dataPointLabelWidth?: number;\n  dataPointLabelShiftX?: number;\n  dataPointLabelShiftY?: number;\n  showStrip?: boolean;\n\n  showVerticalLine?: boolean;\n  verticalLineUptoDataPoint?: boolean;\n  verticalLineColor?: string;\n  verticalLineThickness?: number;\n  pointerShiftX?: number;\n  pointerShiftY?: number;\n  onPress?: Function;\n};\n\ntype sectionType = {\n  value: string;\n};\n\ntype Points = {\n  points: string;\n  color: string;\n};\n\nexport const LineChartBicolor = (props: propTypes) => {\n  const scrollRef = useRef();\n  const [toggle, setToggle] = useState(false);\n  const [pointsArray, setPointsArray] = useState<Array<Points>>([]);\n  const [fillPointsArray, setFillPointsArray] = useState<Array<Points>>([]);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const containerHeight = props.height || AxesAndRulesDefaults.containerHeight;\n  const noOfSections = props.noOfSections || AxesAndRulesDefaults.noOfSections;\n  let data = useMemo(() => {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(item => {\n        item.value = item.value - (props.yAxisOffset ?? 0);\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n\n  const scrollToEnd = props.scrollToEnd ?? LineDefaults.scrollToEnd;\n  const scrollAnimation = props.scrollAnimation ?? LineDefaults.scrollAnimation;\n  const scrollEventThrottle =\n    props.scrollEventThrottle ?? LineDefaults.scrollEventThrottle;\n\n  const opacValue = useMemo(() => new Animated.Value(0), []);\n  const widthValue = useMemo(() => new Animated.Value(0), []);\n  const labelsExtraHeight = props.labelsExtraHeight || 0;\n\n  const animationDuration =\n    props.animationDuration || LineDefaults.animationDuration;\n\n  const startIndex1 = props.startIndex || 0;\n\n  let endIndex1;\n  if (props.endIndex === undefined || props.endIndex === null) {\n    endIndex1 = data.length - 1;\n  } else {\n    endIndex1 = props.endIndex;\n  }\n\n  if (!initialData) {\n    initialData = [...data];\n  }\n\n  const adjustToWidth = props.adjustToWidth || false;\n\n  const initialSpacing = props.initialSpacing ?? LineDefaults.initialSpacing;\n  const endSpacing =\n    props.endSpacing ?? (adjustToWidth ? 0 : LineDefaults.endSpacing);\n  const thickness = props.thickness || LineDefaults.thickness;\n\n  const spacing =\n    props.spacing ??\n    (adjustToWidth\n      ? ((props.width || AxesAndRulesDefaults.width) - initialSpacing) /\n        data.length\n      : LineDefaults.spacing);\n\n  const xAxisThickness =\n    props.xAxisThickness ?? AxesAndRulesDefaults.xAxisThickness;\n  const dataPointsHeight1 =\n    props.dataPointsHeight ?? LineDefaults.dataPointsHeight;\n  const dataPointsWidth1 =\n    props.dataPointsWidth ?? LineDefaults.dataPointsWidth;\n  const dataPointsRadius1 =\n    props.dataPointsRadius ?? LineDefaults.dataPointsRadius;\n  const dataPointsColor1 =\n    props.dataPointsColor ?? LineDefaults.dataPointsColor;\n  const dataPointsShape1 =\n    props.dataPointsShape ?? LineDefaults.dataPointsShape;\n\n  const labelsAppear = useCallback(() => {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false,\n    }).start();\n  }, [opacValue]);\n\n  const appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n  });\n\n  const decreaseWidth = useCallback(() => {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start();\n  }, [animationDuration, widthValue]);\n\n  const areaChart = props.areaChart || false;\n  const textFontSize1 = props.textFontSize || LineDefaults.textFontSize;\n  const textColor1 = props.textColor || LineDefaults.textColor;\n\n  let totalWidth = initialSpacing;\n  let maxItem = 0,\n    minItem = 0;\n  data.forEach((item: itemType) => {\n    if (item.value > maxItem) {\n      maxItem = item.value;\n    }\n    if (item.value < minItem) {\n      minItem = item.value;\n    }\n    totalWidth += spacing;\n  });\n\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - (maxItem % 10));\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n\n    if (minItem !== 0) {\n      minItem *= 10 * (props.roundToDigits || 1);\n      minItem = minItem - (10 + (minItem % 10));\n      minItem /= 10 * (props.roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(props.roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - (maxItem % 10));\n    if (minItem !== 0) {\n      minItem = minItem - (10 + (minItem % 10));\n    }\n  }\n\n  const maxValue = props.maxValue || maxItem;\n  const mostNegativeValue = props.mostNegativeValue || minItem;\n\n  useEffect(() => {\n    decreaseWidth();\n    labelsAppear();\n  }, [animationDuration, decreaseWidth, labelsAppear]);\n\n  const extendedContainerHeight = getExtendedContainerHeightWithPadding(\n    containerHeight,\n    props.overflowTop,\n  );\n\n  let yAtxAxis = extendedContainerHeight - xAxisThickness / 2;\n  const getX = index => initialSpacing + spacing * index;\n  const getY = index =>\n    yAtxAxis - (data[index].value * containerHeight) / maxValue;\n\n  useEffect(() => {\n    let ppArray: Array<Points> = [];\n    let pp = 'M' + initialSpacing + ' ' + getY(0),\n      prevValuev,\n      nextValue;\n    for (let i = 0; i < data.length - 1; i++) {\n      prevValuev = data[i].value;\n      nextValue = data[i + 1].value;\n\n      if (prevValuev < 0 && nextValue < 0) {\n        pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n      } else if (prevValuev < 0 && nextValue > 0) {\n        pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n        let prevX = getX(i);\n        let prevY = getY(i);\n        let nextX = getX(i + 1);\n        let nextY = getY(i + 1);\n        let slope = (nextY - prevY) / (nextX - prevX);\n        let x = (yAtxAxis - prevY) / slope + prevX;\n        pp += 'L' + (x - thickness / 2) + ' ' + yAtxAxis + ' ';\n\n        let pointsOb = {\n          points: pp.startsWith('L') ? pp.replace('L', 'M') : pp,\n          color: 'red',\n        };\n        ppArray.push(pointsOb);\n        setPointsArray([...ppArray]);\n        pp = 'M' + x + ' ' + yAtxAxis + ' L' + nextX + ' ' + nextY + ' ';\n        pointsOb = {\n          points: pp,\n          color: 'green',\n        };\n        ppArray.push(pointsOb);\n      } else if (prevValuev > 0 && nextValue < 0) {\n        pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n        let prevX = getX(i);\n        let prevY = getY(i);\n        let nextX = getX(i + 1);\n        let nextY = getY(i + 1);\n        let slope = (nextY - prevY) / (nextX - prevX);\n\n        let x = (yAtxAxis - prevY) / slope + prevX;\n        pp += 'L' + (x - thickness / 2) + ' ' + yAtxAxis + ' ';\n\n        let pointsOb = {\n          points: pp.startsWith('L') ? pp.replace('L', 'M') : pp,\n          color: 'green',\n        };\n        ppArray.push(pointsOb);\n        setPointsArray([...ppArray]);\n        pp = 'M' + x + ' ' + yAtxAxis + ' L' + nextX + ' ' + nextY + ' ';\n        pointsOb = {\n          points: pp,\n          color: 'red',\n        };\n        ppArray.push(pointsOb);\n      } else {\n        pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n      }\n    }\n    let i = data.length - 1;\n    prevValuev = data[i - 1].value;\n    nextValue = data[i].value;\n    if (\n      (prevValuev > 0 && nextValue > 0) ||\n      (prevValuev < 0 && nextValue < 0)\n    ) {\n      pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n    }\n    let pointsOb = {\n      points: pp.startsWith('L') ? pp.replace('L', 'M') : pp,\n      color: nextValue > 0 ? 'green' : 'red',\n    };\n    ppArray.push(pointsOb);\n    setPointsArray([...ppArray]);\n\n    /***************************          For Area Charts          *************************/\n\n    let startIndex = -1,\n      endIndex = -1,\n      startX,\n      startY,\n      endY,\n      color = 'green',\n      localArray: Array<Points> = [],\n      broken = false;\n\n    pp = 'M' + initialSpacing + ' ' + yAtxAxis;\n    for (i = 0; i < data.length - 1; i++) {\n      prevValuev = data[i].value;\n      nextValue = data[i + 1].value;\n      pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n      if (\n        (prevValuev > 0 && nextValue < 0) ||\n        (prevValuev < 0 && nextValue > 0)\n      ) {\n        let prevX = getX(i);\n        let prevY = getY(i);\n        let nextX = getX(i + 1);\n        let nextY = getY(i + 1);\n        let slope = (nextY - prevY) / (nextX - prevX);\n\n        let x = (yAtxAxis - prevY) / slope + prevX;\n        pp += 'L' + (x - thickness / 2) + ' ' + yAtxAxis + ' ';\n        broken = true;\n        break;\n      }\n    }\n    if (!broken) {\n      i = data.length - 1;\n      pp +=\n        'L' +\n        getX(i) +\n        ' ' +\n        getY(i) +\n        ' L' +\n        getX(i) +\n        ' ' +\n        (yAtxAxis - xAxisThickness / 2);\n    }\n    localArray.push({points: pp, color: data[0].value >= 0 ? 'green' : 'red'});\n\n    let xs: Array<string> = [];\n    data.forEach((item, index) => {\n      let x = getX(index);\n      xs.push(x + '');\n    });\n\n    pointsArray.forEach((item: any, index) => {\n      let splitArray = item.points\n        .split(' ')\n        .filter(spItem => spItem && spItem !== ' ');\n\n      if (\n        splitArray[1] === yAtxAxis + '' &&\n        !xs.includes(splitArray[0].replace('M', '').replace('L', ''))\n      ) {\n        startIndex = index;\n        startX = splitArray[0].replace('M', '').replace('L', '');\n        if (splitArray.length > 3) {\n          startY = splitArray[1].replace('M', '').replace('L', '');\n          endY = splitArray[3].replace('M', '').replace('L', '');\n          if (Number(startY) < Number(endY)) {\n            color = 'red';\n          } else {\n            color = 'green';\n          }\n        }\n      }\n      if (\n        splitArray[splitArray.length - 1] === yAtxAxis + '' &&\n        !xs.includes(\n          splitArray[splitArray.length - 2].replace('M', '').replace('L', ''),\n        )\n      ) {\n        endIndex = index;\n      }\n      if (startX) {\n        let filPts = '';\n        for (let j = startIndex; j <= endIndex; j++) {\n          if (pointsArray[j]) {\n            filPts += pointsArray[j].points.replaceAll('M', 'L');\n          }\n        }\n        filPts += 'L ' + startX + ' ' + yAtxAxis;\n        localArray.push({points: filPts.replace('L', 'M'), color});\n      }\n    });\n    if (broken) {\n      pp = 'M' + getX(data.length - 1) + ' ' + yAtxAxis;\n      for (let i = data.length - 1; i > 0; i--) {\n        prevValuev = data[i].value;\n        nextValue = data[i - 1].value;\n        pp += 'L' + getX(i) + ' ' + getY(i) + ' ';\n        if (\n          (prevValuev > 0 && nextValue < 0) ||\n          (prevValuev < 0 && nextValue > 0)\n        ) {\n          let prevX = getX(i);\n          let prevY = getY(i);\n          let nextX = getX(i - 1);\n          let nextY = getY(i - 1);\n          let slope = (nextY - prevY) / (nextX - prevX);\n\n          let x = (yAtxAxis - prevY) / slope + prevX;\n          pp += 'L' + x + ' ' + yAtxAxis + ' ';\n          break;\n        }\n      }\n\n      localArray.push({\n        points: pp,\n        color: data[data.length - 1].value > 0 ? 'green' : 'red',\n      });\n    }\n\n    setFillPointsArray([...localArray]);\n    setToggle(true);\n  }, [\n    areaChart,\n    containerHeight,\n    data,\n    dataPointsWidth1,\n    initialSpacing,\n    spacing,\n    xAxisThickness,\n    toggle,\n    maxValue,\n  ]);\n\n  const horizSections = [{value: '0'}];\n  const stepHeight = props.stepHeight || containerHeight / noOfSections;\n  const stepValue = props.stepValue || maxValue / noOfSections;\n  const noOfSectionsBelowXAxis =\n    props.noOfSectionsBelowXAxis || -mostNegativeValue / stepValue;\n  const thickness1 = props.thickness || LineDefaults.thickness;\n  const zIndex = props.zIndex || 0;\n\n  const strokeDashArray1 = props.strokeDashArray;\n\n  const rotateLabel = props.rotateLabel ?? AxesAndRulesDefaults.rotateLabel;\n  const isAnimated = props.isAnimated ?? LineDefaults.isAnimated;\n  const hideDataPoints1 = props.hideDataPoints ?? LineDefaults.hideDataPoints;\n\n  const color = props.color || 'green';\n  const colorNegative = props.colorNegative || 'red';\n\n  const startFillColor = props.startFillColor || 'lightgreen';\n  const endFillColor = props.endFillColor || 'white';\n  const startOpacity = props.startOpacity ?? LineDefaults.startOpacity;\n  const endOpacity = props.endOpacity ?? LineDefaults.endOpacity;\n  const startFillColorNegative = props.startFillColorNegative || 'pink';\n  const endFillColorNegative = props.endFillColorNegative || 'white';\n  const startOpacityNegative =\n    props.startOpacityNegative ?? LineDefaults.startOpacity;\n  const endOpacityNegative =\n    props.endOpacityNegative ?? LineDefaults.endOpacity;\n\n  const gradientDirection = props.gradientDirection || 'vertical';\n\n  const showXAxisIndices =\n    props.showXAxisIndices ?? AxesAndRulesDefaults.showXAxisIndices;\n  const xAxisIndicesHeight =\n    props.xAxisIndicesHeight ?? AxesAndRulesDefaults.xAxisIndicesHeight;\n  const xAxisIndicesWidth =\n    props.xAxisIndicesWidth ?? AxesAndRulesDefaults.xAxisIndicesWidth;\n  const xAxisIndicesColor =\n    props.xAxisIndicesColor ?? AxesAndRulesDefaults.xAxisIndicesColor;\n\n  const xAxisTextNumberOfLines =\n    props.xAxisTextNumberOfLines ?? AxesAndRulesDefaults.xAxisTextNumberOfLines;\n  const horizontalRulesStyle = props.horizontalRulesStyle;\n  const showFractionalValues =\n    props.showFractionalValues ?? AxesAndRulesDefaults.showFractionalValues;\n  const yAxisLabelWidth =\n    props.yAxisLabelWidth ??\n    (props.hideYAxisText\n      ? AxesAndRulesDefaults.yAxisEmptyLabelWidth\n      : AxesAndRulesDefaults.yAxisLabelWidth);\n\n  const horizontal = false;\n  const yAxisAtTop = false;\n\n  const disableScroll = props.disableScroll ?? LineDefaults.disableScroll;\n  const showScrollIndicator =\n    props.showScrollIndicator || LineDefaults.showScrollIndicator;\n\n  const focusEnabled = props.focusEnabled ?? LineDefaults.focusEnabled;\n  const showDataPointOnFocus =\n    props.showDataPointOnFocus ?? LineDefaults.showDataPointOnFocus;\n  const showStripOnFocus =\n    props.showStripOnFocus ?? LineDefaults.showStripOnFocus;\n  const showTextOnFocus = props.showTextOnFocus ?? LineDefaults.showTextOnFocus;\n  const stripHeight = props.stripHeight;\n  const stripWidth = props.stripWidth ?? LineDefaults.stripWidth;\n  const stripColor = props.stripColor ?? color;\n  const stripOpacity = props.stripOpacity ?? (startOpacity + endOpacity) / 2;\n  const unFocusOnPressOut =\n    props.unFocusOnPressOut ?? LineDefaults.unFocusOnPressOut;\n  const delayBeforeUnFocus =\n    props.delayBeforeUnFocus ?? LineDefaults.delayBeforeUnFocus;\n\n  horizSections.pop();\n  for (let i = 0; i <= noOfSections; i++) {\n    let value = maxValue - stepValue * i;\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n    horizSections.push({\n      value: props.yAxisLabelTexts\n        ? props.yAxisLabelTexts[noOfSections - i] ?? value.toString()\n        : value.toString(),\n    });\n  }\n\n  const renderLabel = (\n    index: number,\n    label: String,\n    labelTextStyle: any,\n    labelComponent?: Function,\n  ) => {\n    return (\n      <View\n        style={[\n          {\n            position: 'absolute',\n            bottom: 30,\n            zIndex: 10,\n            width: spacing + labelsExtraHeight,\n            left:\n              index === 0 && initialSpacing < 10\n                ? getX(index) - spacing / 2 + 8\n                : getX(index) - spacing / 2,\n            justifyContent: 'center',\n          },\n          rotateLabel && {transform: [{rotate: '60deg'}]},\n        ]}>\n        {labelComponent ? (\n          labelComponent()\n        ) : (\n          <Text\n            style={labelTextStyle || {textAlign: 'center'}}\n            numberOfLines={xAxisTextNumberOfLines}>\n            {label || ''}\n          </Text>\n        )}\n      </View>\n    );\n  };\n\n  const renderAnimatedLabel = (\n    index: number,\n    label: String,\n    labelTextStyle: any,\n    labelComponent?: Function,\n  ) => {\n    return (\n      <Animated.View\n        style={[\n          {\n            height: rotateLabel ? 40 : 20,\n            // backgroundColor: 'yellow',\n            position: 'absolute',\n            bottom: rotateLabel ? 10 : 30,\n            zIndex: 10,\n            width: spacing,\n            left:\n              index === 0 && initialSpacing < 10\n                ? getX(index) - spacing / 2 + 8\n                : getX(index) - spacing / 2,\n            opacity: appearingOpacity,\n          },\n          rotateLabel && {transform: [{rotate: '60deg'}]},\n        ]}>\n        {labelComponent ? (\n          labelComponent()\n        ) : (\n          <Text\n            style={labelTextStyle || {textAlign: 'center'}}\n            numberOfLines={xAxisTextNumberOfLines}>\n            {label || ''}\n          </Text>\n        )}\n      </Animated.View>\n    );\n  };\n\n  const animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth],\n  });\n\n  const onStripPress = (item, index) => {\n    setSelectedIndex(index);\n    if (props.onFocus) {\n      props.onFocus(item, index);\n    }\n  };\n\n  const renderDataPoints = (\n    dataForRender,\n    dataPtsShape,\n    dataPtsWidth,\n    dataPtsHeight,\n    dataPtsColor,\n    dataPtsRadius,\n    textColor,\n    textFontSize,\n    startIndex,\n    endIndex,\n  ) => {\n    return dataForRender.map((item: itemType, index: number) => {\n      if (index < startIndex || index > endIndex) return null;\n      if (item.hideDataPoint) {\n        return null;\n      }\n      let dataPointsShape,\n        dataPointsWidth,\n        dataPointsHeight,\n        dataPointsColor,\n        dataPointsRadius,\n        text,\n        customDataPoint,\n        dataPointLabelComponent;\n      if (index === selectedIndex) {\n        dataPointsShape =\n          item.focusedDataPointShape ||\n          props.focusedDataPointShape ||\n          item.dataPointShape ||\n          dataPtsShape;\n        dataPointsWidth =\n          item.focusedDataPointWidth ||\n          props.focusedDataPointWidth ||\n          item.dataPointWidth ||\n          dataPtsWidth;\n        dataPointsHeight =\n          item.focusedDataPointHeight ||\n          props.focusedDataPointHeight ||\n          item.dataPointHeight ||\n          dataPtsHeight;\n        dataPointsColor =\n          item.focusedDataPointColor || props.focusedDataPointColor || 'orange';\n        dataPointsRadius =\n          item.focusedDataPointRadius ||\n          props.focusedDataPointRadius ||\n          item.dataPointRadius ||\n          dataPtsRadius;\n        if (showTextOnFocus) {\n          text = item.dataPointText;\n        }\n        customDataPoint =\n          item.focusedCustomDataPoint ||\n          props.focusedCustomDataPoint ||\n          item.customDataPoint ||\n          props.customDataPoint;\n        dataPointLabelComponent =\n          item.focusedDataPointLabelComponent || item.dataPointLabelComponent;\n      } else {\n        dataPointsShape = item.dataPointShape || dataPtsShape;\n        dataPointsWidth = item.dataPointWidth || dataPtsWidth;\n        dataPointsHeight = item.dataPointHeight || dataPtsHeight;\n        dataPointsColor = item.dataPointColor || dataPtsColor;\n        dataPointsRadius = item.dataPointRadius || dataPtsRadius;\n        if (showTextOnFocus) {\n          text = '';\n        }\n        customDataPoint = item.customDataPoint || props.customDataPoint;\n        dataPointLabelComponent = item.dataPointLabelComponent;\n      }\n\n      const currentStripHeight = item.stripHeight ?? stripHeight;\n      const currentStripWidth = item.stripWidth ?? stripWidth;\n      const currentStripOpacity = item.stripOpacity ?? stripOpacity;\n      const currentStripColor = item.stripColor || stripColor;\n\n      return (\n        <Fragment key={index}>\n          {focusEnabled ? (\n            <>\n              {unFocusOnPressOut ? (\n                <Rect\n                  onPressIn={() => onStripPress(item, index)}\n                  onPressOut={() =>\n                    setTimeout(() => setSelectedIndex(-1), delayBeforeUnFocus)\n                  }\n                  x={initialSpacing + (spacing * index - spacing / 2)}\n                  y={8}\n                  width={spacing}\n                  height={containerHeight}\n                  fill={'none'}\n                />\n              ) : (\n                <Rect\n                  onPress={() => onStripPress(item, index)}\n                  x={initialSpacing + (spacing * index - spacing / 2)}\n                  y={8}\n                  width={spacing}\n                  height={containerHeight}\n                  fill={'none'}\n                />\n              )}\n            </>\n          ) : null}\n          {item.showStrip ||\n          (focusEnabled && index === selectedIndex && showStripOnFocus) ? (\n            <Rect\n              x={initialSpacing + (spacing * index - dataPointsWidth / 2)}\n              y={\n                currentStripHeight\n                  ? containerHeight - currentStripHeight + 8\n                  : containerHeight -\n                    dataPointsHeight / 2 +\n                    20 -\n                    (item.value * containerHeight) / maxValue\n              }\n              width={currentStripWidth}\n              height={\n                currentStripHeight ||\n                containerHeight - dataPointsHeight / 2 + 20\n              }\n              opacity={currentStripOpacity}\n              fill={currentStripColor}\n            />\n          ) : null}\n          {customDataPoint ? (\n            <View\n              style={[\n                styles.customDataPointContainer,\n                {\n                  height: dataPointsHeight,\n                  width: dataPointsWidth,\n                  top:\n                    containerHeight - (item.value * containerHeight) / maxValue,\n                  left: getX(index) - dataPointsWidth,\n                },\n              ]}>\n              {customDataPoint()}\n            </View>\n          ) : null}\n          {dataPointsShape === 'rectangular' ? (\n            <Fragment key={index}>\n              {customDataPoint ? null : (\n                <Rect\n                  x={getX(index) - dataPointsWidth}\n                  y={\n                    extendedContainerHeight +\n                    dataPointsHeight / 2 -\n                    (item.value * containerHeight) / maxValue\n                  }\n                  width={dataPointsWidth}\n                  height={dataPointsHeight}\n                  fill={\n                    showDataPointOnFocus\n                      ? index === selectedIndex\n                        ? dataPointsColor\n                        : 'none'\n                      : dataPointsColor\n                  }\n                  onPress={() => {\n                    item.onPress\n                      ? item.onPress(item, index)\n                      : props.onPress\n                      ? props.onPress(item, index)\n                      : null;\n                  }}\n                />\n              )}\n            </Fragment>\n          ) : (\n            <Fragment key={index}>\n              {customDataPoint ? null : (\n                <Circle\n                  cx={getX(index)}\n                  cy={getY(index)}\n                  r={dataPointsRadius}\n                  fill={\n                    showDataPointOnFocus\n                      ? index === selectedIndex\n                        ? dataPointsColor\n                        : 'none'\n                      : dataPointsColor\n                  }\n                  onPress={() => {\n                    item.onPress\n                      ? item.onPress(item, index)\n                      : props.onPress\n                      ? props.onPress(item, index)\n                      : null;\n                  }}\n                />\n              )}\n            </Fragment>\n          )}\n          {dataPointLabelComponent ? (\n            !showTextOnFocus || index === selectedIndex ? (\n              <View\n                style={[\n                  styles.customDataPointContainer,\n                  {\n                    top:\n                      containerHeight +\n                      (item.dataPointLabelShiftY ||\n                        props.dataPointLabelShiftY ||\n                        0) -\n                      (item.value * containerHeight) / maxValue,\n                    left:\n                      initialSpacing +\n                      (item.dataPointLabelShiftX ||\n                        props.dataPointLabelShiftX ||\n                        0) -\n                      (item.dataPointLabelWidth\n                        ? item.dataPointLabelWidth + 20\n                        : props.dataPointLabelWidth\n                        ? props.dataPointLabelWidth + 20\n                        : 50) /\n                        2 +\n                      spacing * index,\n                  },\n                ]}>\n                {dataPointLabelComponent()}\n              </View>\n            ) : null\n          ) : text || item.dataPointText ? (\n            !showTextOnFocus || index === selectedIndex ? (\n              <CanvasText\n                fill={item.textColor || textColor}\n                fontSize={item.textFontSize || textFontSize}\n                x={\n                  initialSpacing -\n                  dataPointsWidth +\n                  spacing * index +\n                  (item.textShiftX || props.textShiftX || 0)\n                }\n                y={\n                  extendedContainerHeight -\n                  dataPointsHeight / 2 -\n                  (item.value * containerHeight) / maxValue +\n                  (item.textShiftY || props.textShiftY || 0)\n                }>\n                {!showTextOnFocus ? item.dataPointText : text}\n              </CanvasText>\n            ) : null\n          ) : null}\n        </Fragment>\n      );\n    });\n  };\n\n  const renderSpecificVerticalLines = (dataForRender: any) => {\n    return dataForRender.map((item: itemType, index: number) => {\n      if (item.showVerticalLine) {\n        return (\n          <Rect\n            key={index}\n            x={\n              initialSpacing -\n              (item.verticalLineThickness || 1) / 2 -\n              1 +\n              spacing * index\n            }\n            y={\n              item.verticalLineUptoDataPoint\n                ? containerHeight -\n                  (item.value * containerHeight) / maxValue +\n                  10\n                : -xAxisThickness\n            }\n            width={item.verticalLineThickness || 1}\n            height={\n              item.verticalLineUptoDataPoint\n                ? (item.value * containerHeight) / maxValue - xAxisThickness\n                : containerHeight + 10 - xAxisThickness\n            }\n            fill={item.verticalLineColor || 'lightgray'}\n          />\n        );\n      }\n      return null;\n    });\n  };\n\n  const lineSvgComponent = (\n    pointsArray: any,\n    currentLineThickness: number | undefined,\n    color: string,\n    startFillColor: string,\n    endFillColor: string,\n    startOpacity: number,\n    endOpacity: number,\n    strokeDashArray: Array<number> | undefined | null,\n  ) => {\n    return (\n      <Svg>\n        {strokeDashArray &&\n        strokeDashArray.length === 2 &&\n        typeof strokeDashArray[0] === 'number' &&\n        typeof strokeDashArray[1] === 'number'\n          ? pointsArray.map((points, index) => (\n              <Path\n                key={index}\n                d={points.points}\n                fill=\"none\"\n                stroke={points.color === 'green' ? color : colorNegative}\n                strokeWidth={currentLineThickness || thickness}\n                strokeDasharray={strokeDashArray}\n              />\n            ))\n          : pointsArray.map((points, index) => {\n              return (\n                <Path\n                  key={index}\n                  d={points.points}\n                  fill=\"none\"\n                  stroke={points.color === 'green' ? color : colorNegative}\n                  strokeWidth={currentLineThickness || thickness}\n                />\n              );\n            })}\n\n        {/***********************      For Area Chart        ************/}\n\n        {areaChart && (\n          <>\n            <LinearGradient\n              id=\"Gradient\"\n              x1=\"0\"\n              y1=\"0\"\n              x2={gradientDirection === 'horizontal' ? '1' : '0'}\n              y2={gradientDirection === 'vertical' ? '1' : '0'}>\n              <Stop\n                offset=\"0\"\n                stopColor={startFillColor}\n                stopOpacity={startOpacity.toString()}\n              />\n              <Stop\n                offset=\"1\"\n                stopColor={endFillColor}\n                stopOpacity={endOpacity.toString()}\n              />\n            </LinearGradient>\n            <LinearGradient\n              id=\"GradientNegative\"\n              x1=\"0\"\n              y1=\"0\"\n              x2={gradientDirection === 'horizontal' ? '1' : '0'}\n              y2={gradientDirection === 'vertical' ? '1' : '0'}>\n              <Stop\n                offset=\"1\"\n                stopColor={startFillColorNegative}\n                stopOpacity={startOpacityNegative.toString()}\n              />\n              <Stop\n                offset=\"0\"\n                stopColor={endFillColorNegative}\n                stopOpacity={endOpacityNegative.toString()}\n              />\n            </LinearGradient>\n          </>\n        )}\n        {areaChart\n          ? fillPointsArray.map((item, index) => {\n              return (\n                <Path\n                  key={index}\n                  d={item.points}\n                  fill={\n                    item.color === 'green'\n                      ? 'url(#Gradient)'\n                      : 'url(#GradientNegative)'\n                  }\n                  stroke={'transparent'}\n                  strokeWidth={currentLineThickness || thickness}\n                />\n              );\n            })\n          : null}\n\n        {/******************************************************************/}\n\n        {renderSpecificVerticalLines(data)}\n\n        {/***  !!! Here it's done thrice intentionally, trying to make it to only 1 breaks things !!!  ***/}\n        {!hideDataPoints1\n          ? renderDataPoints(\n              data,\n              dataPointsShape1,\n              dataPointsWidth1,\n              dataPointsHeight1,\n              dataPointsColor1,\n              dataPointsRadius1,\n              textColor1,\n              textFontSize1,\n              startIndex1,\n              endIndex1,\n            )\n          : null}\n      </Svg>\n    );\n  };\n\n  const renderLine = (\n    zIndex: number,\n    pointsArray: any,\n    currentLineThickness: number | undefined,\n    color: string,\n    startFillColor: string,\n    endFillColor: string,\n    startOpacity: number,\n    endOpacity: number,\n    strokeDashArray: Array<number> | undefined | null,\n  ) => {\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          height: extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight,\n          bottom: 60 + labelsExtraHeight,\n          width: totalWidth,\n          zIndex: zIndex,\n        }}>\n        {pointsArray.length\n          ? lineSvgComponent(\n              pointsArray,\n              currentLineThickness,\n              color,\n              startFillColor,\n              endFillColor,\n              startOpacity,\n              endOpacity,\n              strokeDashArray,\n            )\n          : null}\n      </View>\n    );\n  };\n\n  const renderAnimatedLine = (\n    zIndex: number,\n    points: any,\n    animatedWidth: any,\n    currentLineThickness: number | undefined,\n    color: string,\n    startFillColor: string,\n    endFillColor: string,\n    startOpacity: number,\n    endOpacity: number,\n    strokeDashArray: Array<number> | undefined | null,\n  ) => {\n    return (\n      <Animated.View\n        style={{\n          position: 'absolute',\n          height: extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight,\n          bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n          width: animatedWidth,\n          zIndex: zIndex,\n          // backgroundColor: 'wheat',\n        }}>\n        {lineSvgComponent(\n          points,\n          currentLineThickness,\n          color,\n          startFillColor,\n          endFillColor,\n          startOpacity,\n          endOpacity,\n          strokeDashArray,\n        )}\n      </Animated.View>\n    );\n  };\n\n  const renderChartContent = () => {\n    return (\n      <>\n        {isAnimated\n          ? renderAnimatedLine(\n              zIndex,\n              pointsArray,\n              animatedWidth,\n              thickness1,\n              color,\n              startFillColor,\n              endFillColor,\n              startOpacity,\n              endOpacity,\n              strokeDashArray1,\n            )\n          : renderLine(\n              zIndex,\n              pointsArray,\n              thickness1,\n              color,\n              startFillColor,\n              endFillColor,\n              startOpacity,\n              endOpacity,\n              strokeDashArray1,\n            )}\n        {data.map((item: itemType, index: number) => {\n          return (\n            <View key={index}>\n              {isAnimated\n                ? renderAnimatedLabel(\n                    index,\n                    item.label ||\n                      (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n                        ? props.xAxisLabelTexts[index]\n                        : ''),\n                    item.labelTextStyle || props.xAxisLabelTextStyle,\n                    item.labelComponent,\n                  )\n                : renderLabel(\n                    index,\n                    item.label ||\n                      (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n                        ? props.xAxisLabelTexts[index]\n                        : ''),\n                    item.labelTextStyle || props.xAxisLabelTextStyle,\n                    item.labelComponent,\n                  )}\n              {/* {renderLabel(index, item.label, item.labelTextStyle)} */}\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  const barAndLineChartsWrapperProps: BarAndLineChartsWrapperTypes = {\n    chartType: chartTypes.LINE_BI_COLOR,\n    containerHeight,\n    noOfSectionsBelowXAxis,\n    stepHeight,\n    labelsExtraHeight,\n    yAxisLabelWidth,\n    horizontal,\n    rtl: false,\n    shiftX: 0,\n    shiftY: 0,\n    scrollRef,\n    yAxisAtTop,\n    initialSpacing,\n    data,\n    stackData: undefined, // Not needed but passing this prop to maintain consistency (between LineChart and BarChart props)\n    secondaryData: [],\n    barWidth: 0, // Not needed but passing this prop to maintain consistency (between LineChart and BarChart props)\n    xAxisThickness,\n    totalWidth,\n    disableScroll,\n    showScrollIndicator,\n    scrollToEnd,\n    scrollToIndex: props.scrollToIndex,\n    scrollAnimation,\n    scrollEventThrottle,\n    indicatorColor: props.indicatorColor,\n    setSelectedIndex,\n    spacing,\n    showLine: false,\n    lineConfig: null,\n    maxValue,\n    lineData: [], // Not needed but passing this prop to maintain consistency (between LineChart and BarChart props)\n    animatedWidth,\n    lineBehindBars: false,\n    points: pointsArray,\n    arrowPoints: [], // Not needed but passing this prop to maintain consistency (between LineChart and BarChart props)\n    renderChartContent,\n    remainingScrollViewProps: {},\n\n    //horizSectionProps-\n    width: props.width,\n    horizSections,\n    endSpacing,\n    horizontalRulesStyle,\n    noOfSections,\n    showFractionalValues,\n\n    axesAndRulesProps: getAxesAndRulesProps(props, stepValue, undefined),\n\n    yAxisLabelTexts: props.yAxisLabelTexts,\n    yAxisOffset: props.yAxisOffset,\n    rotateYAxisTexts: 0,\n    hideAxesAndRules: props.hideAxesAndRules,\n\n    showXAxisIndices,\n    xAxisIndicesHeight,\n    xAxisIndicesWidth,\n    xAxisIndicesColor,\n\n    // These are Not needed but passing this prop to maintain consistency (between LineChart and BarChart props)\n    pointerConfig: null,\n    getPointerProps: null,\n    pointerIndex: 0,\n    pointerX: 0,\n    pointerY: 0,\n  };\n\n  return <BarAndLineChartsWrapper {...barAndLineChartsWrapperProps} />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}