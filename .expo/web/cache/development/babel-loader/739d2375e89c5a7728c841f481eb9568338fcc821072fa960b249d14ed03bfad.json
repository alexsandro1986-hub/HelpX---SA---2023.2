{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\nimport { ruleTypes } from \"../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Rule(props) {\n  var _props$config = props.config,\n    thickness = _props$config.thickness,\n    width = _props$config.width,\n    color = _props$config.color,\n    type = _props$config.type,\n    dashWidth = _props$config.dashWidth,\n    dashGap = _props$config.dashGap;\n  if (type === ruleTypes.SOLID) {\n    return _jsx(Svg, _objectSpread(_objectSpread({\n      height: thickness,\n      width: width\n    }, props), {}, {\n      children: _jsx(G, {\n        fill: \"lightgray\",\n        stroke: color,\n        strokeWidth: thickness,\n        children: _jsx(Path, {\n          d: \"M0 \" + thickness / 2 + \"h\" + width\n        })\n      })\n    }));\n  }\n  return _jsx(Svg, _objectSpread(_objectSpread({\n    height: thickness,\n    width: width\n  }, props), {}, {\n    children: _jsx(G, {\n      fill: \"lightgray\",\n      stroke: color,\n      strokeWidth: thickness,\n      children: _jsx(Path, {\n        strokeDasharray: dashWidth + \",\" + dashGap,\n        d: \"M0 \" + thickness / 2 + \"h\" + width\n      })\n    })\n  }));\n}\nexport default Rule;","map":{"version":3,"names":["React","Svg","G","Path","ruleTypes","jsx","_jsx","Rule","props","_props$config","config","thickness","width","color","type","dashWidth","dashGap","SOLID","_objectSpread","height","children","fill","stroke","strokeWidth","d","strokeDasharray"],"sources":["C:/Users/gisele_anjos/Documents/sa.ReactNative2semestre/node_modules/react-native-gifted-charts/src/Components/lineSvg.tsx"],"sourcesContent":["import * as React from 'react';\nimport {ColorValue} from 'react-native';\nimport Svg, {G, Path} from 'react-native-svg';\nimport { ruleTypes } from '../utils/constants';\n\ntype ruleProps = {\n  thickness: number;\n  width: number;\n  color: ColorValue | String | any;\n  type: String;\n  dashWidth: number;\n  dashGap: number;\n};\n\ntype configType = {\n  config: ruleProps;\n};\n\nfunction Rule(props: configType) {\n  const {thickness, width, color, type, dashWidth, dashGap} = props.config;\n  if (type === ruleTypes.SOLID) {\n    return (\n      <Svg height={thickness} width={width} {...props}>\n        <G fill=\"lightgray\" stroke={color} strokeWidth={thickness}>\n          <Path d={`M0 ${thickness / 2}h${width}`} />\n        </G>\n      </Svg>\n    );\n  }\n  return (\n    <Svg height={thickness} width={width} {...props}>\n      <G fill=\"lightgray\" stroke={color} strokeWidth={thickness}>\n        <Path\n          strokeDasharray={`${dashWidth},${dashGap}`}\n          d={`M0 ${thickness / 2}h${width}`}\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport default Rule;\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,GAAG,IAAGC,CAAC,EAAEC,IAAI,QAAO,kBAAkB;AAC7C,SAASC,SAAS;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAe/C,SAASC,IAAIA,CAACC,KAAiB,EAAE;EAC/B,IAAAC,aAAA,GAA4DD,KAAK,CAACE,MAAM;IAAjEC,SAAS,GAAAF,aAAA,CAATE,SAAS;IAAEC,KAAK,GAAAH,aAAA,CAALG,KAAK;IAAEC,KAAK,GAAAJ,aAAA,CAALI,KAAK;IAAEC,IAAI,GAAAL,aAAA,CAAJK,IAAI;IAAEC,SAAS,GAAAN,aAAA,CAATM,SAAS;IAAEC,OAAO,GAAAP,aAAA,CAAPO,OAAO;EACxD,IAAIF,IAAI,KAAKV,SAAS,CAACa,KAAK,EAAE;IAC5B,OACEX,IAAA,CAACL,GAAG,EAAAiB,aAAA,CAAAA,aAAA;MAACC,MAAM,EAAER,SAAU;MAACC,KAAK,EAAEA;IAAM,GAAKJ,KAAK;MAAAY,QAAA,EAC7Cd,IAAA,CAACJ,CAAC;QAACmB,IAAI,EAAC,WAAW;QAACC,MAAM,EAAET,KAAM;QAACU,WAAW,EAAEZ,SAAU;QAAAS,QAAA,EACxDd,IAAA,CAACH,IAAI;UAACqB,CAAC,UAAQb,SAAS,GAAG,CAAC,SAAIC;QAAQ,CAAE;MAAC,CAC1C;IAAC,EACD,CAAC;EAEV;EACA,OACEN,IAAA,CAACL,GAAG,EAAAiB,aAAA,CAAAA,aAAA;IAACC,MAAM,EAAER,SAAU;IAACC,KAAK,EAAEA;EAAM,GAAKJ,KAAK;IAAAY,QAAA,EAC7Cd,IAAA,CAACJ,CAAC;MAACmB,IAAI,EAAC,WAAW;MAACC,MAAM,EAAET,KAAM;MAACU,WAAW,EAAEZ,SAAU;MAAAS,QAAA,EACxDd,IAAA,CAACH,IAAI;QACHsB,eAAe,EAAKV,SAAS,SAAIC,OAAU;QAC3CQ,CAAC,UAAQb,SAAS,GAAG,CAAC,SAAIC;MAAQ,CACnC;IAAC,CACD;EAAC,EACD,CAAC;AAEV;AAEA,eAAeL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}