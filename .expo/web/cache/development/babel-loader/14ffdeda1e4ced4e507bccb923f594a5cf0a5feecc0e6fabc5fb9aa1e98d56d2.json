{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nimport { isLocaleRTL } from \"./isLocaleRTL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultLocale = {\n  direction: 'ltr',\n  locale: 'en-US'\n};\nvar LocaleContext = createContext(defaultLocale);\nexport function getLocaleDirection(locale) {\n  return isLocaleRTL(locale) ? 'rtl' : 'ltr';\n}\nexport function LocaleProvider(props) {\n  var direction = props.direction,\n    locale = props.locale,\n    children = props.children;\n  var needsContext = direction || locale;\n  return needsContext ? _jsx(LocaleContext.Provider, {\n    children: children,\n    value: {\n      direction: locale ? getLocaleDirection(locale) : direction,\n      locale: locale\n    }\n  }) : children;\n}\nexport function useLocaleContext() {\n  return useContext(LocaleContext);\n}","map":{"version":3,"names":["React","createContext","useContext","isLocaleRTL","jsx","_jsx","defaultLocale","direction","locale","LocaleContext","getLocaleDirection","LocaleProvider","props","children","needsContext","Provider","value","useLocaleContext"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-web/src/modules/useLocale/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nimport type { Node } from 'react';\n\nimport React, { createContext, useContext } from 'react';\nimport { isLocaleRTL } from './isLocaleRTL';\n\ntype Locale = string;\ntype WritingDirection = 'ltr' | 'rtl';\n\ntype LocaleValue = {\n  // Locale writing direction.\n  direction: WritingDirection,\n  // Locale BCP47 language code: https://www.ietf.org/rfc/bcp/bcp47.txt\n  locale: ?Locale\n};\n\ntype ProviderProps = {\n  ...LocaleValue,\n  children: any\n};\n\nconst defaultLocale = {\n  direction: 'ltr',\n  locale: 'en-US'\n};\n\nconst LocaleContext = createContext<LocaleValue>(defaultLocale);\n\nexport function getLocaleDirection(locale: Locale): WritingDirection {\n  return isLocaleRTL(locale) ? 'rtl' : 'ltr';\n}\n\nexport function LocaleProvider(props: ProviderProps): Node {\n  const { direction, locale, children } = props;\n  const needsContext = direction || locale;\n\n  return needsContext ? (\n    <LocaleContext.Provider\n      children={children}\n      value={{\n        direction: locale ? getLocaleDirection(locale) : direction,\n        locale\n      }}\n    />\n  ) : (\n    children\n  );\n}\n\nexport function useLocaleContext(): LocaleValue {\n  return useContext(LocaleContext);\n}\n"],"mappings":"AAWA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,WAAW;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAiB5C,IAAMC,aAAa,GAAG;EACpBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE;AACV,CAAC;AAED,IAAMC,aAAa,GAAGR,aAAa,CAAcK,aAAa,CAAC;AAE/D,OAAO,SAASI,kBAAkBA,CAACF,MAAc,EAAoB;EACnE,OAAOL,WAAW,CAACK,MAAM,CAAC,GAAG,KAAK,GAAG,KAAK;AAC5C;AAEA,OAAO,SAASG,cAAcA,CAACC,KAAoB,EAAQ;EACzD,IAAQL,SAAS,GAAuBK,KAAK,CAArCL,SAAS;IAAEC,MAAM,GAAeI,KAAK,CAA1BJ,MAAM;IAAEK,QAAQ,GAAKD,KAAK,CAAlBC,QAAQ;EACnC,IAAMC,YAAY,GAAGP,SAAS,IAAIC,MAAM;EAExC,OAAOM,YAAY,GACjBT,IAAA,CAACI,aAAa,CAACM,QAAQ;IACrBF,QAAQ,EAAEA,QAAS;IACnBG,KAAK,EAAE;MACLT,SAAS,EAAEC,MAAM,GAAGE,kBAAkB,CAACF,MAAM,CAAC,GAAGD,SAAS;MAC1DC,MAAM,EAANA;IACF;EAAE,CACH,CAAC,GAEFK,QACD;AACH;AAEA,OAAO,SAASI,gBAAgBA,CAAA,EAAgB;EAC9C,OAAOf,UAAU,CAACO,aAAa,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}