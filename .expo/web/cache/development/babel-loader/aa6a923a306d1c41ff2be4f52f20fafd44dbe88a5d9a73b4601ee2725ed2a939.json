{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _DialogActions = _interopRequireDefault(require(\"./DialogActions\"));\nvar _DialogContent = _interopRequireDefault(require(\"./DialogContent\"));\nvar _DialogIcon = _interopRequireDefault(require(\"./DialogIcon\"));\nvar _DialogScrollArea = _interopRequireDefault(require(\"./DialogScrollArea\"));\nvar _DialogTitle = _interopRequireDefault(require(\"./DialogTitle\"));\nvar _theming = require(\"../../core/theming\");\nvar _overlay = _interopRequireDefault(require(\"../../styles/overlay\"));\nvar _Modal = _interopRequireDefault(require(\"../Modal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar DIALOG_ELEVATION = 24;\nvar Dialog = function Dialog(_ref) {\n  var children = _ref.children,\n    _ref$dismissable = _ref.dismissable,\n    dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,\n    _ref$dismissableBackB = _ref.dismissableBackButton,\n    dismissableBackButton = _ref$dismissableBackB === void 0 ? dismissable : _ref$dismissableBackB,\n    onDismiss = _ref.onDismiss,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? false : _ref$visible,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    testID = _ref.testID;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var isV3 = theme.isV3,\n    dark = theme.dark,\n    mode = theme.mode,\n    colors = theme.colors,\n    roundness = theme.roundness;\n  var borderRadius = (isV3 ? 7 : 1) * roundness;\n  var backgroundColorV2 = dark && mode === 'adaptive' ? (0, _overlay.default)(DIALOG_ELEVATION, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface;\n  var backgroundColor = isV3 ? theme.colors.elevation.level3 : backgroundColorV2;\n  return React.createElement(_Modal.default, {\n    dismissable: dismissable,\n    dismissableBackButton: dismissableBackButton,\n    onDismiss: onDismiss,\n    visible: visible,\n    contentContainerStyle: [{\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor\n    }, styles.container, style],\n    theme: theme,\n    testID: testID\n  }, React.Children.toArray(children).filter(function (child) {\n    return child != null && typeof child !== 'boolean';\n  }).map(function (child, i) {\n    if (isV3) {\n      if (i === 0 && React.isValidElement(child)) {\n        return React.cloneElement(child, {\n          style: [{\n            marginTop: 24\n          }, child.props.style]\n        });\n      }\n    }\n    if (i === 0 && React.isValidElement(child) && child.type === _DialogContent.default) {\n      return React.cloneElement(child, {\n        style: [{\n          paddingTop: 24\n        }, child.props.style]\n      });\n    }\n    return child;\n  }));\n};\nDialog.Content = _DialogContent.default;\nDialog.Actions = _DialogActions.default;\nDialog.Title = _DialogTitle.default;\nDialog.ScrollArea = _DialogScrollArea.default;\nDialog.Icon = _DialogIcon.default;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginVertical: _reactNative.Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start'\n  }\n});\nvar _default = exports.default = Dialog;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_DialogActions","_interopRequireDefault","_DialogContent","_DialogIcon","_DialogScrollArea","_DialogTitle","_theming","_overlay","_Modal","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DIALOG_ELEVATION","Dialog","_ref","children","_ref$dismissable","dismissable","_ref$dismissableBackB","dismissableBackButton","onDismiss","_ref$visible","visible","style","themeOverrides","theme","testID","useInternalTheme","isV3","dark","mode","colors","roundness","borderRadius","backgroundColorV2","overlay","surface","backgroundColor","elevation","level3","createElement","Modal","contentContainerStyle","styles","container","Children","toArray","filter","child","map","i","isValidElement","cloneElement","marginTop","props","type","DialogContent","paddingTop","Content","Actions","DialogActions","Title","DialogTitle","ScrollArea","DialogScrollArea","Icon","DialogIcon","StyleSheet","create","marginVertical","Platform","OS","marginHorizontal","justifyContent","_default","exports"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\Dialog\\Dialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport DialogActions from './DialogActions';\nimport DialogContent from './DialogContent';\nimport DialogIcon from './DialogIcon';\nimport DialogScrollArea from './DialogScrollArea';\nimport DialogTitle from './DialogTitle';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport type { ThemeProp } from '../../types';\nimport Modal from '../Modal';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the dialog dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Determines whether clicking Android hardware back button dismiss dialog.\n   */\n  dismissableBackButton?: boolean;\n  /**\n   * Callback that is called when the user dismisses the dialog.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the dialog is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Dialog`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DIALOG_ELEVATION: number = 24;\n\n/**\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](../../Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Dialog, Portal, PaperProvider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showDialog = () => setVisible(true);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <PaperProvider>\n *       <View>\n *         <Button onPress={showDialog}>Show Dialog</Button>\n *         <Portal>\n *           <Dialog visible={visible} onDismiss={hideDialog}>\n *             <Dialog.Title>Alert</Dialog.Title>\n *             <Dialog.Content>\n *               <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *             </Dialog.Content>\n *             <Dialog.Actions>\n *               <Button onPress={hideDialog}>Done</Button>\n *             </Dialog.Actions>\n *           </Dialog>\n *         </Portal>\n *       </View>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Dialog = ({\n  children,\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  onDismiss,\n  visible = false,\n  style,\n  theme: themeOverrides,\n  testID,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, dark, mode, colors, roundness } = theme;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n\n  const backgroundColorV2 =\n    dark && mode === 'adaptive'\n      ? overlay(DIALOG_ELEVATION, colors?.surface)\n      : colors?.surface;\n  const backgroundColor = isV3\n    ? theme.colors.elevation.level3\n    : backgroundColorV2;\n\n  return (\n    <Modal\n      dismissable={dismissable}\n      dismissableBackButton={dismissableBackButton}\n      onDismiss={onDismiss}\n      visible={visible}\n      contentContainerStyle={[\n        {\n          borderRadius,\n          backgroundColor,\n        },\n        styles.container,\n        style,\n      ]}\n      theme={theme}\n      testID={testID}\n    >\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (isV3) {\n            if (i === 0 && React.isValidElement(child)) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [{ marginTop: 24 }, child.props.style],\n              });\n            }\n          }\n\n          if (\n            i === 0 &&\n            React.isValidElement(child) &&\n            child.type === DialogContent\n          ) {\n            // Dialog content is the first item, so we add a top padding\n            return React.cloneElement(child as React.ReactElement<any>, {\n              style: [{ paddingTop: 24 }, child.props.style],\n            });\n          }\n\n          return child;\n        })}\n    </Modal>\n  );\n};\n\n// @component ./DialogContent.tsx\nDialog.Content = DialogContent;\n// @component ./DialogActions.tsx\nDialog.Actions = DialogActions;\n// @component ./DialogTitle.tsx\nDialog.Title = DialogTitle;\n// @component ./DialogScrollArea.tsx\nDialog.ScrollArea = DialogScrollArea;\n// @component ./DialogIcon.tsx\nDialog.Icon = DialogIcon;\n\nconst styles = StyleSheet.create({\n  container: {\n    /**\n     * This prevents the shadow from being clipped on Android since Android\n     * doesn't support `overflow: visible`.\n     * One downside for this fix is that it will disable clicks on the area\n     * of the shadow around the dialog, consequently, if you click around the\n     * dialog (44 pixel from the top and bottom) it won't be dismissed.\n     */\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start',\n  },\n});\n\nexport default Dialog;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}