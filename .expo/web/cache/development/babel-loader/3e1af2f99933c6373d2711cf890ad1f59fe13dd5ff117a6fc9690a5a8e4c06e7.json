{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Outline = require(\"./Addons/Outline\");\nvar _enums = require(\"./Adornment/enums\");\nvar _TextInputAdornment = _interopRequireWildcard(require(\"./Adornment/TextInputAdornment\"));\nvar _constants = require(\"./constants\");\nvar _helpers = require(\"./helpers\");\nvar _InputLabel = _interopRequireDefault(require(\"./Label/InputLabel\"));\nvar _LabelBackground = _interopRequireDefault(require(\"./Label/LabelBackground\"));\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"cursorColor\", \"underlineColor\", \"outlineColor\", \"activeOutlineColor\", \"outlineStyle\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLabelTextLayout\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\"],\n  _excluded2 = [\"fontSize\", \"fontWeight\", \"lineHeight\", \"height\", \"backgroundColor\", \"textAlign\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar TextInputOutlined = function TextInputOutlined(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    customSelectionColor = _ref.selectionColor,\n    cursorColor = _ref.cursorColor,\n    _underlineColor = _ref.underlineColor,\n    customOutlineColor = _ref.outlineColor,\n    activeOutlineColor = _ref.activeOutlineColor,\n    outlineStyle = _ref.outlineStyle,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(_reactNative.TextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLabelTextLayout = _ref.onLabelTextLayout,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-outlined' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var adornmentConfig = (0, _TextInputAdornment.getAdornmentConfig)({\n    left: left,\n    right: right\n  });\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    INPUT_PADDING_HORIZONTAL = _getConstants.INPUT_PADDING_HORIZONTAL,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET;\n  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref3.fontSize,\n    fontWeight = _ref3.fontWeight,\n    lineHeightStyle = _ref3.lineHeight,\n    height = _ref3.height,\n    _ref3$backgroundColor = _ref3.backgroundColor,\n    backgroundColor = _ref3$backgroundColor === void 0 ? colors === null || colors === void 0 ? void 0 : colors.background : _ref3$backgroundColor,\n    textAlign = _ref3.textAlign,\n    viewStyle = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);\n  var fontSize = fontSizeStyle || _constants.MAXIMIZED_LABEL_FONT_SIZE;\n  var lineHeight = lineHeightStyle || fontSize * 1.2;\n  var _getOutlinedInputColo = (0, _helpers.getOutlinedInputColors)({\n      activeOutlineColor: activeOutlineColor,\n      customOutlineColor: customOutlineColor,\n      customSelectionColor: customSelectionColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getOutlinedInputColo.inputTextColor,\n    activeColor = _getOutlinedInputColo.activeColor,\n    outlineColor = _getOutlinedInputColo.outlineColor,\n    placeholderColor = _getOutlinedInputColo.placeholderColor,\n    errorColor = _getOutlinedInputColo.errorColor,\n    selectionColor = _getOutlinedInputColo.selectionColor;\n  var densePaddingTop = label ? _constants.LABEL_PADDING_TOP_DENSE : 0;\n  var paddingTop = label ? _constants.LABEL_PADDING_TOP : 0;\n  var yOffset = label ? _constants.OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n  var labelScale = _constants.MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = _constants.MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (_reactNative.I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - _constants.MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  var labelTranslationXOffset = 0;\n  var isAdornmentLeftIcon = adornmentConfig.some(function (_ref2) {\n    var side = _ref2.side,\n      type = _ref2.type;\n    return side === _enums.AdornmentSide.Left && type === _enums.AdornmentType.Icon;\n  });\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (_reactNative.I18nManager.getConstants().isRTL ? -1 : 1) * (_constants.ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n  var minInputHeight = (dense ? _constants.MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n  var inputHeight = (0, _helpers.calculateInputHeight)(labelHeight, height, minInputHeight);\n  var topPosition = (0, _helpers.calculateLabelTopPosition)(labelHeight, inputHeight, paddingTop);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: _reactNative.Platform.OS === 'android',\n    styles: _reactNative.StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  var pad = (0, _helpers.calculatePadding)(paddingSettings);\n  var paddingOut = (0, _helpers.adjustPaddingOut)(Object.assign({}, paddingSettings, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n  var _React$useRef = React.useRef([new _reactNative.Animated.Value(0), new _reactNative.Animated.Value(1)]),\n    placeholderOpacityAnims = _React$useRef.current;\n  var placeholderOpacity = hasActiveOutline ? parentState.labeled : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n  var placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  };\n  var labelBackgroundColor = backgroundColor === 'transparent' ? theme.colors.background : backgroundColor;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    onLabelTextLayout: onLabelTextLayout,\n    placeholderOpacity: placeholderOpacity,\n    labelError: error,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: _constants.LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor: errorColor,\n    labelTranslationXOffset: labelTranslationXOffset,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle,\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n  };\n  var minHeight = height || (dense ? _constants.MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT);\n  var outlinedHeight = inputHeight + (!height ? dense ? densePaddingTop / 2 : paddingTop : 0);\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var leftAffixTopPosition = (0, _helpers.calculateOutlinedIconAndAffixTopPosition)({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  var rightAffixTopPosition = (0, _helpers.calculateOutlinedIconAndAffixTopPosition)({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  var iconTopPosition = (0, _helpers.calculateOutlinedIconAndAffixTopPosition)({\n    height: outlinedHeight,\n    affixHeight: _constants.ADORNMENT_SIZE,\n    labelYOffset: -yOffset\n  });\n  var rightAffixWidth = right ? rightLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = (0, _TextInputAdornment.getAdornmentStyleAdjustmentForNativeInput)({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    mode: 'outlined',\n    isV3: isV3\n  });\n  var affixTopPosition = (_affixTopPosition = {}, (0, _defineProperty2.default)(_affixTopPosition, _enums.AdornmentSide.Left, leftAffixTopPosition), (0, _defineProperty2.default)(_affixTopPosition, _enums.AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, (0, _defineProperty2.default)(_onAffixChange, _enums.AdornmentSide.Left, onLeftAffixLayoutChange), (0, _defineProperty2.default)(_onAffixChange, _enums.AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, (0, _defineProperty2.default)(_topPosition, _enums.AdornmentType.Icon, iconTopPosition), (0, _defineProperty2.default)(_topPosition, _enums.AdornmentType.Affix, affixTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled: disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = Object.assign({}, adornmentProps, {\n      left: left,\n      right: right,\n      textStyle: Object.assign({}, font, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(_reactNative.View, {\n    style: viewStyle\n  }, React.createElement(_Outline.Outline, {\n    isV3: isV3,\n    style: outlineStyle,\n    label: label,\n    roundness: roundness,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), React.createElement(_reactNative.View, null, React.createElement(_reactNative.View, {\n    style: [styles.labelContainer, {\n      paddingTop: paddingTop,\n      minHeight: minHeight\n    }]\n  }, label ? React.createElement(_InputLabel.default, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width\n  }, labelProps, {\n    labelBackground: _LabelBackground.default,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  })) : null, render === null || render === void 0 ? void 0 : render(Object.assign({}, rest, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor: selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, Object.assign({}, font, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left',\n      paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n      minWidth: parentState.labelTextLayout.width + 2 * INPUT_PADDING_HORIZONTAL\n    }), _reactNative.Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID: testID\n  }))), React.createElement(_TextInputAdornment.default, adornmentProps)));\n};\nvar _default = exports.default = TextInputOutlined;\nvar styles = _reactNative.StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_Outline","_enums","_TextInputAdornment","_constants","_helpers","_InputLabel","_interopRequireDefault","_LabelBackground","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","TextInputOutlined","_ref","_affixTopPosition","_onAffixChange","_topPosition","_ref$disabled","disabled","_ref$editable","editable","label","_ref$error","error","customSelectionColor","selectionColor","cursorColor","_underlineColor","underlineColor","customOutlineColor","outlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","_ref$render","render","props","createElement","NativeTextInput","_ref$multiline","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","_ref$testID","testID","contentStyle","rest","_objectWithoutProperties2","adornmentConfig","getAdornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","_getConstants","getConstants","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","_ref3","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","lineHeightStyle","lineHeight","height","_ref3$backgroundColor","backgroundColor","background","textAlign","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","_getOutlinedInputColo","getOutlinedInputColors","inputTextColor","activeColor","placeholderColor","errorColor","densePaddingTop","LABEL_PADDING_TOP_DENSE","paddingTop","LABEL_PADDING_TOP","yOffset","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","_ref2","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","minInputHeight","MIN_DENSE_HEIGHT_OUTLINED","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","calculatePadding","paddingOut","adjustPaddingOut","assign","baseLabelTranslateY","_React$useRef","useRef","Animated","Value","placeholderOpacityAnims","current","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelBackgroundColor","labelProps","labelError","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","opacity","value","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","calculateOutlinedIconAndAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","_defineProperty2","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","View","Outline","labelContainer","InputLabel","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelBackground","LabelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","minWidth","labelTextLayout","outline","TextInputAdornment","_default","exports","create","paddingBottom","margin"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\n\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  contentStyle,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight: lineHeightStyle,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight = lineHeightStyle || fontSize * 1.2;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n    selectionColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\n  const paddingTop = label ? LABEL_PADDING_TOP : 0;\n  const yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    paddingTop\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelBackgroundColor: ColorValue =\n    backgroundColor === 'transparent'\n      ? theme.colors.background\n      : backgroundColor;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight + (!height ? (dense ? densePaddingTop / 2 : paddingTop) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        label={label}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop,\n              minHeight,\n            },\n          ]}\n        >\n          {label ? (\n            <InputLabel\n              labeled={parentState.labeled}\n              error={parentState.error}\n              focused={parentState.focused}\n              wiggle={Boolean(parentState.value && labelProps.labelError)}\n              labelLayoutMeasured={parentState.labelLayout.measured}\n              labelLayoutWidth={parentState.labelLayout.width}\n              {...labelProps}\n              labelBackground={LabelBackground}\n              maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n            />\n          ) : null}\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            editable: !disabled && editable,\n            selectionColor,\n            cursorColor:\n              typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n                minWidth:\n                  parentState.labelTextLayout.width +\n                  2 * INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n              contentStyle,\n            ],\n            testID,\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    margin: 0,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}