{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _nativeInterface = _interopRequireDefault(require(\"./nativeInterface\"));\nvar invariant = require('fbjs/lib/invariant');\nvar GROUP_TYPES_OPTIONS = {\n  Album: 'Album',\n  All: 'All',\n  Event: 'Event',\n  Faces: 'Faces',\n  Library: 'Library',\n  PhotoStream: 'PhotoStream',\n  SavedPhotos: 'SavedPhotos'\n};\nvar ASSET_TYPE_OPTIONS = {\n  All: 'All',\n  Videos: 'Videos',\n  Photos: 'Photos'\n};\nvar CameraRoll = function () {\n  function CameraRoll() {\n    (0, _classCallCheck2.default)(this, CameraRoll);\n  }\n  (0, _createClass2.default)(CameraRoll, null, [{\n    key: \"saveImageWithTag\",\n    value: function saveImageWithTag(tag) {\n      console.warn('`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.');\n      return this.saveToCameraRoll(tag, 'photo');\n    }\n  }, {\n    key: \"deletePhotos\",\n    value: function deletePhotos(photoUris) {\n      return _nativeInterface.default.deletePhotos(photoUris);\n    }\n  }, {\n    key: \"save\",\n    value: function save(tag) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _options$type = options.type,\n        type = _options$type === void 0 ? 'auto' : _options$type,\n        _options$album = options.album,\n        album = _options$album === void 0 ? '' : _options$album;\n      invariant(typeof tag === 'string', 'CameraRoll.saveToCameraRoll must be a valid string.');\n      invariant(options.type === 'photo' || options.type === 'video' || options.type === 'auto' || options.type === undefined, \"The second argument to saveToCameraRoll must be 'photo' or 'video' or 'auto'. You passed \" + (type || 'unknown'));\n      if (type === 'auto') {\n        if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {\n          type = 'video';\n        } else {\n          type = 'photo';\n        }\n      }\n      return _nativeInterface.default.saveToCameraRoll(tag, {\n        type: type,\n        album: album\n      });\n    }\n  }, {\n    key: \"saveToCameraRoll\",\n    value: function saveToCameraRoll(tag, type) {\n      console.warn('CameraRoll.saveToCameraRoll(tag, type) is deprecated.  Use the save function instead');\n      return CameraRoll.save(tag, {\n        type: type\n      });\n    }\n  }, {\n    key: \"getAlbums\",\n    value: function getAlbums() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        assetType: ASSET_TYPE_OPTIONS.All\n      };\n      return _nativeInterface.default.getAlbums(params);\n    }\n  }, {\n    key: \"getParamsWithDefaults\",\n    value: function getParamsWithDefaults(params) {\n      var newParams = Object.assign({}, params);\n      if (!newParams.assetType) {\n        newParams.assetType = ASSET_TYPE_OPTIONS.All;\n      }\n      if (!newParams.groupTypes && _reactNative.Platform.OS !== 'android') {\n        newParams.groupTypes = GROUP_TYPES_OPTIONS.All;\n      }\n      return newParams;\n    }\n  }, {\n    key: \"getPhotos\",\n    value: function getPhotos(params) {\n      params = CameraRoll.getParamsWithDefaults(params);\n      var promise = _nativeInterface.default.getPhotos(params);\n      if (arguments.length > 1) {\n        console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');\n        var successCallback = arguments[1];\n        var errorCallback = arguments[2] || function () {};\n        promise.then(successCallback, errorCallback);\n      }\n      return promise;\n    }\n  }]);\n  return CameraRoll;\n}();\nCameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;\nCameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;\nmodule.exports = CameraRoll;","map":{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","_reactNative","_nativeInterface","invariant","GROUP_TYPES_OPTIONS","Album","All","Event","Faces","Library","PhotoStream","SavedPhotos","ASSET_TYPE_OPTIONS","Videos","Photos","CameraRoll","default","key","value","saveImageWithTag","tag","console","warn","saveToCameraRoll","deletePhotos","photoUris","RNCCameraRoll","save","options","arguments","length","undefined","_options$type","type","_options$album","album","indexOf","split","slice","getAlbums","params","assetType","getParamsWithDefaults","newParams","Object","assign","groupTypes","Platform","OS","getPhotos","promise","successCallback","errorCallback","then","GroupTypesOptions","AssetTypeOptions","module","exports"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/node_modules/@react-native-community/cameraroll/js/CameraRoll.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\nimport {Platform} from 'react-native';\nimport RNCCameraRoll from './nativeInterface';\n\nconst invariant = require('fbjs/lib/invariant');\n\nconst GROUP_TYPES_OPTIONS = {\n  Album: 'Album',\n  All: 'All', // default\n  Event: 'Event',\n  Faces: 'Faces',\n  Library: 'Library',\n  PhotoStream: 'PhotoStream',\n  SavedPhotos: 'SavedPhotos',\n};\n\nconst ASSET_TYPE_OPTIONS = {\n  All: 'All',\n  Videos: 'Videos',\n  Photos: 'Photos',\n};\n\nexport type GroupTypes = $Keys<typeof GROUP_TYPES_OPTIONS>;\n\nexport type Include =\n  | 'filename'\n  | 'fileSize'\n  | 'location'\n  | 'imageSize'\n  | 'playableDuration';\n\n/**\n * Shape of the param arg for the `getPhotos` function.\n */\nexport type GetPhotosParams = {\n  /**\n   * The number of photos wanted in reverse order of the photo application\n   * (i.e. most recent first).\n   */\n  first: number,\n\n  /**\n   * A cursor that matches `page_info { end_cursor }` returned from a previous\n   * call to `getPhotos`\n   */\n  after?: string,\n\n  /**\n   * Specifies which group types to filter the results to.\n   */\n  groupTypes?: GroupTypes,\n\n  /**\n   * Specifies filter on group names, like 'Recent Photos' or custom album\n   * titles.\n   */\n  groupName?: string,\n\n  /**\n   * Specifies filter on asset type\n   */\n  assetType?: $Keys<typeof ASSET_TYPE_OPTIONS>,\n\n  /**\n   * Earliest time to get photos from. A timestamp in milliseconds. Exclusive.\n   */\n  fromTime?: number,\n\n  /**\n   * Latest time to get photos from. A timestamp in milliseconds. Inclusive.\n   */\n  toTime?: Number,\n\n  /**\n   * Filter by mimetype (e.g. image/jpeg).\n   */\n  mimeTypes?: Array<string>,\n\n  /**\n   * Specific fields in the output that we want to include, even though they\n   * might have some performance impact.\n   */\n  include?: Include[],\n};\n\nexport type PhotoIdentifier = {\n  node: {\n    type: string,\n    group_name: string,\n    image: {\n      filename: string | null,\n      uri: string,\n      height: number,\n      width: number,\n      fileSize: number | null,\n      playableDuration: number,\n    },\n    timestamp: number,\n    location: {\n      latitude?: number,\n      longitude?: number,\n      altitude?: number,\n      heading?: number,\n      speed?: number,\n    } | null,\n  },\n};\n\nexport type PhotoIdentifiersPage = {\n  edges: Array<PhotoIdentifier>,\n  page_info: {\n    has_next_page: boolean,\n    start_cursor?: string,\n    end_cursor?: string,\n  },\n  limited?: boolean,\n};\n\nexport type SaveToCameraRollOptions = {\n  type?: 'photo' | 'video' | 'auto',\n  album?: string,\n};\n\nexport type GetAlbumsParams = {\n  assetType?: $Keys<typeof ASSET_TYPE_OPTIONS>,\n};\n\nexport type Album = {\n  title: string,\n  count: number,\n};\n\n/**\n * `CameraRoll` provides access to the local camera roll or photo library.\n *\n * See https://facebook.github.io/react-native/docs/cameraroll.html\n */\nclass CameraRoll {\n  static GroupTypesOptions = GROUP_TYPES_OPTIONS;\n  static AssetTypeOptions = ASSET_TYPE_OPTIONS;\n\n  /**\n   * `CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.\n   */\n  static saveImageWithTag(tag: string): Promise<string> {\n    console.warn(\n      '`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.',\n    );\n    return this.saveToCameraRoll(tag, 'photo');\n  }\n\n  /**\n   * On iOS: requests deletion of a set of photos from the camera roll.\n   * On Android: Deletes a set of photos from the camera roll.\n   *\n   */\n  static deletePhotos(photoUris: Array<string>) {\n    return RNCCameraRoll.deletePhotos(photoUris);\n  }\n\n  /**\n   * Saves the photo or video to the camera roll or photo library.\n   *\n   */\n  static save(\n    tag: string,\n    options: SaveToCameraRollOptions = {},\n  ): Promise<string> {\n    let {type = 'auto', album = ''} = options;\n    invariant(\n      typeof tag === 'string',\n      'CameraRoll.saveToCameraRoll must be a valid string.',\n    );\n    invariant(\n      options.type === 'photo' ||\n        options.type === 'video' ||\n        options.type === 'auto' ||\n        options.type === undefined,\n      `The second argument to saveToCameraRoll must be 'photo' or 'video' or 'auto'. You passed ${type ||\n        'unknown'}`,\n    );\n    if (type === 'auto') {\n      if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {\n        type = 'video';\n      } else {\n        type = 'photo';\n      }\n    }\n    return RNCCameraRoll.saveToCameraRoll(tag, {type, album});\n  }\n  static saveToCameraRoll(\n    tag: string,\n    type?: 'photo' | 'video' | 'auto',\n  ): Promise<string> {\n    console.warn(\n      'CameraRoll.saveToCameraRoll(tag, type) is deprecated.  Use the save function instead',\n    );\n    return CameraRoll.save(tag, {type});\n  }\n  static getAlbums(\n    params?: GetAlbumsParams = {assetType: ASSET_TYPE_OPTIONS.All},\n  ): Promise<Album[]> {\n    return RNCCameraRoll.getAlbums(params);\n  }\n\n  static getParamsWithDefaults(params: GetPhotosParams): GetPhotosParams {\n    const newParams = {...params};\n    if (!newParams.assetType) {\n      newParams.assetType = ASSET_TYPE_OPTIONS.All;\n    }\n    if (!newParams.groupTypes && Platform.OS !== 'android') {\n      newParams.groupTypes = GROUP_TYPES_OPTIONS.All;\n    }\n    return newParams;\n  }\n\n  /**\n   * Returns a Promise with photo identifier objects from the local camera\n   * roll of the device matching shape defined by `getPhotosReturnChecker`.\n   *\n   * See https://facebook.github.io/react-native/docs/cameraroll.html#getphotos\n   */\n  static getPhotos(params: GetPhotosParams): Promise<PhotoIdentifiersPage> {\n    params = CameraRoll.getParamsWithDefaults(params);\n    const promise = RNCCameraRoll.getPhotos(params);\n\n    if (arguments.length > 1) {\n      console.warn(\n        'CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead',\n      );\n      let successCallback = arguments[1];\n      const errorCallback = arguments[2] || (() => {});\n      promise.then(successCallback, errorCallback);\n    }\n\n    return promise;\n  }\n}\n\nmodule.exports = CameraRoll;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}