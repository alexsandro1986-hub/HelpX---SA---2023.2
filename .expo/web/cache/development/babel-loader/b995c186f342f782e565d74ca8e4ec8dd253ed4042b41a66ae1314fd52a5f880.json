{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport html2canvas from \"html2canvas\";\nfunction captureRef(_x, _x2) {\n  return _captureRef.apply(this, arguments);\n}\nfunction _captureRef() {\n  _captureRef = _asyncToGenerator(function* (view, options) {\n    if (options.result === \"tmpfile\") {\n      console.warn(\"Tmpfile is not implemented for web. Try base64 or file.\\n\" + \"For compatibility, it currently returns the same result as data-uri\");\n    }\n    var h2cOptions = {};\n    var renderedCanvas = yield html2canvas(view, h2cOptions);\n    if (options.width && options.height) {\n      var resizedCanvas = document.createElement('canvas');\n      var resizedContext = resizedCanvas.getContext('2d');\n      resizedCanvas.height = options.height;\n      resizedCanvas.width = options.width;\n      resizedContext.drawImage(renderedCanvas, 0, 0, resizedCanvas.width, resizedCanvas.height);\n      renderedCanvas = resizedCanvas;\n    }\n    var dataUrl = renderedCanvas.toDataURL(\"image/\" + options.format, options.quality);\n    if (options.result === \"data-uri\" || options.result === \"tmpfile\") return dataUrl;\n    return dataUrl.replace(/data:image\\/(\\w+);base64,/, '');\n  });\n  return _captureRef.apply(this, arguments);\n}\nfunction captureScreen(options) {\n  return captureRef(window.document.body, options);\n}\nfunction releaseCapture(uri) {\n  throw new Error(\"Tmpfile is not implemented for web. Try base64 or file\");\n}\nexport default {\n  captureRef: captureRef,\n  captureScreen: captureScreen,\n  releaseCapture: releaseCapture\n};","map":{"version":3,"names":["html2canvas","captureRef","_x","_x2","_captureRef","apply","arguments","_asyncToGenerator","view","options","result","console","warn","h2cOptions","renderedCanvas","width","height","resizedCanvas","document","createElement","resizedContext","getContext","drawImage","dataUrl","toDataURL","format","quality","replace","captureScreen","window","body","releaseCapture","uri","Error"],"sources":["C:/Users/andrey_lopes/Documents/sa.ReactNative2semestre/node_modules/react-native-view-shot/src/RNViewShot.web.js"],"sourcesContent":["//@flow\nimport html2canvas from \"html2canvas\";\n\nasync function captureRef(view, options) {\n  if (options.result === \"tmpfile\") {\n    console.warn(\"Tmpfile is not implemented for web. Try base64 or file.\\n\"+\n                 \"For compatibility, it currently returns the same result as data-uri\");\n  }\n\n  // TODO: implement snapshotContentContainer option\n\n  const h2cOptions = {};\n  let renderedCanvas = await html2canvas(view, h2cOptions);\n\n  if (options.width && options.height) {\n    // Resize result\n    const resizedCanvas = document.createElement('canvas');\n    const resizedContext = resizedCanvas.getContext('2d');\n    resizedCanvas.height = options.height;\n    resizedCanvas.width = options.width;\n    resizedContext.drawImage(renderedCanvas, 0, 0, resizedCanvas.width, resizedCanvas.height);\n    renderedCanvas = resizedCanvas;\n  }\n\n  const dataUrl = renderedCanvas.toDataURL(\"image/\" + options.format, options.quality);\n  if (options.result === \"data-uri\" || options.result === \"tmpfile\") return dataUrl;\n  return dataUrl.replace(/data:image\\/(\\w+);base64,/, '');\n}\n\nfunction captureScreen(options) {\n  return captureRef(window.document.body, options);\n}\n\nfunction releaseCapture(uri) {\n  throw new Error(\"Tmpfile is not implemented for web. Try base64 or file\");\n}\n\nexport default {\n  captureRef,\n  captureScreen,\n  releaseCapture\n}"],"mappings":";AACA,OAAOA,WAAW,MAAM,aAAa;AAAC,SAEvBC,UAAUA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,IAAI,EAAEC,OAAO,EAAE;IACvC,IAAIA,OAAO,CAACC,MAAM,KAAK,SAAS,EAAE;MAChCC,OAAO,CAACC,IAAI,CAAC,2DAA2D,GAC3D,qEAAqE,CAAC;IACrF;IAIA,IAAMC,UAAU,GAAG,CAAC,CAAC;IACrB,IAAIC,cAAc,SAASd,WAAW,CAACQ,IAAI,EAAEK,UAAU,CAAC;IAExD,IAAIJ,OAAO,CAACM,KAAK,IAAIN,OAAO,CAACO,MAAM,EAAE;MAEnC,IAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACtD,IAAMC,cAAc,GAAGH,aAAa,CAACI,UAAU,CAAC,IAAI,CAAC;MACrDJ,aAAa,CAACD,MAAM,GAAGP,OAAO,CAACO,MAAM;MACrCC,aAAa,CAACF,KAAK,GAAGN,OAAO,CAACM,KAAK;MACnCK,cAAc,CAACE,SAAS,CAACR,cAAc,EAAE,CAAC,EAAE,CAAC,EAAEG,aAAa,CAACF,KAAK,EAAEE,aAAa,CAACD,MAAM,CAAC;MACzFF,cAAc,GAAGG,aAAa;IAChC;IAEA,IAAMM,OAAO,GAAGT,cAAc,CAACU,SAAS,CAAC,QAAQ,GAAGf,OAAO,CAACgB,MAAM,EAAEhB,OAAO,CAACiB,OAAO,CAAC;IACpF,IAAIjB,OAAO,CAACC,MAAM,KAAK,UAAU,IAAID,OAAO,CAACC,MAAM,KAAK,SAAS,EAAE,OAAOa,OAAO;IACjF,OAAOA,OAAO,CAACI,OAAO,CAAC,2BAA2B,EAAE,EAAE,CAAC;EACzD,CAAC;EAAA,OAAAvB,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASsB,aAAaA,CAACnB,OAAO,EAAE;EAC9B,OAAOR,UAAU,CAAC4B,MAAM,CAACX,QAAQ,CAACY,IAAI,EAAErB,OAAO,CAAC;AAClD;AAEA,SAASsB,cAAcA,CAACC,GAAG,EAAE;EAC3B,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;AAC3E;AAEA,eAAe;EACbhC,UAAU,EAAVA,UAAU;EACV2B,aAAa,EAAbA,aAAa;EACbG,cAAc,EAAdA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}