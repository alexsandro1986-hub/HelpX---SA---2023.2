{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.RadioButtonAndroid = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _RadioButtonGroup = require(\"./RadioButtonGroup\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _utils2 = require(\"../Checkbox/utils\");\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _excluded = [\"disabled\", \"onPress\", \"theme\", \"value\", \"status\", \"testID\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar BORDER_WIDTH = 2;\nvar RadioButtonAndroid = exports.RadioButtonAndroid = function RadioButtonAndroid(_ref) {\n  var disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    themeOverrides = _ref.theme,\n    value = _ref.value,\n    status = _ref.status,\n    testID = _ref.testID,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(BORDER_WIDTH)),\n    borderAnim = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(1)),\n    radioAnim = _React$useRef2.current;\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n      _reactNative.Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n      _reactNative.Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n  return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer, null, function (context) {\n    var checked = (0, _utils.isChecked)({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status: status,\n      value: value\n    }) === 'checked';\n    var _getAndroidSelectionC = (0, _utils2.getAndroidSelectionControlColor)({\n        theme: theme,\n        disabled: disabled,\n        checked: checked,\n        customColor: rest.color,\n        customUncheckedColor: rest.uncheckedColor\n      }),\n      rippleColor = _getAndroidSelectionC.rippleColor,\n      selectionControlColor = _getAndroidSelectionC.selectionControlColor;\n    return React.createElement(_TouchableRipple.default, _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : function (event) {\n        (0, _utils.handlePress)({\n          onPress: onPress,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          value: value,\n          event: event\n        });\n      },\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled: disabled,\n        checked: checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID,\n      theme: theme\n    }), React.createElement(_reactNative.Animated.View, {\n      style: [styles.radio, {\n        borderColor: selectionControlColor,\n        borderWidth: borderAnim\n      }]\n    }, checked ? React.createElement(_reactNative.View, {\n      style: [_reactNative.StyleSheet.absoluteFill, styles.radioContainer]\n    }, React.createElement(_reactNative.Animated.View, {\n      style: [styles.dot, {\n        backgroundColor: selectionControlColor,\n        transform: [{\n          scale: radioAnim\n        }]\n      }]\n    })) : null));\n  });\n};\nRadioButtonAndroid.displayName = 'RadioButton.Android';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 18\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5\n  }\n});\nvar _default = exports.default = RadioButtonAndroid;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_RadioButtonGroup","_utils","_theming","_utils2","_TouchableRipple","_interopRequireDefault","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","BORDER_WIDTH","RadioButtonAndroid","exports","_ref","disabled","onPress","themeOverrides","theme","value","status","testID","rest","_objectWithoutProperties2","useInternalTheme","_React$useRef","useRef","Animated","Value","borderAnim","current","_React$useRef2","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","createElement","RadioButtonContext","Consumer","context","checked","isChecked","contextValue","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","TouchableRipple","_extends","borderless","undefined","event","handlePress","onValueChange","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","radio","borderColor","borderWidth","StyleSheet","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","_default"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default RadioButtonAndroid;\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}