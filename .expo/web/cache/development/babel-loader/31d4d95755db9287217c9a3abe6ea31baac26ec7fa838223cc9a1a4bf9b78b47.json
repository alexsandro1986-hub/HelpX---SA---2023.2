{"ast":null,"code":"var uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateStyleName(name) {\n  if (name in cache) {\n    return cache[name];\n  }\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? '-' + hName : hName;\n}\nexport default hyphenateStyleName;","map":{"version":3,"names":["uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hyphenateStyleName","name","hName","replace","test"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-web/src/exports/StyleSheet/compiler/hyphenateStyleName.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nconst uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache = {};\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateStyleName(name: string): string {\n  if (name in cache) {\n    return cache[name];\n  }\n\n  const hName = name.replace(uppercasePattern, toHyphenLower);\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName);\n}\n\nexport default hyphenateStyleName;\n"],"mappings":"AASA,IAAMA,gBAAgB,GAAG,QAAQ;AACjC,IAAMC,SAAS,GAAG,MAAM;AACxB,IAAMC,KAAK,GAAG,CAAC,CAAC;AAEhB,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,OAAO,GAAG,GAAGA,KAAK,CAACC,WAAW,CAAC,CAAC;AAClC;AAEA,SAASC,kBAAkBA,CAACC,IAAY,EAAU;EAChD,IAAIA,IAAI,IAAIL,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACK,IAAI,CAAC;EACpB;EAEA,IAAMC,KAAK,GAAGD,IAAI,CAACE,OAAO,CAACT,gBAAgB,EAAEG,aAAa,CAAC;EAC3D,OAAQD,KAAK,CAACK,IAAI,CAAC,GAAGN,SAAS,CAACS,IAAI,CAACF,KAAK,CAAC,GAAG,GAAG,GAAGA,KAAK,GAAGA,KAAK;AACnE;AAEA,eAAeF,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}