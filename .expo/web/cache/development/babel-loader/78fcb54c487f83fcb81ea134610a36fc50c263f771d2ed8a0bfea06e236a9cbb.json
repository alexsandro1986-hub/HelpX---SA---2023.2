{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar _EventEmitter = _interopRequireDefault(require(\"../../vendor/react-native/emitter/_EventEmitter\"));\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\nvar isPrefixed = _canUseDom.default && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar changeEmitter = null;\nvar AppState = exports.default = function () {\n  function AppState() {\n    (0, _classCallCheck2.default)(this, AppState);\n  }\n  (0, _createClass2.default)(AppState, null, [{\n    key: \"currentState\",\n    get: function get() {\n      if (!AppState.isAvailable) {\n        return AppStates.ACTIVE;\n      }\n      switch (document[VISIBILITY_STATE_PROPERTY]) {\n        case 'hidden':\n        case 'prerender':\n        case 'unloaded':\n          return AppStates.BACKGROUND;\n        default:\n          return AppStates.ACTIVE;\n      }\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      if (AppState.isAvailable) {\n        (0, _invariant.default)(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n        if (type === 'change') {\n          if (!changeEmitter) {\n            changeEmitter = new _EventEmitter.default();\n            document.addEventListener(VISIBILITY_CHANGE_EVENT, function () {\n              if (changeEmitter) {\n                changeEmitter.emit('change', AppState.currentState);\n              }\n            }, false);\n          }\n          return changeEmitter.addListener(type, handler);\n        }\n      }\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, handler) {\n      if (AppState.isAvailable) {\n        console.error(\"AppState.removeListener('\" + type + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `AppState.addEventListener`.');\n        (0, _invariant.default)(EVENT_TYPES.indexOf(type) !== -1, 'Trying to remove listener for unknown event: \"%s\"', type);\n        if (type === 'change' && changeEmitter) {\n          changeEmitter.removeListener(handler);\n        }\n      }\n    }\n  }]);\n  return AppState;\n}();\nAppState.isAvailable = _canUseDom.default && document[VISIBILITY_STATE_PROPERTY];","map":{"version":3,"names":["_invariant","_interopRequireDefault","require","_EventEmitter","_canUseDom","isPrefixed","canUseDOM","document","hasOwnProperty","EVENT_TYPES","VISIBILITY_CHANGE_EVENT","VISIBILITY_STATE_PROPERTY","AppStates","BACKGROUND","ACTIVE","changeEmitter","AppState","exports","default","_classCallCheck2","_createClass2","key","get","isAvailable","value","addEventListener","type","handler","invariant","indexOf","EventEmitter","emit","currentState","addListener","removeEventListener","console","error","removeListener"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/node_modules/react-native-web/dist/exports/AppState/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport EventEmitter from '../../vendor/react-native/emitter/_EventEmitter';\nimport canUseDOM from '../../modules/canUseDom'; // Android 4.4 browser\n\nvar isPrefixed = canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar changeEmitter = null;\nexport default class AppState {\n  static get currentState() {\n    if (!AppState.isAvailable) {\n      return AppStates.ACTIVE;\n    }\n\n    switch (document[VISIBILITY_STATE_PROPERTY]) {\n      case 'hidden':\n      case 'prerender':\n      case 'unloaded':\n        return AppStates.BACKGROUND;\n\n      default:\n        return AppStates.ACTIVE;\n    }\n  }\n\n  static addEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n\n      if (type === 'change') {\n        if (!changeEmitter) {\n          changeEmitter = new EventEmitter();\n          document.addEventListener(VISIBILITY_CHANGE_EVENT, () => {\n            if (changeEmitter) {\n              changeEmitter.emit('change', AppState.currentState);\n            }\n          }, false);\n        }\n\n        return changeEmitter.addListener(type, handler);\n      }\n    }\n  }\n\n  static removeEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      console.error(\"AppState.removeListener('\" + type + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `AppState.addEventListener`.');\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to remove listener for unknown event: \"%s\"', type);\n\n      if (type === 'change' && changeEmitter) {\n        changeEmitter.removeListener(handler);\n      }\n    }\n  }\n\n}\nAppState.isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];"],"mappings":";;;;;;;AASA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,IAAIG,UAAU,GAAGC,kBAAS,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,IAAID,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;AAC3G,IAAIC,WAAW,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC;AAC7C,IAAIC,uBAAuB,GAAGL,UAAU,GAAG,wBAAwB,GAAG,kBAAkB;AACxF,IAAIM,yBAAyB,GAAGN,UAAU,GAAG,uBAAuB,GAAG,iBAAiB;AACxF,IAAIO,SAAS,GAAG;EACdC,UAAU,EAAE,YAAY;EACxBC,MAAM,EAAE;AACV,CAAC;AACD,IAAIC,aAAa,GAAG,IAAI;AAAC,IACJC,QAAQ,GAAAC,OAAA,CAAAC,OAAA;EAAA,SAAAF,SAAA;IAAA,IAAAG,gBAAA,CAAAD,OAAA,QAAAF,QAAA;EAAA;EAAA,IAAAI,aAAA,CAAAF,OAAA,EAAAF,QAAA;IAAAK,GAAA;IAAAC,GAAA,EAC3B,SAAAA,IAAA,EAA0B;MACxB,IAAI,CAACN,QAAQ,CAACO,WAAW,EAAE;QACzB,OAAOX,SAAS,CAACE,MAAM;MACzB;MAEA,QAAQP,QAAQ,CAACI,yBAAyB,CAAC;QACzC,KAAK,QAAQ;QACb,KAAK,WAAW;QAChB,KAAK,UAAU;UACb,OAAOC,SAAS,CAACC,UAAU;QAE7B;UACE,OAAOD,SAAS,CAACE,MAAM;MAC3B;IACF;EAAC;IAAAO,GAAA;IAAAG,KAAA,EAED,SAAAC,iBAAwBC,IAAI,EAAEC,OAAO,EAAE;MACrC,IAAIX,QAAQ,CAACO,WAAW,EAAE;QACxB,IAAAK,kBAAS,EAACnB,WAAW,CAACoB,OAAO,CAACH,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,4CAA4C,EAAEA,IAAI,CAAC;QAE/F,IAAIA,IAAI,KAAK,QAAQ,EAAE;UACrB,IAAI,CAACX,aAAa,EAAE;YAClBA,aAAa,GAAG,IAAIe,qBAAY,CAAC,CAAC;YAClCvB,QAAQ,CAACkB,gBAAgB,CAACf,uBAAuB,EAAE,YAAM;cACvD,IAAIK,aAAa,EAAE;gBACjBA,aAAa,CAACgB,IAAI,CAAC,QAAQ,EAAEf,QAAQ,CAACgB,YAAY,CAAC;cACrD;YACF,CAAC,EAAE,KAAK,CAAC;UACX;UAEA,OAAOjB,aAAa,CAACkB,WAAW,CAACP,IAAI,EAAEC,OAAO,CAAC;QACjD;MACF;IACF;EAAC;IAAAN,GAAA;IAAAG,KAAA,EAED,SAAAU,oBAA2BR,IAAI,EAAEC,OAAO,EAAE;MACxC,IAAIX,QAAQ,CAACO,WAAW,EAAE;QACxBY,OAAO,CAACC,KAAK,CAAC,2BAA2B,GAAGV,IAAI,GAAG,2BAA2B,GAAG,gEAAgE,GAAG,0CAA0C,CAAC;QAC/L,IAAAE,kBAAS,EAACnB,WAAW,CAACoB,OAAO,CAACH,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,mDAAmD,EAAEA,IAAI,CAAC;QAEtG,IAAIA,IAAI,KAAK,QAAQ,IAAIX,aAAa,EAAE;UACtCA,aAAa,CAACsB,cAAc,CAACV,OAAO,CAAC;QACvC;MACF;IACF;EAAC;EAAA,OAAAX,QAAA;AAAA;AAGHA,QAAQ,CAACO,WAAW,GAAGjB,kBAAS,IAAIC,QAAQ,CAACI,yBAAyB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}