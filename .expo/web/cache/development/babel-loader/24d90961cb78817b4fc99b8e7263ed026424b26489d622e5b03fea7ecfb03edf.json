{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.CheckboxAndroid = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _excluded = [\"status\", \"theme\", \"disabled\", \"onPress\", \"testID\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ANIMATION_DURATION = 100;\nvar CheckboxAndroid = exports.CheckboxAndroid = function CheckboxAndroid(_ref) {\n  var status = _ref.status,\n    themeOverrides = _ref.theme,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    testID = _ref.testID,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(1)),\n    scaleAnim = _React$useRef.current;\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    var checked = status === 'checked';\n    _reactNative.Animated.sequence([_reactNative.Animated.timing(scaleAnim, {\n      toValue: 0.85,\n      duration: checked ? ANIMATION_DURATION * scale : 0,\n      useNativeDriver: false\n    }), _reactNative.Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: checked ? ANIMATION_DURATION * scale : ANIMATION_DURATION * scale * 1.75,\n      useNativeDriver: false\n    })]).start();\n  }, [status, scaleAnim, scale]);\n  var checked = status === 'checked';\n  var indeterminate = status === 'indeterminate';\n  var _getAndroidSelectionC = (0, _utils.getAndroidSelectionControlColor)({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor\n    }),\n    rippleColor = _getAndroidSelectionC.rippleColor,\n    selectionControlColor = _getAndroidSelectionC.selectionControlColor;\n  var borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0]\n  });\n  var icon = indeterminate ? 'minus-box' : checked ? 'checkbox-marked' : 'checkbox-blank-outline';\n  return React.createElement(_TouchableRipple.default, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled,\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled: disabled,\n      checked: checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID,\n    theme: theme\n  }), React.createElement(_reactNative.Animated.View, {\n    style: {\n      transform: [{\n        scale: scaleAnim\n      }]\n    }\n  }, React.createElement(_MaterialCommunityIcon.default, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: selectionControlColor,\n    direction: \"ltr\"\n  }), React.createElement(_reactNative.View, {\n    style: [_reactNative.StyleSheet.absoluteFill, styles.fillContainer]\n  }, React.createElement(_reactNative.Animated.View, {\n    style: [styles.fill, {\n      borderColor: selectionControlColor\n    }, {\n      borderWidth: borderWidth\n    }]\n  }))));\n};\nCheckboxAndroid.displayName = 'Checkbox.Android';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fill: {\n    height: 14,\n    width: 14\n  }\n});\nvar _default = exports.default = CheckboxAndroid;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_utils","_theming","_MaterialCommunityIcon","_interopRequireDefault","_TouchableRipple","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ANIMATION_DURATION","CheckboxAndroid","exports","_ref","status","themeOverrides","theme","disabled","onPress","testID","rest","_objectWithoutProperties2","useInternalTheme","_React$useRef","useRef","Animated","Value","scaleAnim","current","isFirstRendering","scale","animation","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","borderWidth","interpolate","inputRange","outputRange","icon","createElement","TouchableRipple","_extends","borderless","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","transform","MaterialCommunityIcon","allowFontScaling","name","size","direction","StyleSheet","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","_default"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\Checkbox\\CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { getAndroidSelectionControlColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n */\nconst CheckboxAndroid = ({\n  status,\n  theme: themeOverrides,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { rippleColor, selectionControlColor } =\n    getAndroidSelectionControlColor({\n      theme,\n      disabled,\n      checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor,\n    });\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n      theme={theme}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={selectionControlColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: selectionControlColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default CheckboxAndroid;\n\n// @component-docs ignore-next-line\nexport { CheckboxAndroid };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}