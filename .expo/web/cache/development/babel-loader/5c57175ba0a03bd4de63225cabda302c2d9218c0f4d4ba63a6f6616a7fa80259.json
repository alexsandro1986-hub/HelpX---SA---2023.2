{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Composer = Composer;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Constant = require(\"./Constant\");\nvar _Color = _interopRequireDefault(require(\"./Color\"));\nvar _utils = require(\"./utils\");\nvar _useMemoOne = require(\"use-memo-one\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\erick_ribeiro-souza\\\\Desktop\\\\s.a 2\\\\sa.ReactNative2semestre-1\\\\node_modules\\\\react-native-gifted-chat\\\\lib\\\\Composer.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar styles = _reactNative.StyleSheet.create({\n  textInput: Object.assign({\n    flex: 1,\n    marginLeft: 10,\n    fontSize: 16,\n    lineHeight: 16\n  }, _reactNative.Platform.select({\n    web: {\n      paddingTop: 6,\n      paddingLeft: 4\n    }\n  }), {\n    marginTop: _reactNative.Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6\n    }),\n    marginBottom: _reactNative.Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4\n    })\n  })\n});\nfunction Composer(_ref) {\n  var _ref$composerHeight = _ref.composerHeight,\n    composerHeight = _ref$composerHeight === void 0 ? _Constant.MIN_COMPOSER_HEIGHT : _ref$composerHeight,\n    _ref$disableComposer = _ref.disableComposer,\n    disableComposer = _ref$disableComposer === void 0 ? false : _ref$disableComposer,\n    _ref$keyboardAppearan = _ref.keyboardAppearance,\n    keyboardAppearance = _ref$keyboardAppearan === void 0 ? 'default' : _ref$keyboardAppearan,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? true : _ref$multiline,\n    _ref$onInputSizeChang = _ref.onInputSizeChanged,\n    onInputSizeChanged = _ref$onInputSizeChang === void 0 ? function () {} : _ref$onInputSizeChang,\n    _ref$onTextChanged = _ref.onTextChanged,\n    onTextChanged = _ref$onTextChanged === void 0 ? function () {} : _ref$onTextChanged,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? _Constant.DEFAULT_PLACEHOLDER : _ref$placeholder,\n    _ref$placeholderTextC = _ref.placeholderTextColor,\n    placeholderTextColor = _ref$placeholderTextC === void 0 ? _Color.default.defaultColor : _ref$placeholderTextC,\n    _ref$text = _ref.text,\n    text = _ref$text === void 0 ? '' : _ref$text,\n    _ref$textInputAutoFoc = _ref.textInputAutoFocus,\n    textInputAutoFocus = _ref$textInputAutoFoc === void 0 ? false : _ref$textInputAutoFoc,\n    _ref$textInputProps = _ref.textInputProps,\n    textInputProps = _ref$textInputProps === void 0 ? {} : _ref$textInputProps,\n    textInputStyle = _ref.textInputStyle;\n  var dimensionsRef = (0, _react.useRef)();\n  var determineInputSizeChange = (0, _useMemoOne.useCallbackOne)(function (dimensions) {\n    if (!dimensions) {\n      return;\n    }\n    if (!dimensionsRef || !dimensionsRef.current || dimensionsRef.current && (dimensionsRef.current.width !== dimensions.width || dimensionsRef.current.height !== dimensions.height)) {\n      dimensionsRef.current = dimensions;\n      onInputSizeChanged(dimensions);\n    }\n  }, [onInputSizeChanged]);\n  var handleContentSizeChange = function handleContentSizeChange(_ref2) {\n    var contentSize = _ref2.nativeEvent.contentSize;\n    return determineInputSizeChange(contentSize);\n  };\n  return (0, _jsxRuntime.jsx)(_reactNative.TextInput, Object.assign({\n    testID: placeholder,\n    accessible: true,\n    accessibilityLabel: placeholder,\n    placeholder: placeholder,\n    placeholderTextColor: placeholderTextColor,\n    multiline: multiline,\n    editable: !disableComposer,\n    onContentSizeChange: handleContentSizeChange,\n    onChangeText: onTextChanged,\n    style: [styles.textInput, textInputStyle, Object.assign({\n      height: composerHeight\n    }, _reactNative.Platform.select({\n      web: {\n        outlineWidth: 0,\n        outlineColor: 'transparent',\n        outlineOffset: 0\n      }\n    }))],\n    autoFocus: textInputAutoFocus,\n    value: text,\n    enablesReturnKeyAutomatically: true,\n    underlineColorAndroid: \"transparent\",\n    keyboardAppearance: keyboardAppearance\n  }, textInputProps));\n}\nComposer.propTypes = {\n  composerHeight: _propTypes.default.number,\n  text: _propTypes.default.string,\n  placeholder: _propTypes.default.string,\n  placeholderTextColor: _propTypes.default.string,\n  textInputProps: _propTypes.default.object,\n  onTextChanged: _propTypes.default.func,\n  onInputSizeChanged: _propTypes.default.func,\n  multiline: _propTypes.default.bool,\n  disableComposer: _propTypes.default.bool,\n  textInputStyle: _utils.StylePropType,\n  textInputAutoFocus: _propTypes.default.bool,\n  keyboardAppearance: _propTypes.default.string\n};","map":{"version":3,"names":["_propTypes","_interopRequireDefault","require","_react","_interopRequireWildcard","_reactNative","_Constant","_Color","_utils","_useMemoOne","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","styles","StyleSheet","create","textInput","assign","flex","marginLeft","fontSize","lineHeight","Platform","select","web","paddingTop","paddingLeft","marginTop","ios","android","marginBottom","Composer","_ref","_ref$composerHeight","composerHeight","MIN_COMPOSER_HEIGHT","_ref$disableComposer","disableComposer","_ref$keyboardAppearan","keyboardAppearance","_ref$multiline","multiline","_ref$onInputSizeChang","onInputSizeChanged","_ref$onTextChanged","onTextChanged","_ref$placeholder","placeholder","DEFAULT_PLACEHOLDER","_ref$placeholderTextC","placeholderTextColor","Color","defaultColor","_ref$text","text","_ref$textInputAutoFoc","textInputAutoFocus","_ref$textInputProps","textInputProps","textInputStyle","dimensionsRef","useRef","determineInputSizeChange","useCallbackOne","dimensions","current","width","height","handleContentSizeChange","_ref2","contentSize","nativeEvent","jsx","TextInput","testID","accessible","accessibilityLabel","editable","onContentSizeChange","onChangeText","style","outlineWidth","outlineColor","outlineOffset","autoFocus","value","enablesReturnKeyAutomatically","underlineColorAndroid","propTypes","PropTypes","number","string","object","func","bool","StylePropType"],"sources":["../src/Composer.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}