{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useState, useContext, useEffect } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RemedioContext, RemedioContextProvider } from \"./remedioContext\";\nimport { ContextInfo, ContextInfoProvider } from \"../ContextInfo/contextinfo\";\nimport api from \"../Api_gerenciamento\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar baseURL = 'https://helpx.glitch.me';\nvar Stack = createStackNavigator();\nvar userDados = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var user = yield AsyncStorage.getItem(\"userInfo\");\n      console.log(\"Dados do usuário na página de tratatamento pegos pelo\");\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return function userDados() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport function StackTratamento() {\n  return _jsx(RemedioContextProvider, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Tratamento\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Tratamento\",\n        component: Tratamento,\n        options: {\n          title: 'Tratamento',\n          headerStyle: {\n            backgroundColor: '#97D8AE',\n            borderColor: '#97D8AE',\n            borderWidth: 2,\n            borderBottomLeftRadius: 20,\n            borderBottomRightRadius: 20\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: '500',\n            fontSize: 30\n          },\n          headerTitleAlign: \"center\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AdicionarPost\",\n        component: AdicionarPost,\n        options: {\n          title: 'Adicionar',\n          headerStyle: {\n            backgroundColor: '#97D8AE',\n            borderColor: '#97D8AE',\n            borderWidth: 2,\n            borderBottomLeftRadius: 20,\n            borderBottomRightRadius: 20\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: '500',\n            fontSize: 30\n          },\n          headerTitleAlign: \"center\"\n        }\n      })]\n    })\n  });\n}\nexport function Tratamento() {\n  var navigation = useNavigation();\n  var userDados;\n  useEffect(function () {\n    pegandoId();\n    userDados = pegandoId();\n  }, []);\n  var pegandoId = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var idzinho = yield AsyncStorage.getItem(\"id\");\n      console.log(\"Entrei aqui na home para pegar o id\", idzinho);\n      try {\n        var response = yield api.get(\"/users/logged/\" + idzinho);\n        yield AsyncStorage.setItem(\"userInfo\", response.data);\n        console.log('Dados do usuario', response.data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    });\n    return function pegandoId() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.containerCorpo,\n      children: [_jsxs(View, {\n        style: styles.containerIcons,\n        children: [_jsx(Feather, {\n          name: \"frown\",\n          size: 30,\n          color: \"black\",\n          style: styles.icons\n        }), _jsx(Feather, {\n          name: \"calendar\",\n          size: 30,\n          color: \"black\",\n          style: styles.icons\n        })]\n      }), _jsx(ScrollView, {\n        children: userDados[0].tratamento.map(function (doenca, index) {\n          return _jsx(View, {\n            children: _jsx(PostSanfona, {\n              enfermidade: doenca.enfermidade,\n              data: doenca.periodo,\n              remedio: doenca.droga,\n              indice: doenca.cod_tratamento\n            })\n          }, index);\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.footerBotao,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('AdicionarPost');\n        },\n        children: _jsx(LinearGradient, {\n          colors: ['#CDE4AD', '#97D8AE', '#78D1D2'],\n          style: styles.botaoPlus,\n          children: _jsx(Feather, {\n            name: \"plus\",\n            size: 40,\n            color: \"white\"\n          })\n        })\n      })\n    })]\n  });\n}\nfunction PostSanfona(props) {\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandir = _useState2[0],\n    setExpandir = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useContext = useContext(RemedioContext),\n    userInfo = _useContext.userInfo,\n    setFlagEditando = _useContext.setFlagEditando,\n    setIdEdit = _useContext.setIdEdit,\n    id = _useContext.id;\n  var aa = 1;\n  var _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    toquePostY = _useState6[0],\n    setToquePostY = _useState6[1];\n  function alternarCompressao() {\n    setExpandir(!expandir);\n  }\n  function oi() {\n    alert('oiiiii');\n  }\n  return _jsxs(View, {\n    style: styles.postTratamento,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress(event) {\n        console.log(event.nativeEvent.pageY);\n        var aa = event.nativeEvent.pageY;\n        setToquePostY(aa);\n        alternarCompressao();\n      },\n      onLongPress: oi,\n      children: _jsxs(View, {\n        style: styles.containerDoencas,\n        children: [_jsx(Feather, {\n          name: \"clipboard\",\n          size: 20,\n          style: styles.iconsPosts,\n          onPress: function onPress() {\n            setModalVisible(true);\n          }\n        }), _jsx(Text, {\n          style: styles.textoDoenca,\n          children: props.enfermidade\n        }), _jsx(Text, {\n          style: styles.textoDoenca,\n          children: props.data\n        }), _jsx(Feather, {\n          name: expandir ? 'chevron-up' : 'chevron-down',\n          size: 25,\n          color: \"#bbb\",\n          style: styles.iconsPosts\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: [styles.modalPosicao, {\n              paddingBottom: toquePostY > 450 ? 310 : 0\n            }],\n            children: _jsxs(View, {\n              style: styles.modalzinho,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.botaoModal,\n                onPress: function onPress() {\n                  var tratamento_a_editar = userInfo[0].tratamento.find(function (_ref3) {\n                    var cod_tratamento = _ref3.cod_tratamento;\n                    cod_tratamento == props.indice;\n                  });\n                  setInputDoenca(tratamento_a_editar.enfermidade);\n                  setInputData(tratamento_a_editar.periodo);\n                  setInputRemedio(tratamento_a_editar.droga);\n                  setIdEdit(props.indice);\n                  setFlagEditando(true);\n                  setModalVisible(!modalVisible);\n                  navigation.navigate('AdicionarPost');\n                },\n                children: _jsx(Text, {\n                  style: styles.textoModal,\n                  children: \" Editar\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.botaoModal,\n                onPress: function onPress() {\n                  var deletando_tratamento = function () {\n                    var _ref4 = _asyncToGenerator(function* (cod_tratamento) {\n                      try {\n                        var response = yield api.delete(\"/users/tratamento/\" + id, {\n                          cod_tratamento: cod_tratamento\n                        });\n                        console.log('Dados excluidos: ', response.data);\n                      } catch (error) {\n                        console.log(error.message);\n                        console.log(error.response.data);\n                      }\n                    });\n                    return function deletando_tratamento(_x) {\n                      return _ref4.apply(this, arguments);\n                    };\n                  }();\n                  deletando_tratamento(props.indice);\n                },\n                children: _jsx(Text, {\n                  style: styles.textoModal,\n                  children: \" Excluir\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.botaoModal,\n                onPress: function onPress() {\n                  return setModalVisible(!modalVisible);\n                },\n                children: _jsx(Text, {\n                  style: styles.textoModal,\n                  children: \" Cancelar\"\n                })\n              })]\n            })\n          })\n        })]\n      })\n    }), expandir && _jsxs(Text, {\n      style: [styles.textoDoenca, {\n        fontWeight: 300,\n        width: '100%',\n        textAlign: 'left'\n      }],\n      children: [\"Rem\\xE9dios: \", props.remedio]\n    })]\n  });\n}\nexport function AdicionarPost() {\n  var navigation = useNavigation();\n  var _useContext2 = useContext(RemedioContext),\n    inputRemedio = _useContext2.inputRemedio,\n    setInputRemedio = _useContext2.setInputRemedio,\n    inputDoenca = _useContext2.inputDoenca,\n    setInputDoenca = _useContext2.setInputDoenca,\n    inputData = _useContext2.inputData,\n    setInputData = _useContext2.setInputData,\n    flagEditando = _useContext2.flagEditando,\n    idEdit = _useContext2.idEdit,\n    userInfo = _useContext2.userInfo;\n  var criando_tratamento = function () {\n    var _ref5 = _asyncToGenerator(function* (enfermidade, periodo, droga) {\n      try {\n        var response = yield api.post(\"/users/tratamento/\" + id, enfermidade, periodo, droga);\n        console.log('aaaa', response.data);\n      } catch (error) {\n        console.log(error.message);\n        console.log(error.response.data);\n      }\n    });\n    return function criando_tratamento(_x2, _x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var editando_tratamento = function () {\n    var _ref6 = _asyncToGenerator(function* (enfermidade, periodo, droga, cod_tratamento) {\n      try {\n        var response = yield axios.put(baseURL + \"/users/tratamento/\" + id, enfermidade, periodo, droga, cod_tratamento);\n        console.log('Dados editados', response.data);\n      } catch (error) {\n        console.log(error.message);\n        console.log(error.response.data);\n      }\n    });\n    return function editando_tratamento(_x5, _x6, _x7, _x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.containerCorpo,\n      children: [_jsx(View, {\n        style: styles.containerDoencas,\n        children: _jsx(TextInput, {\n          multiline: true,\n          numberOfLines: 1,\n          blurOnSubmit: true,\n          value: inputDoenca,\n          onChangeText: setInputDoenca,\n          style: styles.input,\n          placeholder: \"Enfermidade\"\n        })\n      }), _jsx(View, {\n        style: styles.containerDoencas,\n        children: _jsx(TextInput, {\n          multiline: true,\n          numberOfLines: 2,\n          style: styles.input,\n          value: inputRemedio,\n          onChangeText: setInputRemedio,\n          placeholder: \"Rem\\xE9dio(s)\"\n        })\n      }), _jsx(View, {\n        style: styles.containerDoencas,\n        children: _jsx(TextInput, {\n          multiline: true,\n          numberOfLines: 2,\n          blurOnSubmit: true,\n          style: styles.input,\n          value: inputData,\n          onChangeText: setInputData,\n          placeholder: \"Data\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.footerBotao,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          i;\n          flagEditando ? editando_tratamento(inputDoenca, inputRemedio, inputData, idEdit) : criando_tratamento(inputDoenca, inputRemedio, inputData);\n          navigation.goBack();\n        },\n        children: _jsx(LinearGradient, {\n          colors: ['#CDE4AD', '#97D8AE', '#78D1D2'],\n          style: styles.botaoPlus,\n          children: _jsx(Feather, {\n            name: \"check-circle\",\n            size: 40,\n            color: \"white\"\n          })\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    flexDirection: 'column',\n    width: 430,\n    height: 800,\n    gap: 11\n  },\n  containerCorpo: {\n    width: '100%',\n    height: '80%',\n    flexDirection: 'column',\n    paddingTop: '10%'\n  },\n  containerIcons: {\n    width: '100%',\n    height: 40,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingLeft: '10%',\n    paddingRight: '10%'\n  },\n  icons: {\n    width: 30,\n    height: 30,\n    alignItems: 'center'\n  },\n  containerDoencas: {\n    width: '100%',\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  postTratamento: {\n    width: '100%',\n    borderWidth: 1,\n    borderColor: '#97D8AE',\n    paddingBottom: 20\n  },\n  iconsPosts: {\n    width: '10%',\n    paddingTop: 25\n  },\n  textoDoenca: {\n    fontWeight: 700,\n    fontSize: 20,\n    alignItems: 'center',\n    textAlign: 'center',\n    color: '#7D7070',\n    paddingTop: 25,\n    width: '40%'\n  },\n  footerBotao: {\n    width: '100%',\n    height: '5%',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    paddingRight: '10%'\n  },\n  botaoPlus: {\n    borderRadius: 30\n  },\n  input: {\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 16,\n    color: 'black',\n    width: '100%',\n    padding: 6,\n    textAlign: 'center'\n  },\n  modalPosicao: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalzinho: {\n    borderWidth: 2,\n    borderColor: 'black',\n    width: '100%',\n    borderRadius: 10,\n    backgroundColor: 'transparent',\n    height: '20%',\n    justifyContent: 'space-evenly'\n  },\n  botaoModal: {\n    backgroundColor: 'white',\n    height: '33.33%',\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  textoModal: {\n    color: '#7D7070',\n    fontSize: 20,\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","Text","View","StyleSheet","ScrollView","TextInput","TouchableOpacity","TouchableHighlight","Modal","KeyboardAvoidingView","NavigationContainer","useNavigation","Feather","LinearGradient","useState","useContext","useEffect","createStackNavigator","RemedioContext","RemedioContextProvider","ContextInfo","ContextInfoProvider","api","AsyncStorage","jsx","_jsx","jsxs","_jsxs","baseURL","Stack","userDados","_ref","_asyncToGenerator","user","getItem","console","log","error","apply","arguments","StackTratamento","children","Navigator","initialRouteName","Screen","name","component","Tratamento","options","title","headerStyle","backgroundColor","borderColor","borderWidth","borderBottomLeftRadius","borderBottomRightRadius","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerTitleAlign","AdicionarPost","navigation","pegandoId","_ref2","idzinho","response","get","setItem","data","message","style","styles","container","containerCorpo","containerIcons","size","color","icons","tratamento","map","doenca","index","PostSanfona","enfermidade","periodo","remedio","droga","indice","cod_tratamento","footerBotao","onPress","navigate","colors","botaoPlus","props","_useState","_useState2","_slicedToArray","expandir","setExpandir","_useState3","_useState4","modalVisible","setModalVisible","_useContext","userInfo","setFlagEditando","setIdEdit","id","aa","_useState5","_useState6","toquePostY","setToquePostY","alternarCompressao","oi","alert","postTratamento","event","nativeEvent","pageY","onLongPress","containerDoencas","iconsPosts","textoDoenca","animationType","transparent","visible","onRequestClose","modalPosicao","paddingBottom","modalzinho","botaoModal","tratamento_a_editar","find","_ref3","setInputDoenca","setInputData","setInputRemedio","textoModal","deletando_tratamento","_ref4","delete","_x","width","textAlign","_useContext2","inputRemedio","inputDoenca","inputData","flagEditando","idEdit","criando_tratamento","_ref5","post","_x2","_x3","_x4","editando_tratamento","_ref6","axios","put","_x5","_x6","_x7","_x8","multiline","numberOfLines","blurOnSubmit","value","onChangeText","input","placeholder","i","goBack","create","alignItems","flexDirection","height","gap","paddingTop","justifyContent","paddingLeft","paddingRight","borderRadius","padding","flex","marginTop"],"sources":["C:/Users/gisele_anjos/Documents/sa.ReactNative2semestre/src/pages/Tratamento/index.js"],"sourcesContent":["\r\nimport * as React from 'react';\r\nimport { Text, View, StyleSheet, ScrollView, TextInput, TouchableOpacity, TouchableHighlight, Modal, KeyboardAvoidingView } from 'react-native';\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\r\nimport Feather from \"@expo/vector-icons/Feather\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { RemedioContext, RemedioContextProvider } from './remedioContext';\r\nimport { ContextInfo, ContextInfoProvider } from '../ContextInfo/contextinfo';\r\nimport api from '../Api_gerenciamento';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nconst baseURL = 'https://helpx.glitch.me'\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst userDados = async () => {\r\n    try {\r\n        const user = await AsyncStorage.getItem(\"userInfo\")\r\n        console.log(\"Dados do usuário na página de tratatamento pegos pelo\")\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\nexport function StackTratamento() {\r\n    return (\r\n        <RemedioContextProvider>\r\n            <Stack.Navigator initialRouteName='Tratamento'>\r\n                <Stack.Screen name='Tratamento' component={Tratamento}\r\n                    options={{\r\n                        title: 'Tratamento',\r\n                        headerStyle: {\r\n                            backgroundColor: '#97D8AE',\r\n                            borderColor: '#97D8AE',\r\n                            borderWidth: 2,\r\n                            borderBottomLeftRadius: 20,\r\n                            borderBottomRightRadius: 20,\r\n\r\n                        },\r\n                        headerTintColor: '#fff',\r\n                        headerTitleStyle: {\r\n                            fontWeight: '500',\r\n                            fontSize: 30,\r\n                        },\r\n                        headerTitleAlign: \"center\",\r\n                    }} />\r\n                <Stack.Screen name='AdicionarPost' component={AdicionarPost} options={{\r\n                    title: 'Adicionar',\r\n                    headerStyle: {\r\n                        backgroundColor: '#97D8AE',\r\n                        borderColor: '#97D8AE',\r\n                        borderWidth: 2,\r\n                        borderBottomLeftRadius: 20,\r\n                        borderBottomRightRadius: 20,\r\n\r\n\r\n                    },\r\n                    headerTintColor: '#fff',\r\n                    headerTitleStyle: {\r\n                        fontWeight: '500',\r\n                        fontSize: 30,\r\n                    },\r\n                    headerTitleAlign: \"center\",\r\n                }} />\r\n            </Stack.Navigator>\r\n        </RemedioContextProvider>\r\n    )\r\n}\r\n\r\n\r\n//  ================== TRATAMENTO FEED (POSTS) =========================\r\nexport function Tratamento() {\r\n const navigation = useNavigation()    \r\n let userDados \r\n//  const {setId, id, setUserInfo, userInfo} = useContext(ContextInfo)\r\n\r\n  useEffect(() => {\r\n    pegandoId()\r\n    userDados = pegandoId()\r\n  }, [])\r\n\r\n  const pegandoId = async () => {\r\n    const idzinho = await AsyncStorage.getItem(\"id\")\r\n    console.log(\"Entrei aqui na home para pegar o id\", idzinho)\r\n\r\n    //Carregando dados do usuário\r\n    try {\r\n      const response = await api.get(`/users/logged/${idzinho}`)\r\n      await AsyncStorage.setItem(\"userInfo\", response.data);\r\n\r\n    \r\n      console.log('Dados do usuario', response.data)\r\n      \r\n    \r\n    } catch (error) {\r\n      console.log(error.message)\r\n      // console.log(error.response.data)\r\n     \r\n\r\n    }\r\n  }\r\n  \r\n//   const arrayTratamento = Userdados[0].tratamento\r\n  \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <View style={styles.containerCorpo}>\r\n                <View style={styles.containerIcons}>\r\n                    <Feather\r\n                        name=\"frown\"\r\n                        size={30}\r\n                        color=\"black\"\r\n                        style={styles.icons}\r\n                    />\r\n                    <Feather\r\n                        name=\"calendar\"\r\n                        size={30}\r\n                        color=\"black\"\r\n                        style={styles.icons}\r\n                    />\r\n\r\n\r\n                </View>\r\n                <ScrollView>\r\n\r\n                    {\r\n                        \r\n                    userDados[0].tratamento.map((doenca, index) => (\r\n                        //  Criando post. \r\n                        // Uso de props para envio dos values para o componente PostSanfona onde tem o modal.\r\n                        //  Através do map, é acessado os values dos objeto, que foi criado na pagina de context\r\n                        <View key={index} >\r\n                            <PostSanfona enfermidade={doenca.enfermidade} data={doenca.periodo} remedio={doenca.droga} indice={doenca.cod_tratamento} />\r\n\r\n                        </View>\r\n                    ))\r\n                    \r\n                    \r\n                    \r\n                    }\r\n                </ScrollView>\r\n\r\n\r\n            </View>\r\n\r\n            <View style={styles.footerBotao}>\r\n                <TouchableOpacity onPress={() => navigation.navigate('AdicionarPost')}>\r\n\r\n                    <LinearGradient\r\n                        // Button Linear Gradient\r\n                        colors={['#CDE4AD', '#97D8AE', '#78D1D2']}\r\n                        style={styles.botaoPlus}>\r\n                        <Feather\r\n                            name=\"plus\"\r\n                            size={40}\r\n                            color=\"white\"\r\n\r\n                        />\r\n                    </LinearGradient>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View >\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nfunction PostSanfona(props) {\r\n    const navigation = useNavigation()\r\n    const [expandir, setExpandir] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const { userInfo, setFlagEditando, setIdEdit, id } = useContext(RemedioContext)\r\n    const aa = 1\r\n    // Pegando posição y do touch do usuário no post para modificar a posição do modal\r\n    const [toquePostY, setToquePostY] = useState(1)\r\n\r\n\r\n\r\n    function alternarCompressao() {\r\n        setExpandir(!expandir);\r\n    }\r\n    function oi() {\r\n        alert('oiiiii')\r\n    }\r\n\r\n    // function verificarPosicaoToque(toque){\r\n    //     console.log('Verificando posição do toque na pagina')\r\n    //     useEffect(() =>{\r\n\r\n    //         console.log(\"PageY\", toquePostY)\r\n    //         setToquePostY(toque)\r\n    //     }, [toque])\r\n    // }\r\n\r\n    return (\r\n        <View style={styles.postTratamento}>\r\n            <TouchableOpacity\r\n                onPress={(event) => {\r\n                    console.log(event.nativeEvent.pageY)\r\n                    const aa = event.nativeEvent.pageY\r\n                    setToquePostY(aa)\r\n                    // verificarPosicaoToque(aa)\r\n\r\n\r\n                    alternarCompressao()\r\n                }\r\n                }\r\n                onLongPress={oi}\r\n            >\r\n                <View style={styles.containerDoencas} >\r\n                    <Feather name='clipboard' size={20}\r\n                        style={styles.iconsPosts}\r\n                        onPress={() => { setModalVisible(true) }} />\r\n                    <Text style={styles.textoDoenca}>{props.enfermidade}</Text>\r\n                    <Text style={styles.textoDoenca}>{props.data}</Text>\r\n\r\n                    <Feather name={expandir ? 'chevron-up' : 'chevron-down'}\r\n                        size={25} color=\"#bbb\" style={styles.iconsPosts} />\r\n\r\n\r\n                    {/* ========== MODAL (Botões: editar e excluir) =========== */}\r\n                    <Modal\r\n\r\n                        animationType=\"slide\"\r\n                        transparent={true}\r\n                        visible={modalVisible}\r\n                        onRequestClose={() => {\r\n                            setModalVisible(!modalVisible);\r\n                        }}\r\n                    >\r\n                        <View style={[styles.modalPosicao, { paddingBottom: toquePostY > 450 ? 310 : 0 }]}>\r\n\r\n                            <View style={styles.modalzinho}>\r\n\r\n                                <TouchableOpacity\r\n                                    style={styles.botaoModal}\r\n                                    onPress={() => {\r\n                                        const tratamento_a_editar = userInfo[0].tratamento.find(({ cod_tratamento }) => { cod_tratamento == (props.indice) })\r\n                                        setInputDoenca(tratamento_a_editar.enfermidade)\r\n                                        setInputData(tratamento_a_editar.periodo)\r\n                                        setInputRemedio(tratamento_a_editar.droga)\r\n\r\n                                        setIdEdit(props.indice)\r\n                                        setFlagEditando(true)\r\n                                        setModalVisible(!modalVisible)\r\n                                        navigation.navigate('AdicionarPost')\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    <Text style={styles.textoModal}> Editar</Text>\r\n                                </TouchableOpacity>\r\n\r\n                                <TouchableOpacity\r\n                                    style={styles.botaoModal}\r\n                                    onPress={() => {\r\n                                        const deletando_tratamento = async (cod_tratamento) => {\r\n                                            try {\r\n                                                const response = await api\r\n                                                    .delete(`/users/tratamento/${id}`, { cod_tratamento})\r\n\r\n                                                console.log('Dados excluidos: ', response.data)\r\n                                            } catch (error) {\r\n                                                console.log(error.message)\r\n                                                console.log(error.response.data)\r\n\r\n                                            }\r\n                                        }\r\n                                        deletando_tratamento(props.indice)\r\n\r\n                                    }}>\r\n                                    <Text style={styles.textoModal}> Excluir</Text>\r\n                                </TouchableOpacity>\r\n\r\n\r\n                                <TouchableOpacity\r\n                                    style={styles.botaoModal}\r\n                                    onPress={() => setModalVisible(!modalVisible)}>\r\n                                    <Text style={styles.textoModal}> Cancelar</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </Modal>\r\n\r\n                    {/* ============== FIM MODAL =========== */}\r\n\r\n                    {/* <TouchableOpacity\r\n                        onPress={() => {setModalVisible(true)}}\r\n                    >\r\n                    </TouchableOpacity> */}\r\n\r\n                </View>\r\n            </TouchableOpacity>\r\n            {\r\n                expandir && <Text style={[styles.textoDoenca, { fontWeight: 300, width: '100%', textAlign: 'left' }]}>Remédios: {props.remedio}</Text>\r\n            }\r\n\r\n        </View>\r\n    );\r\n}\r\n// =================== Adicionar TRATAMENTOS =======================\r\n\r\n\r\nexport function AdicionarPost() {\r\n    const navigation = useNavigation()\r\n    const { inputRemedio, setInputRemedio, inputDoenca, setInputDoenca,\r\n        inputData, setInputData, flagEditando, idEdit, userInfo } = useContext(RemedioContext)\r\n\r\n    const criando_tratamento = async (enfermidade, periodo, droga) => {\r\n        try {\r\n            const response = await api.post(`/users/tratamento/${id}`, enfermidade, periodo, droga)\r\n\r\n            console.log('aaaa', response.data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n            console.log(error.response.data)\r\n\r\n        }\r\n    }\r\n    const editando_tratamento = async (enfermidade, periodo, droga,cod_tratamento) => {\r\n        try {\r\n            const response = await axios\r\n                .put(`${baseURL}/users/tratamento/${id}`, enfermidade, periodo, droga, cod_tratamento)\r\n\r\n            console.log('Dados editados', response.data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n            console.log(error.response.data)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.containerCorpo}>\r\n                <View style={styles.containerDoencas}>\r\n                    <TextInput\r\n                        multiline\r\n                        numberOfLines={1}\r\n                        blurOnSubmit\r\n                        value={inputDoenca}\r\n                        onChangeText={setInputDoenca}\r\n                        style={styles.input}\r\n                        placeholder=\"Enfermidade\"\r\n\r\n                    />\r\n                </View>\r\n\r\n                <View style={styles.containerDoencas}>\r\n                    <TextInput\r\n                        multiline\r\n                        numberOfLines={2}\r\n\r\n                        style={styles.input}\r\n                        value={inputRemedio}\r\n\r\n                        onChangeText={setInputRemedio}\r\n\r\n                        placeholder=\"Remédio(s)\"\r\n\r\n                    />\r\n\r\n\r\n\r\n                </View>\r\n\r\n                <View style={styles.containerDoencas}>\r\n                    <TextInput\r\n                        multiline\r\n                        numberOfLines={2}\r\n                        blurOnSubmit\r\n                        style={styles.input}\r\n                        value={inputData}\r\n                        onChangeText={setInputData}\r\n                        placeholder=\"Data\"\r\n\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={styles.footerBotao}>\r\n                <TouchableOpacity onPress={() => {\r\n                    // Os valores dos inputs são transferidos para o context, \r\n                    // onde o objeto é construido. \r\n                    i\r\n                    flagEditando ?\r\n\r\n                        editando_tratamento(inputDoenca, inputRemedio, inputData, idEdit)\r\n                        :\r\n                        criando_tratamento(inputDoenca, inputRemedio, inputData)\r\n                    navigation.goBack()\r\n                }\r\n                }\r\n                >\r\n                    <LinearGradient\r\n                        // Button Linear Gradient\r\n                        colors={['#CDE4AD', '#97D8AE', '#78D1D2']}\r\n                        style={styles.botaoPlus}>\r\n                        <Feather\r\n                            name=\"check-circle\"\r\n                            size={40}\r\n                            color=\"white\"\r\n\r\n                        />\r\n                    </LinearGradient>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View >\r\n\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        // flex: 1,\r\n        // backgroundColor: \"#C7FFCC\",\r\n        alignItems: \"center\",\r\n        flexDirection: 'column',\r\n        width: 430,\r\n        height: 800,\r\n        gap: 11,\r\n    },\r\n    containerCorpo: {\r\n        width: '100%',\r\n        height: '80%',\r\n        flexDirection: 'column',\r\n        paddingTop: '10%'\r\n\r\n    },\r\n    containerIcons: {\r\n        width: '100%',\r\n        height: 40,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%'\r\n\r\n    },\r\n    icons: {\r\n        width: 30,\r\n        height: 30,\r\n        alignItems: 'center',\r\n    },\r\n    containerDoencas: {\r\n        width: '100%',\r\n        height: 50,\r\n        // borderWidth: 1,\r\n        // borderColor: '#97D8AE',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        // alignItems: 'stretch'\r\n\r\n\r\n    },\r\n    postTratamento: {\r\n        width: '100%',\r\n        borderWidth: 1,\r\n        borderColor: '#97D8AE',\r\n        paddingBottom: 20\r\n    },\r\n    iconsPosts: {\r\n        width: '10%',\r\n        paddingTop: 25\r\n    },\r\n    textoDoenca: {\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        // lineHeight: 17,\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        color: '#7D7070',\r\n        paddingTop: 25,\r\n        width: '40%',\r\n\r\n    },\r\n    footerBotao: {\r\n        width: '100%',\r\n        height: '5%',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-end',\r\n        paddingRight: '10%'\r\n    },\r\n    botaoPlus: {\r\n        borderRadius: 30,\r\n        // backgroundColor: '#97D8AE'\r\n    },\r\n    input: {\r\n        borderWidth: 2,\r\n        borderColor: 'white',\r\n        borderRadius: 16,\r\n        color: 'black',\r\n        width: '100%',\r\n        padding: 6,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    modalPosicao: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 22,\r\n    },\r\n    modalzinho: {\r\n        borderWidth: 2,\r\n        borderColor: 'black',\r\n        width: '100%',\r\n        borderRadius: 10,\r\n        backgroundColor: 'transparent',\r\n        height: '20%',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    botaoModal: {\r\n        backgroundColor: 'white',\r\n        height: '33.33%',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    textoModal: {\r\n        color: '#7D7070',\r\n        fontSize: 20,\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}