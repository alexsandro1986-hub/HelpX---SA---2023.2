{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _overlay = _interopRequireDefault(require(\"../../styles/overlay\"));\nvar _colors = require(\"../../styles/themes/v2/colors\");\nvar _useAnimatedValue = _interopRequireDefault(require(\"../../utils/useAnimatedValue\"));\nvar _useAnimatedValueArray = _interopRequireDefault(require(\"../../utils/useAnimatedValueArray\"));\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../../utils/useIsKeyboardShown\"));\nvar _useLayout3 = _interopRequireDefault(require(\"../../utils/useLayout\"));\nvar _Badge = _interopRequireDefault(require(\"../Badge\"));\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"route\", \"style\", \"children\", \"borderless\", \"centered\", \"rippleColor\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar MIN_RIPPLE_SCALE = 0.001;\nvar MIN_TAB_WIDTH = 96;\nvar MAX_TAB_WIDTH = 168;\nvar BAR_HEIGHT = 56;\nvar OUTLINE_WIDTH = 64;\nvar Touchable = function Touchable(_ref) {\n  var _0 = _ref.route,\n    style = _ref.style,\n    children = _ref.children,\n    borderless = _ref.borderless,\n    centered = _ref.centered,\n    rippleColor = _ref.rippleColor,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  return _TouchableRipple.default.supported ? React.createElement(_TouchableRipple.default, _extends({}, rest, {\n    disabled: rest.disabled || undefined,\n    borderless: borderless,\n    centered: centered,\n    rippleColor: rippleColor,\n    style: style\n  }), children) : React.createElement(_reactNative.TouchableWithoutFeedback, rest, React.createElement(_reactNative.View, {\n    style: style\n  }, children));\n};\nvar BottomNavigationBar = function BottomNavigationBar(_ref2) {\n  var _ref9, _ref10, _ref11;\n  var navigationState = _ref2.navigationState,\n    renderIcon = _ref2.renderIcon,\n    renderLabel = _ref2.renderLabel,\n    _ref2$renderTouchable = _ref2.renderTouchable,\n    renderTouchable = _ref2$renderTouchable === void 0 ? function (props) {\n      return React.createElement(Touchable, props);\n    } : _ref2$renderTouchable,\n    _ref2$getLabelText = _ref2.getLabelText,\n    getLabelText = _ref2$getLabelText === void 0 ? function (_ref3) {\n      var route = _ref3.route;\n      return route.title;\n    } : _ref2$getLabelText,\n    _ref2$getBadge = _ref2.getBadge,\n    getBadge = _ref2$getBadge === void 0 ? function (_ref4) {\n      var route = _ref4.route;\n      return route.badge;\n    } : _ref2$getBadge,\n    _ref2$getColor = _ref2.getColor,\n    getColor = _ref2$getColor === void 0 ? function (_ref5) {\n      var route = _ref5.route;\n      return route.color;\n    } : _ref2$getColor,\n    _ref2$getAccessibilit = _ref2.getAccessibilityLabel,\n    getAccessibilityLabel = _ref2$getAccessibilit === void 0 ? function (_ref6) {\n      var route = _ref6.route;\n      return route.accessibilityLabel;\n    } : _ref2$getAccessibilit,\n    _ref2$getTestID = _ref2.getTestID,\n    getTestID = _ref2$getTestID === void 0 ? function (_ref7) {\n      var route = _ref7.route;\n      return route.testID;\n    } : _ref2$getTestID,\n    activeColor = _ref2.activeColor,\n    inactiveColor = _ref2.inactiveColor,\n    _ref2$keyboardHidesNa = _ref2.keyboardHidesNavigationBar,\n    keyboardHidesNavigationBar = _ref2$keyboardHidesNa === void 0 ? _reactNative.Platform.OS === 'android' : _ref2$keyboardHidesNa,\n    style = _ref2.style,\n    _ref2$labeled = _ref2.labeled,\n    labeled = _ref2$labeled === void 0 ? true : _ref2$labeled,\n    animationEasing = _ref2.animationEasing,\n    onTabPress = _ref2.onTabPress,\n    onTabLongPress = _ref2.onTabLongPress,\n    shiftingProp = _ref2.shifting,\n    safeAreaInsets = _ref2.safeAreaInsets,\n    _ref2$labelMaxFontSiz = _ref2.labelMaxFontSizeMultiplier,\n    labelMaxFontSizeMultiplier = _ref2$labelMaxFontSiz === void 0 ? 1 : _ref2$labelMaxFontSiz,\n    compactProp = _ref2.compact,\n    _ref2$testID = _ref2.testID,\n    testID = _ref2$testID === void 0 ? 'bottom-navigation-bar' : _ref2$testID,\n    themeOverrides = _ref2.theme;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _useSafeAreaInsets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)(),\n    bottom = _useSafeAreaInsets.bottom,\n    left = _useSafeAreaInsets.left,\n    right = _useSafeAreaInsets.right;\n  var scale = theme.animation.scale;\n  var compact = compactProp != null ? compactProp : !theme.isV3;\n  var shifting = shiftingProp != null ? shiftingProp : theme.isV3 ? false : navigationState.routes.length > 3;\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn('BottomNavigation.Bar needs at least 2 tabs to run shifting animation');\n  }\n  var visibleAnim = (0, _useAnimatedValue.default)(1);\n  var tabsAnims = (0, _useAnimatedValueArray.default)(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 1 : 0;\n  }));\n  var indexAnim = (0, _useAnimatedValue.default)(navigationState.index);\n  var rippleAnim = (0, _useAnimatedValue.default)(MIN_RIPPLE_SCALE);\n  var _useLayout = (0, _useLayout3.default)(),\n    _useLayout2 = (0, _slicedToArray2.default)(_useLayout, 2),\n    layout = _useLayout2[0],\n    onLayout = _useLayout2[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    keyboardVisible = _React$useState2[0],\n    setKeyboardVisible = _React$useState2[1];\n  var handleKeyboardShow = React.useCallback(function () {\n    setKeyboardVisible(true);\n    _reactNative.Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [scale, visibleAnim]);\n  var handleKeyboardHide = React.useCallback(function () {\n    _reactNative.Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(function () {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n  var animateToIndex = React.useCallback(function (index) {\n    rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    _reactNative.Animated.parallel([_reactNative.Animated.timing(rippleAnim, {\n      toValue: 1,\n      duration: theme.isV3 || shifting ? 400 * scale : 0,\n      useNativeDriver: true\n    })].concat((0, _toConsumableArray2.default)(navigationState.routes.map(function (_, i) {\n      return _reactNative.Animated.timing(tabsAnims[i], {\n        toValue: i === index ? 1 : 0,\n        duration: theme.isV3 || shifting ? 150 * scale : 0,\n        useNativeDriver: true,\n        easing: animationEasing\n      });\n    })))).start(function () {\n      tabsAnims.map(function (tab, i) {\n        return tab.setValue(i === index ? 1 : 0);\n      });\n      indexAnim.setValue(index);\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    });\n  }, [rippleAnim, theme.isV3, shifting, scale, navigationState.routes, tabsAnims, animationEasing, indexAnim]);\n  React.useEffect(function () {\n    animateToIndex(navigationState.index);\n  }, []);\n  (0, _useIsKeyboardShown.default)({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide\n  });\n  React.useEffect(function () {\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex]);\n  var eventForIndex = function eventForIndex(index) {\n    var event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: function preventDefault() {\n        event.defaultPrevented = true;\n      }\n    };\n    return event;\n  };\n  var routes = navigationState.routes;\n  var colors = theme.colors,\n    isDarkTheme = theme.dark,\n    mode = theme.mode,\n    isV3 = theme.isV3;\n  var _ref8 = _reactNative.StyleSheet.flatten(style) || {},\n    customBackground = _ref8.backgroundColor,\n    _ref8$elevation = _ref8.elevation,\n    elevation = _ref8$elevation === void 0 ? 4 : _ref8$elevation;\n  var approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? (0, _overlay.default)(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.primary;\n  var v2BackgroundColorInterpolation = shifting ? indexAnim.interpolate({\n    inputRange: routes.map(function (_, i) {\n      return i;\n    }),\n    outputRange: routes.map(function (route) {\n      return getColor({\n        route: route\n      }) || approxBackgroundColor;\n    })\n  }) : approxBackgroundColor;\n  var backgroundColor = isV3 ? customBackground || theme.colors.elevation.level2 : shifting ? v2BackgroundColorInterpolation : approxBackgroundColor;\n  var isDark = typeof approxBackgroundColor === 'string' ? !(0, _color.default)(approxBackgroundColor).isLight() : true;\n  var textColor = isDark ? _colors.white : _colors.black;\n  var activeTintColor = (0, _utils.getActiveTintColor)({\n    activeColor: activeColor,\n    defaultColor: textColor,\n    theme: theme\n  });\n  var inactiveTintColor = (0, _utils.getInactiveTintColor)({\n    inactiveColor: inactiveColor,\n    defaultColor: textColor,\n    theme: theme\n  });\n  var touchColor = (0, _color.default)(activeTintColor).alpha(0.12).rgb().string();\n  var maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  var maxTabBarWidth = maxTabWidth * routes.length;\n  var rippleSize = layout.width / 4;\n  var insets = {\n    left: (_ref9 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) != null ? _ref9 : left,\n    right: (_ref10 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) != null ? _ref10 : right,\n    bottom: (_ref11 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) != null ? _ref11 : bottom\n  };\n  return React.createElement(_Surface.default, _extends({}, theme.isV3 && {\n    elevation: 0\n  }, {\n    testID: testID,\n    style: [!theme.isV3 && styles.elevation, styles.bar, keyboardHidesNavigationBar ? {\n      transform: [{\n        translateY: visibleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      position: keyboardVisible ? 'absolute' : undefined\n    } : null, style],\n    pointerEvents: layout.measured ? keyboardHidesNavigationBar && keyboardVisible ? 'none' : 'auto' : 'none',\n    onLayout: onLayout\n  }), React.createElement(_reactNative.Animated.View, {\n    style: [styles.barContent, {\n      backgroundColor: backgroundColor\n    }],\n    testID: testID + \"-content\"\n  }, React.createElement(_reactNative.View, {\n    style: [styles.items, {\n      marginBottom: insets.bottom,\n      marginHorizontal: Math.max(insets.left, insets.right)\n    }, compact && {\n      maxWidth: maxTabBarWidth\n    }],\n    accessibilityRole: 'tablist',\n    testID: testID + \"-content-wrapper\"\n  }, shifting && !isV3 ? React.createElement(_reactNative.Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.ripple, {\n      top: (BAR_HEIGHT - rippleSize) / 2,\n      left: Math.min(layout.width, maxTabBarWidth) / routes.length * (navigationState.index + 0.5) - rippleSize / 2,\n      height: rippleSize,\n      width: rippleSize,\n      borderRadius: rippleSize / 2,\n      backgroundColor: getColor({\n        route: routes[navigationState.index]\n      }),\n      transform: [{\n        scale: rippleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 8]\n        })\n      }],\n      opacity: rippleAnim.interpolate({\n        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n        outputRange: [0, 0, 1, 1]\n      })\n    }],\n    testID: testID + \"-content-ripple\"\n  }) : null, routes.map(function (route, index) {\n    var focused = navigationState.index === index;\n    var active = tabsAnims[index];\n    var scale = labeled && shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n    var translateY = labeled ? shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [7, 0]\n    }) : 0 : 7;\n    var activeOpacity = active;\n    var inactiveOpacity = active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    });\n    var v3ActiveOpacity = focused ? 1 : 0;\n    var v3InactiveOpacity = shifting ? inactiveOpacity : focused ? 0 : 1;\n    var outlineScale = focused ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 0;\n    var badge = getBadge({\n      route: route\n    });\n    var activeLabelColor = (0, _utils.getLabelColor)({\n      tintColor: activeTintColor,\n      hasColor: Boolean(activeColor),\n      focused: focused,\n      defaultColor: textColor,\n      theme: theme\n    });\n    var inactiveLabelColor = (0, _utils.getLabelColor)({\n      tintColor: inactiveTintColor,\n      hasColor: Boolean(inactiveColor),\n      focused: focused,\n      defaultColor: textColor,\n      theme: theme\n    });\n    var badgeStyle = {\n      top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n      right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - (!isV3 ? 2 : 0)\n    };\n    var isV3Shifting = isV3 && shifting && labeled;\n    var font = isV3 ? theme.fonts.labelMedium : {};\n    return renderTouchable({\n      key: route.key,\n      route: route,\n      borderless: true,\n      centered: true,\n      rippleColor: isV3 ? 'transparent' : touchColor,\n      onPress: function onPress() {\n        return onTabPress(eventForIndex(index));\n      },\n      onLongPress: function onLongPress() {\n        return onTabLongPress === null || onTabLongPress === void 0 ? void 0 : onTabLongPress(eventForIndex(index));\n      },\n      testID: getTestID({\n        route: route\n      }),\n      accessibilityLabel: getAccessibilityLabel({\n        route: route\n      }),\n      accessibilityRole: _reactNative.Platform.OS === 'ios' ? 'button' : 'tab',\n      accessibilityState: {\n        selected: focused\n      },\n      style: [styles.item, isV3 && styles.v3Item],\n      children: React.createElement(_reactNative.View, {\n        pointerEvents: \"none\",\n        style: isV3 && (labeled ? styles.v3TouchableContainer : styles.v3NoLabelContainer)\n      }, React.createElement(_reactNative.Animated.View, {\n        style: [styles.iconContainer, isV3 && styles.v3IconContainer, (!isV3 || isV3Shifting) && {\n          transform: [{\n            translateY: translateY\n          }]\n        }]\n      }, isV3 && focused && React.createElement(_reactNative.Animated.View, {\n        style: [styles.outline, {\n          transform: [{\n            scaleX: outlineScale\n          }],\n          backgroundColor: theme.colors.secondaryContainer\n        }]\n      }), React.createElement(_reactNative.Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3ActiveOpacity : activeOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: true,\n        color: activeTintColor\n      }) : React.createElement(_Icon.default, {\n        source: route.focusedIcon,\n        color: activeTintColor,\n        size: 24\n      })), React.createElement(_reactNative.Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3InactiveOpacity : inactiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: false,\n        color: inactiveTintColor\n      }) : React.createElement(_Icon.default, {\n        source: theme.isV3 && route.unfocusedIcon !== undefined ? route.unfocusedIcon : route.focusedIcon,\n        color: inactiveTintColor,\n        size: 24\n      })), React.createElement(_reactNative.View, {\n        style: [styles.badgeContainer, badgeStyle]\n      }, typeof badge === 'boolean' ? React.createElement(_Badge.default, {\n        visible: badge,\n        size: isV3 ? 6 : 8\n      }) : React.createElement(_Badge.default, {\n        visible: badge != null,\n        size: 16\n      }, badge))), labeled ? React.createElement(_reactNative.Animated.View, {\n        style: [styles.labelContainer, !isV3 && {\n          transform: [{\n            scale: scale\n          }]\n        }]\n      }, React.createElement(_reactNative.Animated.View, {\n        style: [styles.labelWrapper, (!isV3 || isV3Shifting) && {\n          opacity: activeOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: true,\n        color: activeLabelColor\n      }) : React.createElement(_Text.default, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        style: [styles.label, Object.assign({\n          color: activeLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      }))), shifting ? null : React.createElement(_reactNative.Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: false,\n        color: inactiveLabelColor\n      }) : React.createElement(_Text.default, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        selectable: false,\n        style: [styles.label, Object.assign({\n          color: inactiveLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      })))) : !isV3 && React.createElement(_reactNative.View, {\n        style: styles.labelContainer\n      }))\n    });\n  }))));\n};\nBottomNavigationBar.displayName = 'BottomNavigation.Bar';\nvar _default = exports.default = BottomNavigationBar;\nvar styles = _reactNative.StyleSheet.create({\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: Object.assign({\n    flexDirection: 'row'\n  }, _reactNative.Platform.OS === 'web' ? {\n    width: '100%'\n  } : null),\n  item: {\n    flex: 1,\n    paddingVertical: 6\n  },\n  v3Item: {\n    paddingVertical: 0\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  iconWrapper: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    alignItems: 'center'\n  }),\n  v3IconWrapper: {\n    top: 4\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject),\n  label: Object.assign({\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  }, _reactNative.Platform.OS === 'web' ? {\n    whiteSpace: 'nowrap',\n    alignSelf: 'center'\n  } : null),\n  badgeContainer: {\n    position: 'absolute',\n    left: 0\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center'\n  },\n  elevation: {\n    elevation: 4\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_color","_interopRequireDefault","_reactNativeSafeAreaContext","_utils","_theming","_overlay","_colors","_useAnimatedValue","_useAnimatedValueArray","_useIsKeyboardShown","_useLayout3","_Badge","_Icon","_Surface","_TouchableRipple","_Text","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","OUTLINE_WIDTH","Touchable","_ref","_0","route","style","children","borderless","centered","rippleColor","rest","_objectWithoutProperties2","TouchableRipple","supported","createElement","_extends","disabled","undefined","TouchableWithoutFeedback","View","BottomNavigationBar","_ref2","_ref9","_ref10","_ref11","navigationState","renderIcon","renderLabel","_ref2$renderTouchable","renderTouchable","props","_ref2$getLabelText","getLabelText","_ref3","title","_ref2$getBadge","getBadge","_ref4","badge","_ref2$getColor","getColor","_ref5","color","_ref2$getAccessibilit","getAccessibilityLabel","_ref6","accessibilityLabel","_ref2$getTestID","getTestID","_ref7","testID","activeColor","inactiveColor","_ref2$keyboardHidesNa","keyboardHidesNavigationBar","Platform","OS","_ref2$labeled","labeled","animationEasing","onTabPress","onTabLongPress","shiftingProp","shifting","safeAreaInsets","_ref2$labelMaxFontSiz","labelMaxFontSizeMultiplier","compactProp","compact","_ref2$testID","themeOverrides","theme","useInternalTheme","_useSafeAreaInsets","useSafeAreaInsets","bottom","left","right","scale","animation","isV3","routes","length","console","warn","visibleAnim","useAnimatedValue","tabsAnims","useAnimatedValueArray","map","_","i","index","indexAnim","rippleAnim","_useLayout","useLayout","_useLayout2","_slicedToArray2","layout","onLayout","_React$useState","useState","_React$useState2","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","Animated","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","concat","_toConsumableArray2","easing","tab","useEffect","useIsKeyboardShown","onShow","onHide","eventForIndex","event","defaultPrevented","preventDefault","colors","isDarkTheme","dark","mode","_ref8","StyleSheet","flatten","customBackground","backgroundColor","_ref8$elevation","elevation","approxBackgroundColor","overlay","surface","primary","v2BackgroundColorInterpolation","interpolate","inputRange","outputRange","level2","isDark","isLight","textColor","white","black","activeTintColor","getActiveTintColor","defaultColor","inactiveTintColor","getInactiveTintColor","touchColor","alpha","rgb","string","maxTabWidth","maxTabBarWidth","rippleSize","width","insets","Surface","styles","bar","transform","translateY","height","position","pointerEvents","measured","barContent","items","marginBottom","marginHorizontal","Math","max","maxWidth","accessibilityRole","ripple","top","min","borderRadius","opacity","focused","active","activeOpacity","inactiveOpacity","v3ActiveOpacity","v3InactiveOpacity","outlineScale","activeLabelColor","getLabelColor","tintColor","hasColor","Boolean","inactiveLabelColor","badgeStyle","String","isV3Shifting","font","fonts","labelMedium","onPress","onLongPress","accessibilityState","selected","item","v3Item","v3TouchableContainer","v3NoLabelContainer","iconContainer","v3IconContainer","outline","scaleX","secondaryContainer","iconWrapper","v3IconWrapper","Icon","source","focusedIcon","size","unfocusedIcon","badgeContainer","Badge","visible","labelContainer","labelWrapper","Text","maxFontSizeMultiplier","variant","label","assign","selectable","displayName","_default","exports","create","alignItems","overflow","flexDirection","flex","paddingVertical","marginTop","alignSelf","justifyContent","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace","paddingTop"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\BottomNavigation\\BottomNavigationBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  EasingFunction,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport {\n  getActiveTintColor,\n  getInactiveTintColor,\n  getLabelColor,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport useLayout from '../../utils/useLayout';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype BaseRoute = {\n  key: string;\n  title?: string;\n  focusedIcon?: IconSource;\n  unfocusedIcon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n  lazy?: boolean;\n};\n\ntype NavigationState<Route extends BaseRoute> = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps<Route extends BaseRoute> = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: ColorValue;\n};\n\nexport type Props<Route extends BaseRoute> = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `false` with theme version 3 and `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   * Note that you need at least 2 tabs be able to run this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * Whether tabs should be spread across the entire width.\n   */\n  compact?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `focusedIcon`:  icon to use as the focused tab icon, can be a string, an image source or a react component @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * - `unfocusedIcon`:  icon to use as the unfocused tab icon, can be a string, an image source or a react component @supported Available in v5.x with theme version 3\n   * - `color`: color to use as background color for shifting bottom navigation @deprecated Deprecated in v5.x\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n   *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n   *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n   *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation.Bar` is a controlled component, which means the `index` needs to be updated via the `onTabPress` callback.\n   */\n  navigationState: NavigationState<Route>;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps<Route>) => React.ReactNode;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab. Use this to update the navigation state.\n   */\n  onTabPress: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Function to execute on tab long press. It receives the route for the pressed tab\n   */\n  onTabLongPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * The scene animation Easing.\n   */\n  animationEasing?: EasingFunction | undefined;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst OUTLINE_WIDTH = 64;\n\nconst Touchable = <Route extends BaseRoute>({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps<Route>) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\n/**\n * A navigation bar which can easily be integrated with [React Navigation's Bottom Tabs Navigator](https://reactnavigation.org/docs/bottom-tab-navigator/).\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import { View, StyleSheet } from 'react-native';\n *\n * import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n * import { Text, BottomNavigation } from 'react-native-paper';\n * import Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n *\n * const Tab = createBottomTabNavigator();\n *\n * export default function MyComponent() {\n *   return (\n *     <Tab.Navigator\n *       screenOptions={{\n *         headerShown: false,\n *       }}\n *       tabBar={({ navigation, state, descriptors, insets }) => (\n *         <BottomNavigation.Bar\n *           navigationState={state}\n *          safeAreaInsets={insets}\n *           onTabPress={({ route, preventDefault }) => {\n *             const event = navigation.emit({\n *               type: 'tabPress',\n *               target: route.key,\n *               canPreventDefault: true,\n *             });\n *\n *             if (event.defaultPrevented) {\n *               preventDefault();\n *             } else {\n *              navigation.dispatch({\n *                 ...CommonActions.navigate(route.name, route.params),\n *                 target: state.key,\n *               });\n *             }\n *           }}\n *           renderIcon={({ route, focused, color }) => {\n *             const { options } = descriptors[route.key];\n *             if (options.tabBarIcon) {\n *               return options.tabBarIcon({ focused, color, size: 24 });\n *             }\n *\n *             return null;\n *           }}\n *           getLabelText={({ route }) => {\n *             const { options } = descriptors[route.key];\n *             const label =\n *               options.tabBarLabel !== undefined\n *                 ? options.tabBarLabel\n *                 : options.title !== undefined\n *                 ? options.title\n *                 : route.title;\n *\n *             return label;\n *           }}\n *         />\n *       )}\n *     >\n *       <Tab.Screen\n *         name=\"Home\"\n *         component={HomeScreen}\n *         options={{\n *           tabBarLabel: 'Home',\n *           tabBarIcon: ({ color, size }) => {\n *             return <Icon name=\"home\" size={size} color={color} />;\n *           },\n *         }}\n *       />\n *       <Tab.Screen\n *         name=\"Settings\"\n *         component={SettingsScreen}\n *         options={{\n *           tabBarLabel: 'Settings',\n *           tabBarIcon: ({ color, size }) => {\n *             return <Icon name=\"cog\" size={size} color={color} />;\n *           },\n *         }}\n *       />\n *     </Tab.Navigator>\n *   );\n * }\n *\n * function HomeScreen() {\n *   return (\n *     <View style={styles.container}>\n *       <Text variant=\"headlineMedium\">Home!</Text>\n *     </View>\n *   );\n * }\n *\n * function SettingsScreen() {\n *   return (\n *     <View style={styles.container}>\n *       <Text variant=\"headlineMedium\">Settings!</Text>\n *     </View>\n *   );\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n */\nconst BottomNavigationBar = <Route extends BaseRoute>({\n  navigationState,\n  renderIcon,\n  renderLabel,\n  renderTouchable = (props: TouchableProps<Route>) => <Touchable {...props} />,\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = Platform.OS === 'android',\n  style,\n  labeled = true,\n  animationEasing,\n  onTabPress,\n  onTabLongPress,\n  shifting: shiftingProp,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n  compact: compactProp,\n  testID = 'bottom-navigation-bar',\n  theme: themeOverrides,\n}: Props<Route>) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { bottom, left, right } = useSafeAreaInsets();\n  const { scale } = theme.animation;\n  const compact = compactProp ?? !theme.isV3;\n  let shifting =\n    shiftingProp ?? (theme.isV3 ? false : navigationState.routes.length > 3);\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn(\n      'BottomNavigation.Bar needs at least 2 tabs to run shifting animation'\n    );\n  }\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors?.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: theme.isV3 || shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: animationEasing,\n          })\n        ),\n      ]).start(() => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n      });\n    },\n    [\n      rippleAnim,\n      theme.isV3,\n      shifting,\n      scale,\n      navigationState.routes,\n      tabsAnims,\n      animationEasing,\n      indexAnim,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  React.useEffect(() => {\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex]);\n\n  const eventForIndex = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    return event;\n  };\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode, isV3 } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 } =\n    (StyleSheet.flatten(style) || {}) as {\n      elevation?: number;\n      backgroundColor?: ColorValue;\n    };\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors?.surface)\n    : colors?.primary;\n\n  const v2BackgroundColorInterpolation = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const backgroundColor = isV3\n    ? customBackground || theme.colors.elevation.level2\n    : shifting\n    ? v2BackgroundColorInterpolation\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n\n  const activeTintColor = getActiveTintColor({\n    activeColor,\n    defaultColor: textColor,\n    theme,\n  });\n\n  const inactiveTintColor = getInactiveTintColor({\n    inactiveColor,\n    defaultColor: textColor,\n    theme,\n  });\n  const touchColor = color(activeTintColor).alpha(0.12).rgb().string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? left,\n    right: safeAreaInsets?.right ?? right,\n    bottom: safeAreaInsets?.bottom ?? bottom,\n  };\n\n  return (\n    <Surface\n      {...(theme.isV3 && { elevation: 0 })}\n      testID={testID}\n      style={[\n        !theme.isV3 && styles.elevation,\n        styles.bar,\n        keyboardHidesNavigationBar // eslint-disable-next-line react-native/no-inline-styles\n          ? {\n              // When the keyboard is shown, slide down the navigation bar\n              transform: [\n                {\n                  translateY: visibleAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layout.height, 0],\n                  }),\n                },\n              ],\n              // Absolutely position the navigation bar so that the content is below it\n              // This is needed to avoid gap at bottom when the navigation bar is hidden\n              position: keyboardVisible ? 'absolute' : undefined,\n            }\n          : null,\n        style,\n      ]}\n      pointerEvents={\n        layout.measured\n          ? keyboardHidesNavigationBar && keyboardVisible\n            ? 'none'\n            : 'auto'\n          : 'none'\n      }\n      onLayout={onLayout}\n    >\n      <Animated.View\n        style={[styles.barContent, { backgroundColor }]}\n        testID={`${testID}-content`}\n      >\n        <View\n          style={[\n            styles.items,\n            {\n              marginBottom: insets.bottom,\n              marginHorizontal: Math.max(insets.left, insets.right),\n            },\n            compact && {\n              maxWidth: maxTabBarWidth,\n            },\n          ]}\n          accessibilityRole={'tablist'}\n          testID={`${testID}-content-wrapper`}\n        >\n          {shifting && !isV3 ? (\n            <Animated.View\n              pointerEvents=\"none\"\n              style={[\n                styles.ripple,\n                {\n                  // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                  // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                  top: (BAR_HEIGHT - rippleSize) / 2,\n                  left:\n                    (Math.min(layout.width, maxTabBarWidth) / routes.length) *\n                      (navigationState.index + 0.5) -\n                    rippleSize / 2,\n                  height: rippleSize,\n                  width: rippleSize,\n                  borderRadius: rippleSize / 2,\n                  backgroundColor: getColor({\n                    route: routes[navigationState.index],\n                  }),\n                  transform: [\n                    {\n                      // Scale to twice the size  to ensure it covers the whole navigation bar\n                      scale: rippleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0, 8],\n                      }),\n                    },\n                  ],\n                  opacity: rippleAnim.interpolate({\n                    inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                    outputRange: [0, 0, 1, 1],\n                  }),\n                },\n              ]}\n              testID={`${testID}-content-ripple`}\n            />\n          ) : null}\n          {routes.map((route, index) => {\n            const focused = navigationState.index === index;\n            const active = tabsAnims[index];\n\n            // Scale the label up\n            const scale =\n              labeled && shifting\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5, 1],\n                  })\n                : 1;\n\n            // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n            const translateY = labeled\n              ? shifting\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [7, 0],\n                  })\n                : 0\n              : 7;\n\n            // We render the active icon and label on top of inactive ones and cross-fade them on change.\n            // This trick gives the illusion that we are animating between active and inactive colors.\n            // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n            const activeOpacity = active;\n            const inactiveOpacity = active.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            });\n\n            const v3ActiveOpacity = focused ? 1 : 0;\n            const v3InactiveOpacity = shifting\n              ? inactiveOpacity\n              : focused\n              ? 0\n              : 1;\n\n            // Scale horizontally the outline pill\n            const outlineScale = focused\n              ? active.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.5, 1],\n                })\n              : 0;\n\n            const badge = getBadge({ route });\n\n            const activeLabelColor = getLabelColor({\n              tintColor: activeTintColor,\n              hasColor: Boolean(activeColor),\n              focused,\n              defaultColor: textColor,\n              theme,\n            });\n\n            const inactiveLabelColor = getLabelColor({\n              tintColor: inactiveTintColor,\n              hasColor: Boolean(inactiveColor),\n              focused,\n              defaultColor: textColor,\n              theme,\n            });\n\n            const badgeStyle = {\n              top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n              right:\n                (badge != null && typeof badge !== 'boolean'\n                  ? String(badge).length * -2\n                  : 0) - (!isV3 ? 2 : 0),\n            };\n\n            const isV3Shifting = isV3 && shifting && labeled;\n\n            const font = isV3 ? theme.fonts.labelMedium : {};\n\n            return renderTouchable({\n              key: route.key,\n              route,\n              borderless: true,\n              centered: true,\n              rippleColor: isV3 ? 'transparent' : touchColor,\n              onPress: () => onTabPress(eventForIndex(index)),\n              onLongPress: () => onTabLongPress?.(eventForIndex(index)),\n              testID: getTestID({ route }),\n              accessibilityLabel: getAccessibilityLabel({ route }),\n              accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n              accessibilityState: { selected: focused },\n              style: [styles.item, isV3 && styles.v3Item],\n              children: (\n                <View\n                  pointerEvents=\"none\"\n                  style={\n                    isV3 &&\n                    (labeled\n                      ? styles.v3TouchableContainer\n                      : styles.v3NoLabelContainer)\n                  }\n                >\n                  <Animated.View\n                    style={[\n                      styles.iconContainer,\n                      isV3 && styles.v3IconContainer,\n                      (!isV3 || isV3Shifting) && {\n                        transform: [{ translateY }],\n                      },\n                    ]}\n                  >\n                    {isV3 && focused && (\n                      <Animated.View\n                        style={[\n                          styles.outline,\n                          {\n                            transform: [\n                              {\n                                scaleX: outlineScale,\n                              },\n                            ],\n                            backgroundColor: theme.colors.secondaryContainer,\n                          },\n                        ]}\n                      />\n                    )}\n                    <Animated.View\n                      style={[\n                        styles.iconWrapper,\n                        isV3 && styles.v3IconWrapper,\n                        { opacity: isV3 ? v3ActiveOpacity : activeOpacity },\n                      ]}\n                    >\n                      {renderIcon ? (\n                        renderIcon({\n                          route,\n                          focused: true,\n                          color: activeTintColor,\n                        })\n                      ) : (\n                        <Icon\n                          source={route.focusedIcon as IconSource}\n                          color={activeTintColor}\n                          size={24}\n                        />\n                      )}\n                    </Animated.View>\n                    <Animated.View\n                      style={[\n                        styles.iconWrapper,\n                        isV3 && styles.v3IconWrapper,\n                        {\n                          opacity: isV3 ? v3InactiveOpacity : inactiveOpacity,\n                        },\n                      ]}\n                    >\n                      {renderIcon ? (\n                        renderIcon({\n                          route,\n                          focused: false,\n                          color: inactiveTintColor,\n                        })\n                      ) : (\n                        <Icon\n                          source={\n                            theme.isV3 && route.unfocusedIcon !== undefined\n                              ? route.unfocusedIcon\n                              : (route.focusedIcon as IconSource)\n                          }\n                          color={inactiveTintColor}\n                          size={24}\n                        />\n                      )}\n                    </Animated.View>\n                    <View style={[styles.badgeContainer, badgeStyle]}>\n                      {typeof badge === 'boolean' ? (\n                        <Badge visible={badge} size={isV3 ? 6 : 8} />\n                      ) : (\n                        <Badge visible={badge != null} size={16}>\n                          {badge}\n                        </Badge>\n                      )}\n                    </View>\n                  </Animated.View>\n                  {labeled ? (\n                    <Animated.View\n                      style={[\n                        styles.labelContainer,\n                        !isV3 && { transform: [{ scale }] },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[\n                          styles.labelWrapper,\n                          (!isV3 || isV3Shifting) && {\n                            opacity: activeOpacity,\n                          },\n                        ]}\n                      >\n                        {renderLabel ? (\n                          renderLabel({\n                            route,\n                            focused: true,\n                            color: activeLabelColor,\n                          })\n                        ) : (\n                          <Text\n                            maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                            variant=\"labelMedium\"\n                            style={[\n                              styles.label,\n                              {\n                                color: activeLabelColor,\n                                ...font,\n                              },\n                            ]}\n                          >\n                            {getLabelText({ route })}\n                          </Text>\n                        )}\n                      </Animated.View>\n                      {shifting ? null : (\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            { opacity: inactiveOpacity },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: false,\n                              color: inactiveLabelColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              variant=\"labelMedium\"\n                              selectable={false}\n                              style={[\n                                styles.label,\n                                {\n                                  color: inactiveLabelColor,\n                                  ...font,\n                                },\n                              ]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                      )}\n                    </Animated.View>\n                  ) : (\n                    !isV3 && <View style={styles.labelContainer} />\n                  )}\n                </View>\n              ),\n            });\n          })}\n        </View>\n      </Animated.View>\n    </Surface>\n  );\n};\n\nBottomNavigationBar.displayName = 'BottomNavigation.Bar';\n\nexport default BottomNavigationBar;\n\nconst styles = StyleSheet.create({\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  v3Item: {\n    paddingVertical: 0,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  v3IconWrapper: {\n    top: 4,\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16,\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center',\n  },\n  elevation: {\n    elevation: 4,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}