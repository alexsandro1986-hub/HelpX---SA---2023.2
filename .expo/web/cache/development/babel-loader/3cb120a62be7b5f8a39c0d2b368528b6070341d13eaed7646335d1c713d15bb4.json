{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIsModalPresentation = exports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _CardStyleInterpolators = require(\"../../TransitionConfigs/CardStyleInterpolators\");\nvar _CardAnimationContext = _interopRequireDefault(require(\"../../utils/CardAnimationContext\"));\nvar _getDistanceForDirection = _interopRequireDefault(require(\"../../utils/getDistanceForDirection\"));\nvar _getInvertedMultiplier = _interopRequireDefault(require(\"../../utils/getInvertedMultiplier\"));\nvar _memoize = _interopRequireDefault(require(\"../../utils/memoize\"));\nvar _GestureHandler = require(\"../GestureHandler\");\nvar _ModalStatusBarManager = _interopRequireDefault(require(\"../ModalStatusBarManager\"));\nvar _CardSheet = _interopRequireDefault(require(\"./CardSheet\"));\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = _reactNative.StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nvar Card = exports.default = function (_React$Component) {\n  (0, _inherits2.default)(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    (0, _classCallCheck2.default)(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.isCurrentlyMounted = false;\n    _this.isClosing = new _reactNative.Animated.Value(FALSE);\n    _this.inverted = new _reactNative.Animated.Value((0, _getInvertedMultiplier.default)(_this.props.gestureDirection));\n    _this.layout = {\n      width: new _reactNative.Animated.Value(_this.props.layout.width),\n      height: new _reactNative.Animated.Value(_this.props.layout.height)\n    };\n    _this.isSwiping = new _reactNative.Animated.Value(FALSE);\n    _this.animate = function (_ref2) {\n      var closing = _ref2.closing,\n        velocity = _ref2.velocity;\n      var _this$props = _this.props,\n        gesture = _this$props.gesture,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransition = _this$props.onTransition;\n      var toValue = _this.getAnimateToValue(Object.assign({}, _this.props, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, Object.assign({}, spec.config, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref3) {\n        var finished = _ref3.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    };\n    _this.getAnimateToValue = function (_ref4) {\n      var closing = _ref4.closing,\n        layout = _ref4.layout,\n        gestureDirection = _ref4.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return (0, _getDistanceForDirection.default)(layout, gestureDirection);\n    };\n    _this.setPointerEventsEnabled = function (enabled) {\n      var _this$ref$current;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    };\n    _this.handleStartInteraction = function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = _reactNative.InteractionManager.createInteractionHandle();\n      }\n    };\n    _this.handleEndInteraction = function () {\n      if (_this.interactionHandle !== undefined) {\n        _reactNative.InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    };\n    _this.handleGestureStateChange = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n      var _this$props2 = _this.props,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case _GestureHandler.GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case _GestureHandler.GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case _GestureHandler.GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * (0, _getInvertedMultiplier.default)(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    };\n    _this.getInterpolatedStyle = (0, _memoize.default)(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    });\n    _this.getCardAnimation = (0, _memoize.default)(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    });\n    _this.ref = React.createRef();\n    return _this;\n  }\n  (0, _createClass2.default)(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue((0, _getInvertedMultiplier.default)(gestureDirection));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = (0, _getInvertedMultiplier.default)(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        interpolationIndex = _this$props5.interpolationIndex,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        headerDarkContent = _this$props5.headerDarkContent,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        rest = (0, _objectWithoutProperties2.default)(_this$props5, _excluded);\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? _reactNative.Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? (0, _color.default)(backgroundColor).alpha() === 0 : false;\n      return React.createElement(_CardAnimationContext.default.Provider, {\n        value: interpolationProps\n      }, _reactNative.Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(_ModalStatusBarManager.default, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(_reactNative.Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(_reactNative.View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(_reactNative.View, {\n        pointerEvents: \"box-none\",\n        style: _reactNative.StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(_reactNative.Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(_GestureHandler.PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(_reactNative.Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(_reactNative.Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(_CardSheet.default, {\n        ref: this.ref,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nCard.defaultProps = {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref) {\n    var style = _ref.style;\n    return style ? React.createElement(_reactNative.Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n};\nvar getIsModalPresentation = exports.getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === _CardStyleInterpolators.forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"names":["_color","_interopRequireDefault","require","React","_interopRequireWildcard","_reactNative","_CardStyleInterpolators","_CardAnimationContext","_getDistanceForDirection","_getInvertedMultiplier","_memoize","_GestureHandler","_ModalStatusBarManager","_CardSheet","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","exports","_React$Component","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","isCurrentlyMounted","isClosing","Animated","Value","inverted","getInvertedMultiplier","props","gestureDirection","layout","width","height","isSwiping","animate","_ref2","closing","velocity","_this$props","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","assign","lastToValue","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","_ref3","finished","handleEndInteraction","forceUpdate","_ref4","getDistanceForDirection","enabled","_this$ref$current","pointerEvents","ref","current","setPointerEvents","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","_ref5","nativeEvent","_this$props2","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","GestureState","ACTIVE","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","memoize","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","createRef","_createClass2","value","componentDidMount","componentDidUpdate","prevProps","_this$props3","componentWillUnmount","stopAnimation","gestureActivationCriteria","_this$props4","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props5","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties2","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","backgroundColor","isTransparent","Color","alpha","createElement","CardAnimationContext","Provider","getIsModalPresentation","ModalStatusBarManager","dark","View","collapsable","_extends","absoluteFill","styles","container","PanGestureHandler","onGestureEvent","onHandlerStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","CardSheet","Component","defaultProps","_ref","cardStyleInterpolator","forModalPresentationIOS","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\@react-navigation\\stack\\src\\views\\Stack\\Card.tsx"],"sourcesContent":["import Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet, { CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation<number>;\n  current: Animated.AnimatedInterpolation<number>;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  headerDarkContent: boolean | undefined;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation<number>,\n      next: Animated.AnimatedInterpolation<number> | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        {\n          // StatusBar messes with translucent status bar on Android\n          // So we should only enable it on iOS\n          Platform.OS === 'ios' &&\n          overlayEnabled &&\n          next &&\n          getIsModalPresentation(styleInterpolator) ? (\n            <ModalStatusBarManager\n              dark={headerDarkContent}\n              layout={layout}\n              insets={insets}\n              style={cardStyle}\n            />\n          ) : null\n        }\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nexport const getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}