{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { ContextInfo } from \"../ContextInfo/contextinfo\";\nimport { useContext } from 'react';\nimport { LineChart } from 'react-native-charts-wrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function StackAdmin() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"FeedAdmin\",\n    children: [_jsx(Stack.Screen, {\n      name: \"FeedAdmin\",\n      component: FeedAdmin,\n      options: {\n        title: 'Feed ou Home',\n        headerStyle: {\n          backgroundColor: '#97D8AE',\n          borderColor: '#97D8AE',\n          borderWidth: 2,\n          borderBottomLeftRadius: 20,\n          borderBottomRightRadius: 20\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: '500',\n          fontSize: 30\n        },\n        headerTitleAlign: \"center\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Relatorio\",\n      component: Relatorio,\n      options: {\n        title: 'Relat√≥rios',\n        headerStyle: {\n          backgroundColor: '#97D8AE',\n          borderColor: '#97D8AE',\n          borderWidth: 2,\n          borderBottomLeftRadius: 20,\n          borderBottomRightRadius: 20\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: '500',\n          fontSize: 30\n        },\n        headerTitleAlign: \"center\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Usuarios\",\n      component: Usuarios\n    }), _jsx(Stack.Screen, {\n      name: \"Graficos\",\n      component: Graficos\n    })]\n  });\n}\nfunction FeedAdmin() {\n  var navigation = useNavigation();\n  return _jsx(View, {\n    style: feed.container,\n    children: _jsxs(View, {\n      style: feed.cima,\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Relatorio');\n        },\n        style: feed.botao,\n        children: [_jsx(MaterialCommunityIcons, {\n          name: \"graph\",\n          color: 'white',\n          size: 50\n        }), _jsx(Text, {\n          style: feed.textoBotao,\n          children: \"Relat\\xF3rio\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Chat', {\n            name: 'admin'\n          });\n        },\n        style: feed.botao,\n        children: [_jsx(MaterialCommunityIcons, {\n          name: \"comment-account\",\n          color: 'white',\n          size: 50\n        }), _jsx(Text, {\n          style: feed.textoBotao,\n          children: \"Suporte\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Usuarios');\n        },\n        style: feed.botao,\n        children: [_jsx(MaterialCommunityIcons, {\n          name: \"account-multiple-outline\",\n          color: 'white',\n          size: 50\n        }), _jsx(Text, {\n          style: feed.textoBotao,\n          children: \"Usu\\xE1rios\"\n        })]\n      }), _jsx(View, {\n        style: feed.options\n      })]\n    })\n  });\n}\nvar feed = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: '#FFF'\n  },\n  cima: {\n    height: '50%',\n    width: '100%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    flexWrap: 'wrap',\n    gap: 20,\n    backgroundColor: 'transparent',\n    borderBottomWidth: 2,\n    borderColor: '#97D8AE'\n  },\n  options: {\n    width: '40%',\n    height: '40%',\n    backgroundColor: '#cdcdcd',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  botao: {\n    width: '40%',\n    height: '40%',\n    backgroundColor: '#97D8AE',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.30,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  textoBotao: {\n    fontSize: 18,\n    fontWeight: '800',\n    color: '#3C8F5A'\n  }\n});\nvar telaRelatorio = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    gap: 11\n  },\n  cima: {\n    paddingTop: '37%',\n    height: '100%',\n    width: '100%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    flexWrap: 'wrap',\n    gap: 20,\n    backgroundColor: 'transparent',\n    borderColor: '#97D8AE',\n    flexDirection: 'row'\n  },\n  options: {\n    width: '40%',\n    height: '40%',\n    backgroundColor: '#cdcdcd',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  botao: {\n    width: '40%',\n    height: '55%',\n    backgroundColor: '#97D8AE',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.30,\n    shadowRadius: 4.65,\n    elevation: 8\n  },\n  textoBotao: {\n    fontSize: 18,\n    fontWeight: '800',\n    color: '#3C8F5A'\n  }\n});\nfunction Relatorio() {\n  var navigation = useNavigation();\n  return _jsx(View, {\n    style: telaRelatorio.container,\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: telaRelatorio.cima,\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Graficos', {\n              tipo: 'idade'\n            });\n          },\n          style: telaRelatorio.botao,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"format-list-numbered-rtl\",\n            color: 'white',\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Idade\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Graficos', {\n              tipo: 'medicamentos'\n            });\n          },\n          style: telaRelatorio.botao,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"pill\",\n            color: 'white',\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Medicamentos\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Graficos', {\n              tipo: 'Comorbidades'\n            });\n          },\n          style: telaRelatorio.botao,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"diabetes\",\n            color: 'white',\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Comorbidades\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Graficos', {\n              tipo: 'alergia'\n            });\n          },\n          style: telaRelatorio.botao,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"allergy\",\n            color: 'white',\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Alergias\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Graficos', {\n              tipo: 'sangue'\n            });\n          },\n          style: telaRelatorio.botao,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"iv-bag\",\n            color: 'white',\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Sangue\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Graficos', {\n              tipo: 'doador'\n            });\n          },\n          style: telaRelatorio.botao,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"hand-heart\",\n            color: 'white',\n            size: 50\n          }), _jsx(Text, {\n            style: telaRelatorio.textoBotao,\n            children: \"Doador\"\n          })]\n        })]\n      })\n    })\n  });\n}\nfunction Graficos(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var tipo = route.params.tipo;\n  var _useContext = useContext(ContextInfo),\n    vetorUser = _useContext.vetorUser;\n  var amostra = [];\n  var coresGraph = [\"rgba(255, 0, 0, 1)\", \"rgba(0, 255, 0, 1)\", \"rgba(0, 0, 255, 1)\", \"rgba(255, 255, 0, 1)\", \"rgba(255, 0, 255, 1)\", \"rgba(0, 255, 255, 1)\", \"rgba(128, 0, 0, 1)\", \"rgba(0, 128, 0, 1)\", \"rgba(0, 0, 128, 1)\", \"rgba(128, 128, 0, 1)\", \"rgba(128, 0, 128, 1)\", \"rgba(0, 128, 128, 1)\", \"rgba(128, 128, 128, 1)\", \"rgba(192, 192, 192, 1)\", \"rgba(255, 165, 0, 1)\", \"rgba(255, 192, 203, 1)\", \"rgba(0, 128, 64, 1)\", \"rgba(255, 69, 0, 1)\", \"rgba(0, 0, 0, 0.5)\", \"rgba(255, 255, 255, 0.5)\", \"rgba(128, 0, 0, 0.5)\", \"rgba(0, 128, 0, 0.5)\", \"rgba(0, 0, 128, 0.5)\", \"rgba(255, 0, 0, 0.75)\", \"rgba(0, 255, 0, 0.75)\", \"rgba(0, 0, 255, 0.75)\", \"rgba(255, 255, 0, 0.75)\", \"rgba(255, 0, 255, 0.75)\", \"rgba(0, 255, 255, 0.75)\", \"rgba(128, 0, 0, 0.75)\", \"rgba(0, 128, 0, 0.75)\", \"rgba(0, 0, 128, 0.75)\", \"rgba(128, 128, 0, 0.75)\", \"rgba(128, 0, 128, 0.75)\", \"rgba(0, 128, 128, 0.75)\"];\n  vetorUser.map(function (infos) {\n    console.log(tipo);\n    var i = Object.keys(infos).indexOf(tipo);\n    amostra.push(Object.values(infos)[i]);\n    console.log('1', amostra);\n  });\n  var contadorElementos = {};\n  amostra.forEach(function (elemento) {\n    if (contadorElementos[elemento]) {\n      contadorElementos[elemento] += 1;\n    } else {\n      contadorElementos[elemento] = 1;\n    }\n  });\n  console.log(contadorElementos);\n  for (var _ref2 of Object.entries(contadorElementos)) {\n    var _ref3 = _slicedToArray(_ref2, 2);\n    var key = _ref3[0];\n    var value = _ref3[1];\n    console.log(key + \": \" + value);\n    var objGraph = {\n      name: key,\n      valor: value,\n      color: coresGraph[Math.floor(Math.random() * (coresGraph.length - 1))],\n      legendFontColor: \"black\",\n      legendFontSize: 20\n    };\n  }\n  var legend = {\n    enabled: true,\n    textSize: 15,\n    form: 'CIRCLE',\n    horizontalAlignment: \"RIGHT\",\n    verticalAlignment: \"CENTER\",\n    orientation: \"VERTICAL\",\n    wordWrapEnabled: true\n  };\n  var data = {\n    dataSets: [{\n      values: [{\n        value: 45,\n        label: 'Sandwiches'\n      }, {\n        value: 21,\n        label: 'Salads'\n      }, {\n        value: 15,\n        label: 'Soup'\n      }, {\n        value: 9,\n        label: 'Beverages'\n      }, {\n        value: 15,\n        label: 'Desserts'\n      }],\n      label: 'Pie dataset',\n      config: {\n        colors: [processColor('#C0FF8C'), processColor('#FFF78C'), processColor('#FFD08C'), processColor('#8CEAFF'), processColor('#FF8C9D')],\n        valueTextSize: 20,\n        valueTextColor: processColor('green'),\n        sliceSpace: 5,\n        selectionShift: 13,\n        valueFormatter: \"#.#'%'\",\n        valueLineColor: processColor('green'),\n        valueLinePart1Length: 0.5\n      }\n    }]\n  };\n  highlights = [{\n    x: 2\n  }];\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      children: [\" \", tipo, \" \"]\n    }), _jsx(PieChart, {\n      style: {\n        flex: 1\n      },\n      logEnabled: true,\n      chartBackgroundColor: processColor('pink'),\n      data: data,\n      legend: legend,\n      highlights: highlights,\n      extraOffsets: {\n        left: 5,\n        top: 5,\n        right: 5,\n        bottom: 5\n      },\n      entryLabelColor: processColor('green'),\n      entryLabelTextSize: 20,\n      entryLabelFontFamily: 'HelveticaNeue-Medium',\n      drawEntryLabels: true,\n      rotationEnabled: true,\n      rotationAngle: 45,\n      usePercentValues: true,\n      styledCenterText: {\n        text: 'Pie center text!',\n        color: processColor('pink'),\n        fontFamily: 'HelveticaNeue-Medium',\n        size: 20\n      },\n      centerTextRadiusPercent: 100,\n      holeRadius: 40,\n      holeColor: processColor('#f0f0f0'),\n      transparentCircleRadius: 45,\n      transparentCircleColor: processColor('#f0f0f088'),\n      maxAngle: 350\n    })]\n  });\n}\nfunction Usuarios() {\n  var navigation = useNavigation();\n  var _useContext2 = useContext(ContextInfo),\n    vetorUser = _useContext2.vetorUser;\n  return _jsx(View, {\n    style: feedCards.container,\n    children: _jsx(ScrollView, {\n      style: {\n        width: '100%'\n      },\n      children: vetorUser.map(function (infos, index) {\n        return _jsxs(View, {\n          style: feedCards.cards,\n          children: [_jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Nome: \", infos.nome]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Idade: \", infos.idade, \" \"]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Alergia: \", infos.alergia]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Tipo Sangu\\xEDneo: \", infos.sangue]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Doador de org\\xE3os: \", infos.doador]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Telefone: \", infos.telefone]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" CEP: \", infos.cep]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Logradouro: \", infos.logradouro]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" N\\xFAmero da Resid\\xEAncia: \", infos.nCasa]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" E-mail: \", infos.email]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Nome do Contanto de Emerg\\xEAncia: \", infos.contatoEmergencia]\n          }), _jsxs(Text, {\n            style: feedCards.textoCards,\n            children: [\" Telefone de Emerg\\xEAncia: \", infos.telefoneEmergencia]\n          })]\n        }, index);\n      })\n    })\n  });\n}\nvar feedCards = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: '#FFF'\n  },\n  cima: {\n    height: '50%',\n    width: '100%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    gap: 20,\n    backgroundColor: 'transparent',\n    borderBottomWidth: 2,\n    borderColor: '#97D8AE'\n  },\n  containerCards: {\n    width: '100%',\n    height: 50,\n    flexDirection: 'row',\n    paddingBottom: 200\n  },\n  cards: {\n    borderWidth: 2,\n    borderRadius: 20,\n    height: 300,\n    width: '100%',\n    borderColor: '#97D8AE',\n    marginBottom: 20\n  },\n  textoCards: {\n    fontSize: 18,\n    color: 'black'\n  }\n});","map":{"version":3,"names":["React","Text","View","StyleSheet","ScrollView","MaterialCommunityIcons","TouchableOpacity","useNavigation","createStackNavigator","ContextInfo","useContext","LineChart","jsx","_jsx","jsxs","_jsxs","Stack","StackAdmin","Navigator","initialRouteName","children","Screen","name","component","FeedAdmin","options","title","headerStyle","backgroundColor","borderColor","borderWidth","borderBottomLeftRadius","borderBottomRightRadius","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerTitleAlign","Relatorio","Usuarios","Graficos","navigation","style","feed","container","cima","onPress","navigate","botao","color","size","textoBotao","create","flex","justifyContent","alignItems","height","width","alignContent","flexWrap","gap","borderBottomWidth","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","telaRelatorio","paddingTop","flexDirection","tipo","_ref","route","params","_useContext","vetorUser","amostra","coresGraph","map","infos","console","log","i","Object","keys","indexOf","push","values","contadorElementos","forEach","elemento","_ref2","entries","_ref3","_slicedToArray","key","value","objGraph","valor","Math","floor","random","length","legendFontColor","legendFontSize","legend","enabled","textSize","form","horizontalAlignment","verticalAlignment","orientation","wordWrapEnabled","data","dataSets","label","config","colors","processColor","valueTextSize","valueTextColor","sliceSpace","selectionShift","valueFormatter","valueLineColor","valueLinePart1Length","highlights","x","PieChart","logEnabled","chartBackgroundColor","extraOffsets","left","top","right","bottom","entryLabelColor","entryLabelTextSize","entryLabelFontFamily","drawEntryLabels","rotationEnabled","rotationAngle","usePercentValues","styledCenterText","text","fontFamily","centerTextRadiusPercent","holeRadius","holeColor","transparentCircleRadius","transparentCircleColor","maxAngle","_useContext2","feedCards","index","cards","textoCards","nome","idade","alergia","sangue","doador","telefone","cep","logradouro","nCasa","email","contatoEmergencia","telefoneEmergencia","containerCards","paddingBottom","marginBottom"],"sources":["C:/Users/gisele_anjos/Documents/sa.ReactNative2semestre/src/pages/Admin/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Text, View, StyleSheet, ScrollView } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { ContextInfo } from '../ContextInfo/contextinfo';\r\nimport { useContext } from 'react';\r\nimport  {LineChart} from 'react-native-charts-wrapper';\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function StackAdmin() {\r\n\r\n    return (\r\n        <Stack.Navigator initialRouteName='FeedAdmin'>\r\n            <Stack.Screen name='FeedAdmin' component={FeedAdmin}\r\n                options={{\r\n                    title: 'Feed ou Home',\r\n                    headerStyle: {\r\n                        backgroundColor: '#97D8AE',\r\n                        borderColor: '#97D8AE',\r\n                        borderWidth: 2,\r\n                        borderBottomLeftRadius: 20,\r\n                        borderBottomRightRadius: 20,\r\n\r\n                    },\r\n                    headerTintColor: '#fff',\r\n                    headerTitleStyle: {\r\n                        fontWeight: '500',\r\n                        fontSize: 30,\r\n                    },\r\n                    headerTitleAlign: \"center\",\r\n                }} />\r\n            <Stack.Screen name='Relatorio' component={Relatorio} options={{\r\n                title: 'Relat√≥rios',\r\n                headerStyle: {\r\n                    backgroundColor: '#97D8AE',\r\n                    borderColor: '#97D8AE',\r\n                    borderWidth: 2,\r\n                    borderBottomLeftRadius: 20,\r\n                    borderBottomRightRadius: 20,\r\n\r\n                },\r\n                headerTintColor: '#fff',\r\n                headerTitleStyle: {\r\n                    fontWeight: '500',\r\n                    fontSize: 30,\r\n                },\r\n                headerTitleAlign: \"center\",\r\n            }} />\r\n            <Stack.Screen name='Usuarios' component={Usuarios} />\r\n            {/* <Stack.Screen name='Suporte' component={Suporte} /> */}\r\n            <Stack.Screen name='Graficos' component={Graficos} />\r\n        </Stack.Navigator>\r\n    );\r\n\r\n}\r\nfunction FeedAdmin() {\r\n    const navigation = useNavigation()\r\n    return (\r\n\r\n\r\n        <View style={feed.container}>\r\n\r\n            <View style={feed.cima}>\r\n\r\n                <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Relatorio')}\r\n                    style={feed.botao}>\r\n\r\n                    <MaterialCommunityIcons name=\"graph\" color={'white'} size={50} />\r\n\r\n                    <Text style={feed.textoBotao}>\r\n                        Relat√≥rio\r\n                    </Text>\r\n\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Chat', { name: 'admin' })}\r\n                    style={feed.botao}>\r\n\r\n                    <MaterialCommunityIcons name=\"comment-account\" color={'white'} size={50} />\r\n\r\n                    <Text style={feed.textoBotao}>\r\n                        Suporte\r\n                    </Text>\r\n\r\n                </TouchableOpacity>\r\n\r\n\r\n                <TouchableOpacity\r\n                    onPress={() => navigation.navigate('Usuarios')}\r\n                    style={feed.botao}>\r\n\r\n                    <MaterialCommunityIcons name=\"account-multiple-outline\" color={'white'} size={50} />\r\n\r\n                    <Text style={feed.textoBotao}>\r\n                        Usu√°rios\r\n                    </Text>\r\n\r\n                </TouchableOpacity>\r\n\r\n\r\n                <View style={feed.options}>\r\n\r\n                </View>\r\n\r\n            </View>\r\n\r\n\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst feed = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFF'\r\n    },\r\n    cima: {\r\n        height: '50%',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 20,\r\n        backgroundColor: 'transparent',\r\n        borderBottomWidth: 2,\r\n        borderColor: '#97D8AE',\r\n    },\r\n\r\n    options: {\r\n        width: '40%',\r\n        height: '40%',\r\n        backgroundColor: '#cdcdcd',\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    botao: {\r\n        width: '40%',\r\n        height: '40%',\r\n        backgroundColor: '#97D8AE',\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        gap: 15, shadowColor: \"#000\",\r\n        shadowOffset: { width: 0, height: 4 },\r\n        shadowOpacity: 0.30,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n    },\r\n    textoBotao: {\r\n        fontSize: 18,\r\n        fontWeight: '800',\r\n        color: '#3C8F5A'\r\n    }\r\n})\r\n\r\nconst telaRelatorio = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        // justifyContent: 'flex-start',\r\n        // alignItems: 'center',\r\n        backgroundColor: '#FFF',\r\n        gap: 11,\r\n    },\r\n    cima: {\r\n        paddingTop: '37%',\r\n        height: '100%',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 20,\r\n        backgroundColor: 'transparent',\r\n\r\n        borderColor: '#97D8AE',\r\n        flexDirection: 'row'\r\n    },\r\n\r\n    options: {\r\n        width: '40%',\r\n        height: '40%',\r\n        backgroundColor: '#cdcdcd',\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    botao: {\r\n        width: '40%',\r\n        height: '55%',\r\n        backgroundColor: '#97D8AE',\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        gap: 15, shadowColor: \"#000\",\r\n        shadowOffset: { width: 0, height: 4 },\r\n        shadowOpacity: 0.30,\r\n        shadowRadius: 4.65,\r\n        elevation: 8,\r\n    },\r\n    textoBotao: {\r\n        fontSize: 18,\r\n        fontWeight: '800',\r\n        color: '#3C8F5A'\r\n    }\r\n})\r\n\r\n\r\n\r\nfunction Relatorio() {\r\n    const navigation = useNavigation()\r\n    return (\r\n\r\n\r\n        <View style={telaRelatorio.container}>\r\n            <ScrollView>\r\n                <View style={telaRelatorio.cima}>\r\n\r\n                    {/* <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'UF' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"city\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            UF\r\n                        </Text>\r\n\r\n                    </TouchableOpacity> */}\r\n\r\n                    {/* <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'Usuarios' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"account-supervisor-circle\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            Usu√°rios\r\n                        </Text>\r\n\r\n                    </TouchableOpacity> */}\r\n\r\n\r\n                    <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'idade' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"format-list-numbered-rtl\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            Idade\r\n                        </Text>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'medicamentos' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"pill\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            Medicamentos\r\n                        </Text>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'Comorbidades' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"diabetes\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            Comorbidades\r\n                        </Text>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'alergia' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"allergy\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            Alergias\r\n                        </Text>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'sangue' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"iv-bag\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            Sangue\r\n                        </Text>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => navigation.navigate('Graficos', { tipo: 'doador' })}\r\n                        style={telaRelatorio.botao}>\r\n\r\n                        <MaterialCommunityIcons name=\"hand-heart\" color={'white'} size={50} />\r\n\r\n                        <Text style={telaRelatorio.textoBotao}>\r\n                            Doador\r\n                        </Text>\r\n\r\n                    </TouchableOpacity>\r\n\r\n\r\n\r\n                </View>\r\n\r\n            </ScrollView>\r\n\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nfunction Graficos({ route }) {\r\n    const navigation = useNavigation()\r\n    const { tipo } = route.params\r\n    const { vetorUser } = useContext(ContextInfo)\r\n    let amostra = []\r\n    // const data = [] //Dados do Grafico (valores)\r\n    const coresGraph = [ \r\n        \"rgba(255, 0, 0, 1)\",\r\n        \"rgba(0, 255, 0, 1)\",\r\n        \"rgba(0, 0, 255, 1)\",\r\n        \"rgba(255, 255, 0, 1)\",\r\n        \"rgba(255, 0, 255, 1)\",\r\n        \"rgba(0, 255, 255, 1)\",\r\n        \"rgba(128, 0, 0, 1)\",\r\n        \"rgba(0, 128, 0, 1)\",\r\n        \"rgba(0, 0, 128, 1)\",\r\n        \"rgba(128, 128, 0, 1)\",\r\n        \"rgba(128, 0, 128, 1)\",\r\n        \"rgba(0, 128, 128, 1)\",\r\n        \"rgba(128, 128, 128, 1)\",\r\n        \"rgba(192, 192, 192, 1)\",\r\n        \"rgba(255, 165, 0, 1)\",\r\n        \"rgba(255, 192, 203, 1)\",\r\n        \"rgba(0, 128, 64, 1)\",\r\n        \"rgba(255, 69, 0, 1)\",\r\n        \"rgba(0, 0, 0, 0.5)\",\r\n        \"rgba(255, 255, 255, 0.5)\",\r\n        \"rgba(128, 0, 0, 0.5)\",\r\n        \"rgba(0, 128, 0, 0.5)\",\r\n        \"rgba(0, 0, 128, 0.5)\",\r\n        \"rgba(255, 0, 0, 0.75)\",\r\n        \"rgba(0, 255, 0, 0.75)\",\r\n        \"rgba(0, 0, 255, 0.75)\",\r\n        \"rgba(255, 255, 0, 0.75)\",\r\n        \"rgba(255, 0, 255, 0.75)\",\r\n        \"rgba(0, 255, 255, 0.75)\",\r\n        \"rgba(128, 0, 0, 0.75)\",\r\n        \"rgba(0, 128, 0, 0.75)\",\r\n        \"rgba(0, 0, 128, 0.75)\",\r\n        \"rgba(128, 128, 0, 0.75)\",\r\n        \"rgba(128, 0, 128, 0.75)\",\r\n        \"rgba(0, 128, 128, 0.75)\"\r\n     ]\r\n    \r\n    vetorUser.map((infos) => {\r\n        console.log(tipo)\r\n        let i = Object.keys(infos).indexOf(tipo)\r\n        amostra.push(Object.values(infos)[i])\r\n        console.log('1', amostra)\r\n\r\n        \r\n    })\r\n    // Contando n√∫meros de elementos repetidos dentro da amostra\r\n    const contadorElementos = {};\r\n    amostra.forEach(elemento => {\r\n        if (contadorElementos[elemento]){\r\n\r\n            contadorElementos[elemento] += 1\r\n        }\r\n        else{\r\n            contadorElementos[elemento] = 1\r\n        }  \r\n    })\r\n    console.log(contadorElementos)\r\n    \r\n    // Criando objeto para o grafico \r\n    for (const [key, value] of Object.entries(contadorElementos)) {\r\n        console.log(`${key}: ${value}`);\r\n        const objGraph = {\r\n            name: key,\r\n            valor: value,\r\n            color: coresGraph[Math.floor(Math.random() * (coresGraph.length - 1))],\r\n            legendFontColor: \"black\",\r\n            legendFontSize: 20\r\n        }\r\n        // data.push(objGraph)\r\n      }\r\n      \r\n\r\n      const legend = {\r\n        enabled: true,\r\n        textSize: 15,\r\n        form: 'CIRCLE',\r\n\r\n        horizontalAlignment: \"RIGHT\",\r\n        verticalAlignment: \"CENTER\",\r\n        orientation: \"VERTICAL\",\r\n        wordWrapEnabled: true\r\n      }\r\n     const data= {\r\n        dataSets: [{\r\n          values: [\r\n            {value: 45, label: 'Sandwiches'},\r\n            {value: 21, label: 'Salads'},\r\n            {value: 15, label: 'Soup'},\r\n            {value: 9, label: 'Beverages'},\r\n            {value: 15, label: 'Desserts'}\r\n        ],\r\n          label: 'Pie dataset',\r\n          config: {\r\n            colors: [processColor('#C0FF8C'), processColor('#FFF78C'), processColor('#FFD08C'), processColor('#8CEAFF'), processColor('#FF8C9D')],\r\n            valueTextSize: 20,\r\n            valueTextColor: processColor('green'),\r\n            sliceSpace: 5,\r\n            selectionShift: 13,\r\n            // xValuePosition: \"OUTSIDE_SLICE\",\r\n            // yValuePosition: \"OUTSIDE_SLICE\",\r\n            valueFormatter: \"#.#'%'\",\r\n            valueLineColor: processColor('green'),\r\n            valueLinePart1Length: 0.5\r\n          }\r\n        }]\r\n      }\r\n      highlights= [{x:2}]\r\n    //   description: {\r\n    //     text: 'This is Pie chart description',\r\n    //     textSize: 15,\r\n    //     textColor: processColor('darkgray'),\r\n\r\n      \r\n\r\n    return (\r\n        <View>\r\n            <Text> {tipo} </Text>\r\n\r\n            <PieChart\r\n            style={{flex:1}}\r\n            logEnabled={true}\r\n            chartBackgroundColor={processColor('pink')}\r\n            // chartDescription={description}\r\n            data={data}\r\n            legend={legend}\r\n            highlights={highlights}\r\n\r\n            extraOffsets={{left: 5, top: 5, right: 5, bottom: 5}}\r\n\r\n            entryLabelColor={processColor('green')}\r\n            entryLabelTextSize={20}\r\n            entryLabelFontFamily={'HelveticaNeue-Medium'}\r\n            drawEntryLabels={true}\r\n\r\n            rotationEnabled={true}\r\n            rotationAngle={45}\r\n            usePercentValues={true}\r\n            styledCenterText={{text:'Pie center text!', color: processColor('pink'), fontFamily: 'HelveticaNeue-Medium', size: 20}}\r\n            centerTextRadiusPercent={100}\r\n            holeRadius={40}\r\n            holeColor={processColor('#f0f0f0')}\r\n            transparentCircleRadius={45}\r\n            transparentCircleColor={processColor('#f0f0f088')}\r\n            maxAngle={350}\r\n            // onSelect={this.handleSelect.bind(this)}\r\n            // onChange={(event) => console.log(event.nativeEvent)}\r\n          />\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nfunction Usuarios() {\r\n    const navigation = useNavigation()\r\n    const { vetorUser } = useContext(ContextInfo)\r\n\r\n    return (\r\n\r\n        <View style={feedCards.container}>\r\n            <ScrollView style={{ width: '100%' }}>\r\n                {vetorUser.map((infos, index) =>\r\n\r\n                    <View style={feedCards.cards} key={index}>\r\n\r\n                        <Text style={feedCards.textoCards}> Nome: {infos.nome}</Text>\r\n                        <Text style={feedCards.textoCards}> Idade: {infos.idade} </Text>\r\n                        <Text style={feedCards.textoCards}> Alergia: {infos.alergia}</Text>\r\n                        <Text style={feedCards.textoCards}> Tipo Sangu√≠neo: {infos.sangue}</Text>\r\n                        <Text style={feedCards.textoCards}> Doador de org√£os: {infos.doador}</Text>\r\n                        <Text style={feedCards.textoCards}> Telefone: {infos.telefone}</Text>\r\n                        <Text style={feedCards.textoCards}> CEP: {infos.cep}</Text>\r\n                        <Text style={feedCards.textoCards}> Logradouro: {infos.logradouro}</Text>\r\n                        <Text style={feedCards.textoCards}> N√∫mero da Resid√™ncia: {infos.nCasa}</Text>\r\n                        <Text style={feedCards.textoCards}> E-mail: {infos.email}</Text>\r\n                        <Text style={feedCards.textoCards}> Nome do Contanto de Emerg√™ncia: {infos.contatoEmergencia}</Text>\r\n                        <Text style={feedCards.textoCards}> Telefone de Emerg√™ncia: {infos.telefoneEmergencia}</Text>\r\n\r\n                    </View>\r\n                )\r\n                }\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst feedCards = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFF',\r\n\r\n    },\r\n    cima: {\r\n        height: '50%',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        gap: 20,\r\n        backgroundColor: 'transparent',\r\n        borderBottomWidth: 2,\r\n        borderColor: '#97D8AE',\r\n    },\r\n\r\n    containerCards: {\r\n        width: '100%',\r\n        height: 50,\r\n        // borderWidth: 1,\r\n        // borderColor: '#97D8AE',\r\n        flexDirection: 'row',\r\n        // justifyContent: 'space-evenly',\r\n        // alignItems: 'stretch'\r\n        paddingBottom: 200\r\n    },\r\n    cards: {\r\n        borderWidth: 2,\r\n        borderRadius: 20,\r\n        height: 300,\r\n        width: '100%',\r\n        borderColor: '#97D8AE',\r\n        marginBottom: 20\r\n\r\n    },\r\n    textoCards: {\r\n        fontSize: 18,\r\n        color: 'black',\r\n\r\n    }\r\n\r\n})\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}