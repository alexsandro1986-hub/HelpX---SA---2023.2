{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { NavigationActionContainer, NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function lotholorien(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(setImagemdado(require(\"../imagens-dado/lotholorien.png\"))),\n    _useState2 = _slicedToArray(_useState, 2),\n    imagemDado = _useState2[0],\n    setImagemdado = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsx(Image, {\n      source: imagemDado,\n      style: styles.imagem\n    }), _jsxs(Text, {\n      children: [noob, novo]\n    }), _jsx(TouchableOpacity, {\n      style: styles.botao,\n      onPress: clicando,\n      children: _jsx(Text, {\n        style: styles.textocor,\n        children: \"Para onde frodo\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","StyleSheet","Text","TouchableOpacity","View","Image","TextInput","ScrollView","FontAwesome","Feather","NavigationActionContainer","NavigationContainer","createStackNavigator","createNativeStackNavigator","useState","jsx","_jsx","jsxs","_jsxs","lotholorien","_ref","navigation","_useState","setImagemdado","require","_useState2","_slicedToArray","imagemDado","children","source","style","styles","imagem","noob","novo","botao","onPress","clicando","textocor"],"sources":["C:/xando/olmundo/screens/lotholorien.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, TouchableOpacity, View, Image, TextInput, ScrollView } from 'react-native';\r\n//import { TextInput } from 'react-native-web';\r\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\r\nimport Feather from \"@expo/vector-icons/Feather\";\r\nimport { NavigationActionContainer, NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function lotholorien({navigation}){\r\n    const [imagemDado, setImagemdado]=useState(setImagemdado(require('../imagens-dado/lotholorien.png')))\r\n    return(\r\n        <View>\r\n             <Image\r\n        source={imagemDado}\r\n        style={styles.imagem}\r\n      />\r\n      <Text>{noob}{novo}</Text>\r\n      <TouchableOpacity style={styles.botao} onPress={clicando}>\r\n        <Text style={styles.textocor}>Para onde frodo</Text>\r\n      </TouchableOpacity>\r\n        </View>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAG5C,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,OAAO,MAAM,4BAA4B;AAChD,SAASC,yBAAyB,EAAEC,mBAAmB,QAAQ,0BAA0B;AACzF,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjC,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAc;EAAA,IAAZC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3C,IAAAC,SAAA,GAAkCR,QAAQ,CAACS,aAAa,CAACC,OAAO,kCAAkC,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAA9FK,UAAU,GAAAF,UAAA;IAAEF,aAAa,GAAAE,UAAA;EAChC,OACIP,KAAA,CAACd,IAAI;IAAAwB,QAAA,GACAZ,IAAA,CAACX,KAAK;MACXwB,MAAM,EAAEF,UAAW;MACnBG,KAAK,EAAEC,MAAM,CAACC;IAAO,CACtB,CAAC,EACFd,KAAA,CAAChB,IAAI;MAAA0B,QAAA,GAAEK,IAAI,EAAEC,IAAI;IAAA,CAAO,CAAC,EACzBlB,IAAA,CAACb,gBAAgB;MAAC2B,KAAK,EAAEC,MAAM,CAACI,KAAM;MAACC,OAAO,EAAEC,QAAS;MAAAT,QAAA,EACvDZ,IAAA,CAACd,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACO,QAAS;QAAAV,QAAA,EAAC;MAAe,CAAM;IAAC,CACpC,CAAC;EAAA,CACX,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}