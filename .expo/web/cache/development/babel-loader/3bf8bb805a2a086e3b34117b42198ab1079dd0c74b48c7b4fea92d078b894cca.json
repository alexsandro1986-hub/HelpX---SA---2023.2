{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _KeepAwake = require(\"./KeepAwake.types\");\nvar wakeLockMap = {};\nvar _default = exports.default = {\n  isAvailableAsync: function () {\n    var _isAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (_expoModulesCore.Platform.isDOMAvailable) {\n        return 'wakeLock' in navigator;\n      }\n      return false;\n    });\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n    return isAvailableAsync;\n  }(),\n  activate: function () {\n    var _activate = (0, _asyncToGenerator2.default)(function* (tag) {\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return;\n      }\n      var wakeLock = yield navigator.wakeLock.request('screen');\n      wakeLockMap[tag] = wakeLock;\n    });\n    function activate(_x) {\n      return _activate.apply(this, arguments);\n    }\n    return activate;\n  }(),\n  deactivate: function () {\n    var _deactivate = (0, _asyncToGenerator2.default)(function* (tag) {\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return;\n      }\n      if (wakeLockMap[tag]) {\n        var _wakeLockMap$tag$rele, _wakeLockMap$tag;\n        (_wakeLockMap$tag$rele = (_wakeLockMap$tag = wakeLockMap[tag]).release) == null ? void 0 : _wakeLockMap$tag$rele.call(_wakeLockMap$tag);\n        delete wakeLockMap[tag];\n      } else {\n        throw new _expoModulesCore.CodedError('ERR_KEEP_AWAKE_TAG_INVALID', \"The wake lock with tag \" + tag + \" has not activated yet\");\n      }\n    });\n    function deactivate(_x2) {\n      return _deactivate.apply(this, arguments);\n    }\n    return deactivate;\n  }(),\n  addListenerForTag: function addListenerForTag(tag, listener) {\n    var eventListener = function eventListener() {\n      listener({\n        state: _KeepAwake.KeepAwakeEventState.RELEASE\n      });\n    };\n    var sentinel = wakeLockMap[tag];\n    if (sentinel) {\n      if ('addEventListener' in sentinel) {\n        sentinel.addEventListener == null ? void 0 : sentinel.addEventListener('release', eventListener);\n      } else {\n        sentinel.onrelease = eventListener;\n      }\n    }\n    return {\n      remove: function remove() {\n        var sentinel = wakeLockMap[tag];\n        if (sentinel) {\n          if (sentinel.removeEventListener) {\n            sentinel.removeEventListener('release', eventListener);\n          } else {\n            sentinel.onrelease = null;\n          }\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["_expoModulesCore","require","_KeepAwake","wakeLockMap","_default","exports","default","isAvailableAsync","_isAvailableAsync","_asyncToGenerator2","Platform","isDOMAvailable","navigator","apply","arguments","activate","_activate","tag","wakeLock","request","_x","deactivate","_deactivate","_wakeLockMap$tag$rele","_wakeLockMap$tag","release","call","CodedError","_x2","addListenerForTag","listener","eventListener","state","KeepAwakeEventState","RELEASE","sentinel","addEventListener","onrelease","remove","removeEventListener"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\expo-keep-awake\\src\\ExpoKeepAwake.web.ts"],"sourcesContent":["import { CodedError, Platform, Subscription } from 'expo-modules-core';\n\nimport { KeepAwakeEventState, KeepAwakeListener } from './KeepAwake.types';\n\nconst wakeLockMap: Record<string, WakeLockSentinel> = {};\n\ntype WakeLockSentinel = {\n  onrelease: null | ((event: any) => void);\n  released: boolean;\n  type: 'screen';\n  release?: Function;\n\n  addEventListener?: (event: string, listener: (event: any) => void) => void;\n  removeEventListener?: (event: string, listener: (event: any) => void) => void;\n};\n\ndeclare const navigator: {\n  wakeLock: {\n    request(type: 'screen'): Promise<WakeLockSentinel>;\n  };\n};\n\n/** Wraps the webWakeLock API https://developer.mozilla.org/en-US/docs/Web/API/Screen_Wake_Lock_API */\nexport default {\n  async isAvailableAsync() {\n    if (Platform.isDOMAvailable) {\n      return 'wakeLock' in navigator;\n    }\n    return false;\n  },\n  async activate(tag: string) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    const wakeLock = await navigator.wakeLock.request('screen');\n    wakeLockMap[tag] = wakeLock;\n  },\n  async deactivate(tag: string) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    if (wakeLockMap[tag]) {\n      wakeLockMap[tag].release?.();\n      delete wakeLockMap[tag];\n    } else {\n      throw new CodedError(\n        'ERR_KEEP_AWAKE_TAG_INVALID',\n        `The wake lock with tag ${tag} has not activated yet`\n      );\n    }\n  },\n  addListenerForTag(tag: string, listener: KeepAwakeListener): Subscription {\n    const eventListener = () => {\n      listener({ state: KeepAwakeEventState.RELEASE });\n    };\n    const sentinel = wakeLockMap[tag];\n    if (sentinel) {\n      if ('addEventListener' in sentinel) {\n        sentinel.addEventListener?.('release', eventListener);\n      } else {\n        sentinel.onrelease = eventListener;\n      }\n    }\n    return {\n      remove: () => {\n        const sentinel = wakeLockMap[tag];\n        if (sentinel) {\n          if (sentinel.removeEventListener) {\n            sentinel.removeEventListener('release', eventListener);\n          } else {\n            sentinel.onrelease = null;\n          }\n        }\n      },\n    };\n  },\n};\n"],"mappings":";;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAEA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAME,WAAW,GAAqC,EAAE;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAmB1C;EACPC,gBAAgB;IAAA,IAAAC,iBAAA,OAAAC,kBAAA,CAAAH,OAAA;MACpB,IAAII,yBAAQ,CAACC,cAAc,EAAE;QAC3B,OAAO,UAAU,IAAIC,SAAS;;MAEhC,OAAO,KAAK;IACd,CAAC;IAAA,SAAAL,iBAAA;MAAA,OAAAC,iBAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAP,gBAAA;EAAA;EACKQ,QAAQ;IAAA,IAAAC,SAAA,OAAAP,kBAAA,CAAAH,OAAA,aAACW,GAAW;MACxB,IAAI,CAACP,yBAAQ,CAACC,cAAc,EAAE;QAC5B;;MAEF,IAAMO,QAAQ,SAASN,SAAS,CAACM,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC3DhB,WAAW,CAACc,GAAG,CAAC,GAAGC,QAAQ;IAC7B,CAAC;IAAA,SAAAH,SAAAK,EAAA;MAAA,OAAAJ,SAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,QAAA;EAAA;EACKM,UAAU;IAAA,IAAAC,WAAA,OAAAb,kBAAA,CAAAH,OAAA,aAACW,GAAW;MAC1B,IAAI,CAACP,yBAAQ,CAACC,cAAc,EAAE;QAC5B;;MAEF,IAAIR,WAAW,CAACc,GAAG,CAAC,EAAE;QAAA,IAAAM,qBAAA,EAAAC,gBAAA;QACpB,CAAAD,qBAAA,IAAAC,gBAAA,GAAArB,WAAW,CAACc,GAAG,CAAC,EAACQ,OAAO,qBAAxBF,qBAAA,CAAAG,IAAA,CAAAF,gBAA0B,CAAE;QAC5B,OAAOrB,WAAW,CAACc,GAAG,CAAC;OACxB,MAAM;QACL,MAAM,IAAIU,2BAAU,CAClB,4BAA4B,8BACFV,GAAG,2BAAwB,CACtD;;IAEL,CAAC;IAAA,SAAAI,WAAAO,GAAA;MAAA,OAAAN,WAAA,CAAAT,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAO,UAAA;EAAA;EACDQ,iBAAiB,WAAAA,kBAACZ,GAAW,EAAEa,QAA2B;IACxD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAQ;MACzBD,QAAQ,CAAC;QAAEE,KAAK,EAAEC,8BAAmB,CAACC;MAAO,CAAE,CAAC;IAClD,CAAC;IACD,IAAMC,QAAQ,GAAGhC,WAAW,CAACc,GAAG,CAAC;IACjC,IAAIkB,QAAQ,EAAE;MACZ,IAAI,kBAAkB,IAAIA,QAAQ,EAAE;QAClCA,QAAQ,CAACC,gBAAgB,oBAAzBD,QAAQ,CAACC,gBAAgB,CAAG,SAAS,EAAEL,aAAa,CAAC;OACtD,MAAM;QACLI,QAAQ,CAACE,SAAS,GAAGN,aAAa;;;IAGtC,OAAO;MACLO,MAAM,EAAE,SAAAA,OAAA,EAAK;QACX,IAAMH,QAAQ,GAAGhC,WAAW,CAACc,GAAG,CAAC;QACjC,IAAIkB,QAAQ,EAAE;UACZ,IAAIA,QAAQ,CAACI,mBAAmB,EAAE;YAChCJ,QAAQ,CAACI,mBAAmB,CAAC,SAAS,EAAER,aAAa,CAAC;WACvD,MAAM;YACLI,QAAQ,CAACE,SAAS,GAAG,IAAI;;;MAG/B;KACD;EACH;CACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}