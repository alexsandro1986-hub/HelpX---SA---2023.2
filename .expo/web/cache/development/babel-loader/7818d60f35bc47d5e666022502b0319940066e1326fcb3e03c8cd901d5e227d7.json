{"ast":null,"code":"import * as React from 'react';\nvar UNINITIALIZED = typeof Symbol === 'function' && typeof Symbol() === 'symbol' ? Symbol() : Object.freeze({});\nexport default function useStable(getInitialValue) {\n  var ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = getInitialValue();\n  }\n  return ref.current;\n}","map":{"version":3,"names":["React","UNINITIALIZED","Symbol","Object","freeze","useStable","getInitialValue","ref","useRef","current"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-web/src/modules/useStable/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport * as React from 'react';\n\nconst UNINITIALIZED =\n  typeof Symbol === 'function' && typeof Symbol() === 'symbol'\n    ? Symbol()\n    : Object.freeze({});\n\nexport default function useStable<T>(getInitialValue: () => T): T {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = getInitialValue();\n  }\n  // $FlowFixMe (#64650789) Trouble refining types where `Symbol` is concerned.\n  return ref.current;\n}\n"],"mappings":"AASA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,IAAMC,aAAa,GACjB,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAAC,CAAC,KAAK,QAAQ,GACxDA,MAAM,CAAC,CAAC,GACRC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAEvB,eAAe,SAASC,SAASA,CAAIC,eAAwB,EAAK;EAChE,IAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAACP,aAAa,CAAC;EACvC,IAAIM,GAAG,CAACE,OAAO,KAAKR,aAAa,EAAE;IACjCM,GAAG,CAACE,OAAO,GAAGH,eAAe,CAAC,CAAC;EACjC;EAEA,OAAOC,GAAG,CAACE,OAAO;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}