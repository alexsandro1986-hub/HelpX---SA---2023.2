{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { chartTypes } from \"../../utils/constants\";\nimport { Line, Svg } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RenderVerticalLines = function RenderVerticalLines(props) {\n  var verticalLinesAr = props.verticalLinesAr,\n    verticalLinesSpacing = props.verticalLinesSpacing,\n    spacing = props.spacing,\n    initialSpacing = props.initialSpacing,\n    verticalLinesZIndex = props.verticalLinesZIndex,\n    verticalLinesHeight = props.verticalLinesHeight,\n    verticalLinesThickness = props.verticalLinesThickness,\n    verticalLinesColor = props.verticalLinesColor,\n    verticalLinesStrokeDashArray = props.verticalLinesStrokeDashArray,\n    verticalLinesShift = props.verticalLinesShift,\n    verticalLinesUptoDataPoint = props.verticalLinesUptoDataPoint,\n    xAxisThickness = props.xAxisThickness,\n    labelsExtraHeight = props.labelsExtraHeight,\n    containerHeight = props.containerHeight,\n    data = props.data,\n    stackData = props.stackData,\n    barWidth = props.barWidth,\n    maxValue = props.maxValue,\n    chartType = props.chartType,\n    containerHeightIncludingBelowXAxis = props.containerHeightIncludingBelowXAxis,\n    yAxisLabelWidth = props.yAxisLabelWidth,\n    totalWidth = props.totalWidth;\n  var getHeightOfVerticalLine = function getHeightOfVerticalLine(index) {\n    if (verticalLinesUptoDataPoint) {\n      if (index < data.length) {\n        return data[index].value * containerHeight / maxValue - xAxisThickness;\n      } else {\n        return verticalLinesHeight != null ? verticalLinesHeight : 0;\n      }\n    } else {\n      return verticalLinesHeight || containerHeightIncludingBelowXAxis - xAxisThickness;\n    }\n  };\n  var extendedContainerHeight = containerHeight + 10 + labelsExtraHeight;\n  return _jsx(View, {\n    style: {\n      position: 'absolute',\n      height: extendedContainerHeight,\n      bottom: 60,\n      width: totalWidth,\n      zIndex: verticalLinesZIndex || -1\n    },\n    children: _jsx(Svg, {\n      children: verticalLinesAr.map(function (item, index) {\n        var totalSpacing = initialSpacing;\n        if (verticalLinesSpacing) {\n          totalSpacing = verticalLinesSpacing * (index + 1);\n        } else {\n          if (stackData) {\n            totalSpacing += (stackData[0].barWidth || barWidth || 30) / 2;\n          } else {\n            totalSpacing += (data[0].barWidth || barWidth || 30) / 2;\n          }\n          for (var i = 0; i < index; i++) {\n            var actualSpacing = spacing;\n            if (stackData) {\n              if (i >= stackData.length - 1) {\n                actualSpacing += (barWidth || 30) / 2;\n              } else {\n                if (stackData[i].spacing || stackData[i].spacing === 0) {\n                  actualSpacing = stackData[i].spacing;\n                }\n                if (stackData[i + 1].barWidth) {\n                  actualSpacing += stackData[i + 1].barWidth;\n                } else {\n                  actualSpacing += barWidth || 30;\n                }\n              }\n            } else {\n              if (i >= data.length - 1) {\n                actualSpacing += (barWidth || 30) / 2;\n              } else {\n                if (data[i].spacing || data[i].spacing === 0) {\n                  actualSpacing = data[i].spacing;\n                }\n                if (data[i + 1].barWidth) {\n                  actualSpacing += data[i + 1].barWidth;\n                } else {\n                  actualSpacing += barWidth || 30;\n                }\n              }\n            }\n            totalSpacing += actualSpacing;\n          }\n        }\n        var x = verticalLinesShift + (chartType === chartTypes.BAR ? totalSpacing - 1 : verticalLinesSpacing ? verticalLinesSpacing * (index + 1) : index * spacing + (initialSpacing - 2));\n        return _jsx(Line, {\n          x1: x,\n          y1: extendedContainerHeight - getHeightOfVerticalLine(index),\n          x2: x,\n          y2: extendedContainerHeight,\n          stroke: verticalLinesColor || 'lightgray',\n          strokeWidth: verticalLinesThickness || 2,\n          strokeDasharray: verticalLinesStrokeDashArray != null ? verticalLinesStrokeDashArray : ''\n        }, index);\n      })\n    })\n  });\n};\nexport default RenderVerticalLines;","map":{"version":3,"names":["React","View","chartTypes","Line","Svg","jsx","_jsx","RenderVerticalLines","props","verticalLinesAr","verticalLinesSpacing","spacing","initialSpacing","verticalLinesZIndex","verticalLinesHeight","verticalLinesThickness","verticalLinesColor","verticalLinesStrokeDashArray","verticalLinesShift","verticalLinesUptoDataPoint","xAxisThickness","labelsExtraHeight","containerHeight","data","stackData","barWidth","maxValue","chartType","containerHeightIncludingBelowXAxis","yAxisLabelWidth","totalWidth","getHeightOfVerticalLine","index","length","value","extendedContainerHeight","style","position","height","bottom","width","zIndex","children","map","item","totalSpacing","i","actualSpacing","x","BAR","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray"],"sources":["C:/Users/gisele_anjos/Documents/sa.ReactNative2semestre/node_modules/react-native-gifted-charts/src/Components/BarAndLineChartsWrapper/renderVerticalLines.tsx"],"sourcesContent":["import React from 'react';\nimport {View} from 'react-native';\nimport {chartTypes} from '../../utils/constants';\nimport {Line, Svg} from 'react-native-svg';\n\nconst RenderVerticalLines = props => {\n  const {\n    verticalLinesAr,\n    verticalLinesSpacing,\n    spacing,\n    initialSpacing,\n    verticalLinesZIndex,\n    verticalLinesHeight,\n    verticalLinesThickness,\n    verticalLinesColor,\n    verticalLinesStrokeDashArray,\n    verticalLinesShift,\n    verticalLinesUptoDataPoint,\n    xAxisThickness,\n    labelsExtraHeight,\n    containerHeight,\n    data,\n    stackData,\n    barWidth,\n    maxValue,\n    chartType,\n    containerHeightIncludingBelowXAxis,\n    yAxisLabelWidth,\n    totalWidth,\n  } = props;\n\n  const getHeightOfVerticalLine = index => {\n    if (verticalLinesUptoDataPoint) {\n      if (index < data.length) {\n        return (\n          (data[index].value * containerHeight) / maxValue - xAxisThickness\n        );\n      } else {\n        return verticalLinesHeight ?? 0;\n      }\n    } else {\n      return (\n        verticalLinesHeight ||\n        containerHeightIncludingBelowXAxis - xAxisThickness\n      );\n    }\n  };\n\n  const extendedContainerHeight = containerHeight + 10 + labelsExtraHeight;\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        height: extendedContainerHeight,\n        bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n        width: totalWidth,\n        zIndex: verticalLinesZIndex || -1,\n      }}>\n      <Svg>\n        {verticalLinesAr.map((item: any, index: number) => {\n          let totalSpacing = initialSpacing;\n          if (verticalLinesSpacing) {\n            totalSpacing = verticalLinesSpacing * (index + 1);\n          } else {\n            if (stackData) {\n              totalSpacing += (stackData[0].barWidth || barWidth || 30) / 2;\n            } else {\n              totalSpacing += (data[0].barWidth || barWidth || 30) / 2;\n            }\n            for (let i = 0; i < index; i++) {\n              let actualSpacing = spacing;\n              if (stackData) {\n                if (i >= stackData.length - 1) {\n                  actualSpacing += (barWidth || 30) / 2;\n                } else {\n                  if (stackData[i].spacing || stackData[i].spacing === 0) {\n                    actualSpacing = stackData[i].spacing;\n                  }\n                  if (stackData[i + 1].barWidth) {\n                    actualSpacing += stackData[i + 1].barWidth;\n                  } else {\n                    actualSpacing += barWidth || 30;\n                  }\n                }\n              } else {\n                if (i >= data.length - 1) {\n                  actualSpacing += (barWidth || 30) / 2;\n                } else {\n                  if (data[i].spacing || data[i].spacing === 0) {\n                    actualSpacing = data[i].spacing;\n                  }\n                  if (data[i + 1].barWidth) {\n                    actualSpacing += data[i + 1].barWidth;\n                  } else {\n                    actualSpacing += barWidth || 30;\n                  }\n                }\n              }\n              totalSpacing += actualSpacing;\n            }\n          }\n\n          const x =\n            verticalLinesShift +\n            (chartType === chartTypes.BAR\n              ? totalSpacing - 1\n              : verticalLinesSpacing\n              ? verticalLinesSpacing * (index + 1)\n              : index * spacing + (initialSpacing - 2));\n\n          return (\n            <Line\n              key={index}\n              x1={x}\n              y1={extendedContainerHeight - getHeightOfVerticalLine(index)}\n              x2={x}\n              y2={extendedContainerHeight}\n              stroke={verticalLinesColor || 'lightgray'}\n              strokeWidth={verticalLinesThickness || 2}\n              strokeDasharray={verticalLinesStrokeDashArray ?? ''}\n            />\n          );\n        })}\n      </Svg>\n    </View>\n  );\n};\n\nexport default RenderVerticalLines;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}