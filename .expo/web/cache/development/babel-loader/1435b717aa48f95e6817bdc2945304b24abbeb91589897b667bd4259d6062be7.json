{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PieChart = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _main = require(\"./main\");\nvar _constants = require(\"../utils/constants\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\erick_ribeiro-souza\\\\Desktop\\\\s.a 2\\\\sa.ReactNative2semestre-1\\\\node_modules\\\\react-native-gifted-charts\\\\src\\\\PieChart\\\\index.tsx\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar PieChart = exports.PieChart = function PieChart(props) {\n  var radius = props.radius || 120;\n  var extraRadiusForFocused = props.extraRadiusForFocused || radius / 10;\n  var pi = props.semiCircle ? Math.PI / 2 : Math.PI;\n  var _useState = (0, _react.useState)(props.data.findIndex(function (item) {\n      return item.focused === true;\n    })),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    selectedIndex = _useState2[0],\n    setSelectedIndex = _useState2[1];\n  var startAngle = props.initialAngle || (props.semiCircle ? -pi : 0);\n  var total = 0;\n  props.data.forEach(function (item) {\n    total += item.value;\n  });\n  if (selectedIndex !== 0) {\n    var start = 0;\n    for (var i = 0; i < selectedIndex; i++) {\n      start += props.data[i].value;\n    }\n    startAngle += 2 * pi * start / total;\n  }\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: {\n      height: (radius + extraRadiusForFocused) * 2,\n      width: (radius + extraRadiusForFocused) * 2\n    },\n    children: [!(props.data.length <= 1 || !(props.focusOnPress || props.sectionAutoFocus) || selectedIndex === -1) && (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: {\n        position: 'absolute',\n        top: -extraRadiusForFocused,\n        left: -extraRadiusForFocused\n      },\n      children: (0, _jsxRuntime.jsx)(_main.PieChartMain, Object.assign({}, props, {\n        data: [{\n          value: props.data[selectedIndex].value,\n          color: props.data[selectedIndex].color || _constants.pieColors[selectedIndex % 9],\n          strokeColor: props.data[selectedIndex].strokeColor || undefined,\n          strokeWidth: props.data[selectedIndex].strokeWidth || undefined,\n          gradientCenterColor: props.data[selectedIndex].gradientCenterColor || undefined\n        }, {\n          value: total - props.data[selectedIndex].value,\n          peripheral: true,\n          strokeWidth: 0\n        }],\n        radius: radius + extraRadiusForFocused,\n        initialAngle: startAngle,\n        showText: false,\n        innerRadius: props.innerRadius || radius / 2.5,\n        isBiggerPie: true,\n        setSelectedIndex: setSelectedIndex\n      }))\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: {\n        position: 'absolute'\n      },\n      children: (0, _jsxRuntime.jsx)(_main.PieChartMain, Object.assign({}, props, {\n        selectedIndex: selectedIndex,\n        setSelectedIndex: setSelectedIndex\n      }))\n    })]\n  });\n};","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_main","_constants","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","PieChart","exports","props","radius","extraRadiusForFocused","pi","semiCircle","Math","PI","_useState","useState","data","findIndex","item","focused","_useState2","_slicedToArray2","selectedIndex","setSelectedIndex","startAngle","initialAngle","total","forEach","value","start","i","jsxs","View","style","height","width","children","length","focusOnPress","sectionAutoFocus","jsx","position","top","left","PieChartMain","assign","color","pieColors","strokeColor","undefined","strokeWidth","gradientCenterColor","peripheral","showText","innerRadius","isBiggerPie"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/node_modules/react-native-gifted-charts/src/PieChart/index.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {View, ColorValue} from 'react-native';\nimport {PieChartMain} from './main';\nimport {FontStyle} from 'react-native-svg';\nimport {pieColors} from '../utils/constants';\n\ntype propTypes = {\n  radius?: number;\n  isThreeD?: boolean;\n  donut?: boolean;\n  innerRadius?: number;\n  shadow?: boolean;\n  innerCircleColor?: ColorValue;\n  innerCircleBorderWidth?: number;\n  innerCircleBorderColor?: ColorValue;\n  shiftInnerCenterX?: number;\n  shiftInnerCenterY?: number;\n  shadowColor?: string;\n  shadowWidth?: number;\n  strokeWidth?: number;\n  strokeColor?: string;\n  backgroundColor?: string;\n  data: Array<itemType>;\n  semiCircle?: boolean;\n\n  showText?: boolean;\n  textColor?: string;\n  textSize?: number;\n  fontStyle?: FontStyle;\n  fontWeight?: string;\n  font?: string;\n  showTextBackground?: boolean;\n  textBackgroundColor?: string;\n  textBackgroundRadius?: number;\n  showValuesAsLabels?: boolean;\n\n  centerLabelComponent?: Function;\n  tiltAngle?: string;\n  initialAngle?: number;\n  labelsPosition?: 'onBorder' | 'outward' | 'inward' | 'mid';\n  showGradient?: boolean;\n  gradientCenterColor?: string;\n  onPress?: Function;\n  focusOnPress?: boolean;\n  toggleFocusOnPress?: boolean;\n  selectedIndex?: number;\n  setSelectedIndex?: Function;\n  sectionAutoFocus?: boolean;\n  onLabelPress?: Function;\n  extraRadiusForFocused?: number;\n};\ntype itemType = {\n  value: number;\n  shiftX?: number;\n  shiftY?: number;\n  color?: string;\n  gradientCenterColor?: string;\n  text?: string;\n  textColor?: string;\n  textSize?: number;\n  fontStyle?: FontStyle;\n  fontWeight?: string;\n  font?: string;\n  textBackgroundColor?: string;\n  textBackgroundRadius?: number;\n  shiftTextX?: number;\n  shiftTextY?: number;\n  labelPosition?: 'onBorder' | 'outward' | 'inward' | 'mid';\n  onPress?: Function;\n  onLabelPress?: Function;\n  strokeWidth?: number;\n  strokeColor?: string;\n  focused?: boolean;\n};\n\nexport const PieChart = (props: propTypes) => {\n  const radius = props.radius || 120;\n  const extraRadiusForFocused = props.extraRadiusForFocused || radius / 10;\n  const pi = props.semiCircle ? Math.PI / 2 : Math.PI;\n  const [selectedIndex, setSelectedIndex] = useState(\n    props.data.findIndex(item => item.focused === true),\n  );\n  let startAngle = props.initialAngle || (props.semiCircle ? -pi : 0);\n  let total = 0;\n  props.data.forEach(item => {\n    total += item.value;\n  });\n  if (selectedIndex !== 0) {\n    let start = 0;\n    for (let i = 0; i < selectedIndex; i++) {\n      start += props.data[i].value;\n    }\n    startAngle += (2 * pi * start) / total;\n  }\n  return (\n    <View\n      style={{\n        height: (radius + extraRadiusForFocused) * 2,\n        width: (radius + extraRadiusForFocused) * 2,\n      }}>\n      {!(\n        props.data.length <= 1 ||\n        !(props.focusOnPress || props.sectionAutoFocus) ||\n        selectedIndex === -1\n      ) && (\n        <View\n          style={{\n            position: 'absolute',\n            top: -extraRadiusForFocused,\n            left: -extraRadiusForFocused,\n          }}>\n          <PieChartMain\n            {...props}\n            data={[\n              {\n                value: props.data[selectedIndex].value,\n                color:\n                  props.data[selectedIndex].color ||\n                  pieColors[selectedIndex % 9],\n                strokeColor: props.data[selectedIndex].strokeColor || undefined,\n                strokeWidth: props.data[selectedIndex].strokeWidth || undefined,\n                gradientCenterColor:\n                  props.data[selectedIndex].gradientCenterColor || undefined,\n              },\n              {\n                value: total - props.data[selectedIndex].value,\n                peripheral: true,\n                strokeWidth: 0,\n              },\n            ]}\n            radius={radius + extraRadiusForFocused}\n            initialAngle={startAngle}\n            showText={false}\n            innerRadius={props.innerRadius || radius / 2.5}\n            isBiggerPie\n            setSelectedIndex={setSelectedIndex}\n          />\n        </View>\n      )}\n      <View style={{position: 'absolute'}}>\n        <PieChartMain\n          {...props}\n          selectedIndex={selectedIndex}\n          setSelectedIndex={setSelectedIndex}\n        />\n      </View>\n    </View>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}