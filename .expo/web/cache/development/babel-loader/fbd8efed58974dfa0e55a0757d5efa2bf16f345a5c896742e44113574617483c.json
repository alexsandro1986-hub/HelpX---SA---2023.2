{"ast":null,"code":"import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function informacoes() {\n  return _jsx(Stack.Navigator, {\n    children: _jsxs(Stack.Group, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Nome\",\n        component: Nome('Idade'),\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Idade\",\n        component: Idade('Alergias'),\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Alergias\",\n        component: Alergias('Contatos'),\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Contatos\",\n        component: Contatos(''),\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nfunction Nome(a) {\n  return function (_ref) {\n    var navigation = _ref.navigation;\n    return _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(View, {\n        style: styles.teste,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Nome\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return navigation.navigate(a);\n        },\n        children: _jsx(Text, {\n          children: \"OK\"\n        })\n      })]\n    });\n  };\n}\nfunction Idade(a) {\n  return function (_ref2) {\n    var navigation = _ref2.navigation;\n    return _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(View, {\n        style: styles.teste,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Idade\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return navigation.navigate(a);\n        },\n        children: _jsx(Text, {\n          children: \"OK\"\n        })\n      })]\n    });\n  };\n}\nfunction Alergias(a) {\n  return function (_ref3) {\n    var navigation = _ref3.navigation;\n    return _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(View, {\n        style: styles.teste,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Alergias\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return navigation.navigate(a);\n        },\n        children: _jsx(Text, {\n          children: \"OK\"\n        })\n      })]\n    });\n  };\n}\nfunction Contatos(a) {\n  return function (_ref4) {\n    var navigation = _ref4.navigation;\n    return _jsxs(View, {\n      style: styles.body,\n      children: [_jsxs(View, {\n        style: styles.teste,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"n\\xB0-telefone\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Nome-contato\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Telefone-contato\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return navigation.navigate(a);\n        },\n        children: _jsx(Text, {\n          children: \"OK\"\n        })\n      })]\n    });\n  };\n}\nvar Tab = createBottomTabNavigator();\nvar styles = StyleSheet.create({\n  informacoes: {\n    flex: 1,\n    width: 450,\n    backgroundColor: \"#C7FFCC\",\n    alignItems: \"center\",\n    gap: 42\n  },\n  informatexto: {\n    marginTop: 100,\n    fontSize: 30,\n    color: '#e91e63'\n  },\n  caixaIforma: {\n    height: 350,\n    width: 350,\n    backgroundColor: '#FFF',\n    borderRadius: 15,\n    alignItems: 'center'\n  },\n  textoInforma: {\n    fontSize: 30,\n    marginTop: 10\n  },\n  pedirInfo: {\n    marginTop: 45,\n    fontSize: 50\n  },\n  botaoDireito: {\n    display: 'flex',\n    left: 105,\n    top: 20\n  },\n  botaoEsquerdo: {\n    right: 105,\n    bottom: 10\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","createBottomTabNavigator","View","Button","Text","StyleSheet","Image","TextInput","TouchableOpacity","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","informacoes","Navigator","children","Group","Screen","name","component","Nome","options","headerShown","Idade","Alergias","Contatos","a","_ref","navigation","style","styles","body","teste","input","placeholder","botao","onPress","navigate","_ref2","_ref3","_ref4","Tab","create","flex","width","backgroundColor","alignItems","gap","informatexto","marginTop","fontSize","color","caixaIforma","height","borderRadius","textoInforma","pedirInfo","botaoDireito","display","left","top","botaoEsquerdo","right","bottom"],"sources":["C:/xando/sa/sa.ReactNative2semestre/src/pages/informacoes/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n// import { MaterialCommunityIcons } from '@expo/vector-icons';\r\n// import { Button, Input } from 'react-native-elements';\r\n// import Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\n import { View, Button, Text, StyleSheet, Image, TextInput, TouchableOpacity } from 'react-native';\r\n import { createStackNavigator } from '@react-navigation/stack';\r\n\r\n\r\n\r\n\r\n\r\n const Stack = createStackNavigator();\r\n\r\n\r\n\r\nexport default function informacoes() {\r\n    // const avancar = () => {\r\n    //     alert('oi')\r\n    // }\r\n\r\n    // const voltar = () => {\r\n    //     alert('calma gisele')\r\n    // }\r\n    \r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n\r\n<Stack.Navigator>\r\n\r\n<Stack.Group>\r\n\r\n  <Stack.Screen name='Nome' component={Nome('Idade')} options={{ headerShown: false }} />\r\n  <Stack.Screen name='Idade' component={Idade('Alergias')} options={{ headerShown: false }} />\r\n  <Stack.Screen name='Alergias' component={Alergias('Contatos')} options={{ headerShown: false }} />\r\n  <Stack.Screen name='Contatos' component={Contatos('')} options={{ headerShown: false }} />\r\n\r\n</Stack.Group>\r\n\r\n</Stack.Navigator>\r\n        // <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n        //     <View style={styles.informacoes}>\r\n        //         <View>\r\n        //             <Text style={styles.informatexto}>CADASTRAR INFORMAÇOES</Text>\r\n        //         </View>\r\n\r\n        //         <View style={styles.caixaIforma}>\r\n        //             <Text style={styles.textoInforma}>Suas  Informações</Text>\r\n        //             <View>\r\n        //                 <Input\r\n        //                     placeholder='Informações...'\r\n        //                     keyboardType='email-address'\r\n\r\n        //                     onChangeText={value => setEmail(value)}\r\n        //                     returnKeyType='done'\r\n        //                 />\r\n\r\n        //             </View>\r\n\r\n        //         </View>\r\n\r\n        //     </View>\r\n        //     <View style={styles.botaoDireito}>\r\n\r\n        //         <Button\r\n        //             icon={\r\n        //                 <Icon\r\n        //                     name=\"arrow-right\"\r\n        //                     size={15}\r\n        //                     color=\"white\"\r\n\r\n        //                 />\r\n        //             }\r\n\r\n        //             onPress={avancar}\r\n        //         />\r\n\r\n        //     </View>\r\n        //     <View style={styles.botaoEsquerdo}>\r\n        //         <Button\r\n        //             icon={\r\n        //                 <Icon\r\n        //                     name=\"arrow-left\"\r\n        //                     size={15}\r\n        //                     color=\"white\"\r\n\r\n        //                 />\r\n        //             }\r\n\r\n        //             onPress={voltar}\r\n        //         />\r\n\r\n        //     </View>\r\n        // </View>\r\n    );\r\n}\r\n\r\nfunction Nome(a) {\r\n      return function ({ navigation }) {\r\n    \r\n        return (\r\n          <View  style={styles.body}>\r\n            <View style={styles.teste}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Nome\"\r\n            // onChangeText={(text) => setNome(text)}\r\n            // value={nome}\r\n            />\r\n            </View>\r\n             <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate(a)}>\r\n            \r\n            <Text>OK</Text>\r\n                   \r\n            \r\n             </TouchableOpacity>\r\n          </View>\r\n        );\r\n      }\r\n    }\r\n    \r\n    function Idade(a) {\r\n      return function ({ navigation }) {\r\n        return (\r\n                \r\n          <View  style={styles.body}>         \r\n            <View style={styles.teste}>\r\n            <TextInput\r\n                  style={styles.input}\r\n                  placeholder=\"Idade\"\r\n                  // onChangeText={(text) => setNome(text)}\r\n                  // value={nome}\r\n            />\r\n            </View>\r\n            <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate(a)}>\r\n            \r\n           <Text>OK</Text>\r\n                  \r\n           \r\n            </TouchableOpacity>\r\n          </View>\r\n        );\r\n      }\r\n    }\r\n\r\n    function Alergias(a) {\r\n        return function ({ navigation }) {\r\n          return (\r\n                  \r\n            <View  style={styles.body}>         \r\n              <View style={styles.teste}>\r\n              <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Alergias\"\r\n                    // onChangeText={(text) => setNome(text)}\r\n                    // value={nome}\r\n              />\r\n              </View>\r\n              <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate(a)}>\r\n              \r\n             <Text>OK</Text>\r\n                    \r\n             \r\n              </TouchableOpacity>\r\n            </View>\r\n          );\r\n        }\r\n      }\r\n\r\n    \r\n    function Contatos(a) {\r\n      return function ({ navigation }) {\r\n        return (\r\n          <View  style={styles.body}>\r\n            <View style={styles.teste}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"n°-telefone\"\r\n           \r\n            />\r\n             <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Nome-contato\"\r\n           \r\n            />\r\n             <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Telefone-contato\"\r\n           \r\n            />\r\n            </View>\r\n             <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate(a)}>\r\n            \r\n                <Text>OK</Text>\r\n                   \r\n            \r\n             </TouchableOpacity>\r\n          </View>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    informacoes: {\r\n        flex: 1,\r\n        width: 450,\r\n        backgroundColor: \"#C7FFCC\",\r\n        alignItems: \"center\",\r\n        gap: 42\r\n\r\n    },\r\n    informatexto: {\r\n        marginTop: 100,\r\n        fontSize: 30,\r\n        color: '#e91e63',\r\n    },\r\n    caixaIforma: {\r\n        height: 350,\r\n        width: 350,\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 15,\r\n        alignItems: 'center'\r\n    },\r\n    textoInforma: {\r\n        fontSize: 30,\r\n        marginTop: 10,\r\n    },\r\n    pedirInfo: {\r\n        marginTop: 45,\r\n        fontSize: 50,\r\n    },\r\n    botaoDireito: {\r\n        display: 'flex',\r\n        left: 105,\r\n        top: 20\r\n\r\n\r\n    },\r\n    botaoEsquerdo: {\r\n        right: 105,\r\n        bottom: 10\r\n    },\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n// })\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Button, Text, StyleSheet, Image, TextInput, TouchableOpacity } from 'react-native';\r\n// import { createStackNavigator } from '@react-navigation/stack';\r\n// import { NavigationContainer } from '@react-navigation/native';\r\n\r\n\r\n\r\n\r\n// const Stack = createStackNavigator();\r\n\r\n\r\n// const Header = () => (\r\n    \r\n//   <View style={styles.header}>\r\n//     <View style={styles.containerLogo} >\r\n//         <Image\r\n//           source={require('/img/logopronto.png')}\r\n//           style={{ width: 300, height: 300 }}\r\n//           resizeMode=\"contain\"\r\n//         />\r\n//     </View>\r\n\r\n\r\n    \r\n//   </View>\r\n    \r\n// );\r\n\r\n\r\n// export default function Cadastro() {\r\n//   return (\r\n\r\n//     <><Header />\r\n    \r\n//     <Stack.Navigator>\r\n\r\n//       <Stack.Group>\r\n\r\n//         <Stack.Screen name='Email' component={Email('Senha')} options={{ headerShown: false }} />\r\n//         <Stack.Screen name='Senha' component={Senha('Confirmar Senha')} options={{ headerShown: false }} />\r\n//         <Stack.Screen name='Confirmar Senha' component={ConfirmarSenha('')} options={{ headerShown: false }} />\r\n\r\n\r\n//       </Stack.Group>\r\n\r\n//     </Stack.Navigator></>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n// function Email(a) {\r\n//   return function ({ navigation }) {\r\n\r\n//     return (\r\n//       <View  style={styles.body}>\r\n//         <View style={styles.teste}>\r\n//         <TextInput\r\n//           style={styles.input}\r\n//           placeholder=\"Email\"\r\n//         // onChangeText={(text) => setNome(text)}\r\n//         // value={nome}\r\n//         />\r\n//         </View>\r\n//          <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate(a)}>\r\n        \r\n//         <Text>OK</Text>\r\n               \r\n        \r\n//          </TouchableOpacity>\r\n//       </View>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// function Senha(a) {\r\n//   return function ({ navigation }) {\r\n//     return (\r\n            \r\n//       <View  style={styles.body}>         \r\n//         <View style={styles.teste}>\r\n//         <TextInput\r\n//               style={styles.input}\r\n//               placeholder=\"Senha\"\r\n//               // onChangeText={(text) => setNome(text)}\r\n//               // value={nome}\r\n//         />\r\n//         </View>\r\n//         <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate(a)}>\r\n        \r\n//        <Text>OK</Text>\r\n              \r\n       \r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// function ConfirmarSenha(a) {\r\n//   return function ({ navigation }) {\r\n//     return (\r\n//       <View  style={styles.body}>\r\n//         <View style={styles.teste}>\r\n//         <TextInput\r\n//           style={styles.input}\r\n//           placeholder=\"ConfirmarSenha\"\r\n//         // onChangeText={(text) => setNome(text)}\r\n//         // value={nome}\r\n//         />\r\n//         </View>\r\n//          <TouchableOpacity style={styles.botao} onPress={() => navigation.navigate(a)}>\r\n        \r\n//             <Text>OK</Text>\r\n               \r\n        \r\n//          </TouchableOpacity>\r\n//       </View>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 10,\r\n//     backgroundColor: '#97d8ae',\r\n//   },\r\n\r\n//   teste:{\r\n//     justifyContent: 'center',\r\n//     alignContent: 'center',\r\n    \r\n//   },\r\n//   input: {\r\n//     fontSize: 15,\r\n//     width: 250,\r\n//     height: 50,\r\n//     borderColor: 'black',\r\n//     borderWidth: 1,\r\n//     paddingLeft: 10,\r\n//     marginBottom: 10,\r\n//     borderRadius: 20,\r\n   \r\n\r\n//   },\r\n \r\n//   botao:{\r\n//     backgroundColor: 'blue',\r\n//     width: 150,\r\n//     height: 30,\r\n//     borderRadius: 10,\r\n//     justifyContent: 'center',\r\n//     alignContent: 'center',\r\n   \r\n//   },\r\n//   header:{\r\n//     backgroundColor: 'black',\r\n//     height: '20%',\r\n    \r\n//   },\r\n//   body:{\r\n//     width: '100%',\r\n//     paddingTop: 160,\r\n//     justifyContent: 'center',\r\n//     alignContent: 'center',\r\n    \r\n//   },\r\n\r\n//   containerLogo:{\r\n//     flex: 2,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n\r\n\r\n//   },\r\n  \r\n\r\n// });\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}