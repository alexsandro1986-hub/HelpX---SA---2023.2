{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UserManager() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var createUser = function createUser(userData) {};\n  var editUser = function editUser(userId, userData) {};\n  var deleteUser = function deleteUser(userId) {};\n  return _jsx(View, {});\n}\nfunction AdminScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      children: \"Painel do Administrador\"\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default AdminScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","UserManager","_useState","useState","_useState2","_slicedToArray","users","setUsers","createUser","userData","editUser","userId","deleteUser","AdminScreen","style","styles","container","children","create","flex","justifyContent","alignItems"],"sources":["C:/Users/erick_ribeiro-souza/Desktop/s.a 2/sa.ReactNative2semestre-1/src/pages/Adm/index.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\n\r\n\r\nfunction UserManager() {\r\n    const [users, setUsers] = useState([]); // Mantenha uma lista de usuários\r\n  \r\n    const createUser = (userData) => {\r\n      // Lógica para criar um novo usuário e adicioná-lo a 'users'\r\n    };\r\n  \r\n    const editUser = (userId, userData) => {\r\n      // Lógica para editar um usuário com ID 'userId'\r\n    };\r\n  \r\n    const deleteUser = (userId) => {\r\n      // Lógica para excluir um usuário com ID 'userId'\r\n    };\r\n  \r\n    return (\r\n      <View>\r\n        {/* Interface de usuário para gerenciamento de usuários */}\r\n      </View>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\nfunction AdminScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Painel do Administrador</Text>\r\n      {/* Adicione funcionalidades específicas do administrador aqui */}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default AdminScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAK1B,SAASC,WAAWA,CAAA,EAAG;EACnB,IAAAC,SAAA,GAA0BC,QAAQ,CAAC,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA/BI,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAIC,QAAQ,EAAK,CAEjC,CAAC;EAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,MAAM,EAAEF,QAAQ,EAAK,CAEvC,CAAC;EAED,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAID,MAAM,EAAK,CAE/B,CAAC;EAED,OACEX,IAAA,CAACJ,IAAI,IAEC,CAAC;AAEX;AAMF,SAASiB,WAAWA,CAAA,EAAG;EACrB,OACEb,IAAA,CAACJ,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BjB,IAAA,CAACH,IAAI;MAAAoB,QAAA,EAAC;IAAuB,CAAM;EAAC,CAEhC,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGjB,UAAU,CAACoB,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAeR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}