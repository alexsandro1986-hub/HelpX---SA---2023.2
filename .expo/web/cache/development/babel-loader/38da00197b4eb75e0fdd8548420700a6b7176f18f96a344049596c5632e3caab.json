{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getServerResources = getServerResources;\nexports.registerStaticFont = registerStaticFont;\nexports.resetServerContext = resetServerContext;\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _ExpoFontLoader = _interopRequireDefault(require(\"./ExpoFontLoader\"));\nvar _FontLoader = require(\"./FontLoader\");\nfunction getServerResources() {\n  return _ExpoFontLoader.default.getServerResources();\n}\nfunction resetServerContext() {\n  return _ExpoFontLoader.default.resetServerContext();\n}\nfunction registerStaticFont(fontFamily, source) {\n  if (!source) {\n    throw new _expoModulesCore.CodedError(\"ERR_FONT_SOURCE\", \"Cannot load null or undefined font source: { \\\"\" + fontFamily + \"\\\": \" + source + \" }. Expected asset of type `FontSource` for fontFamily of name: \\\"\" + fontFamily + \"\\\"\");\n  }\n  var asset = (0, _FontLoader.getAssetForSource)(source);\n  (0, _FontLoader.loadSingleFontAsync)(fontFamily, asset);\n}","map":{"version":3,"names":["_expoModulesCore","require","_ExpoFontLoader","_interopRequireDefault","_FontLoader","getServerResources","ExpoFontLoader","resetServerContext","registerStaticFont","fontFamily","source","CodedError","asset","getAssetForSource","loadSingleFontAsync"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\expo-font\\src\\server.ts"],"sourcesContent":["import { CodedError } from 'expo-modules-core';\n\nimport ExpoFontLoader from './ExpoFontLoader';\nimport { FontSource } from './Font.types';\nimport { getAssetForSource, loadSingleFontAsync } from './FontLoader';\n\n/**\n * @returns the server resources that should be statically extracted.\n * @private\n */\nexport function getServerResources() {\n  return ExpoFontLoader.getServerResources();\n}\n\n/**\n * @returns clear the server resources from the global scope.\n * @private\n */\nexport function resetServerContext() {\n  return ExpoFontLoader.resetServerContext();\n}\n\nexport function registerStaticFont(fontFamily: string, source?: FontSource | null) {\n  // MUST BE A SYNC FUNCTION!\n  if (!source) {\n    throw new CodedError(\n      `ERR_FONT_SOURCE`,\n      `Cannot load null or undefined font source: { \"${fontFamily}\": ${source} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${fontFamily}\"`\n    );\n  }\n  const asset = getAssetForSource(source);\n\n  loadSingleFontAsync(fontFamily, asset);\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAEA,IAAAC,eAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,WAAA,GAAAH,OAAA;AAMM,SAAUI,kBAAkBA,CAAA;EAChC,OAAOC,uBAAc,CAACD,kBAAkB,EAAE;AAC5C;AAMM,SAAUE,kBAAkBA,CAAA;EAChC,OAAOD,uBAAc,CAACC,kBAAkB,EAAE;AAC5C;AAEM,SAAUC,kBAAkBA,CAACC,UAAkB,EAAEC,MAA0B;EAE/E,IAAI,CAACA,MAAM,EAAE;IACX,MAAM,IAAIC,2BAAU,wEAE+BF,UAAU,YAAMC,MAAM,0EAAsED,UAAU,OAAG,CAC3J;;EAEH,IAAMG,KAAK,GAAG,IAAAC,6BAAiB,EAACH,MAAM,CAAC;EAEvC,IAAAI,+BAAmB,EAACL,UAAU,EAAEG,KAAK,CAAC;AACxC"},"metadata":{},"sourceType":"script","externalDependencies":[]}