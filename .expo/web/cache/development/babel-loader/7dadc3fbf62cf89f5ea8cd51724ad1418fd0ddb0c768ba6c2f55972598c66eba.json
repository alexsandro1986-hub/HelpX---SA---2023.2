{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useCallback, useEffect, useMemo, useState, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RenderBars from \"./RenderBars\";\nimport RenderStackBars from \"./RenderStackBars\";\nimport { getArrowPoints, getAxesAndRulesProps, getSecondaryDataWithOffsetIncluded, getXForLineInBar, getYForLineInBar, maxAndMinUtil, svgPath } from \"../utils\";\nimport { AxesAndRulesDefaults, BarDefaults, chartTypes, defaultLineConfig } from \"../utils/constants\";\nimport BarAndLineChartsWrapper from \"../Components/BarAndLineChartsWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var BarChart = function BarChart(props) {\n  var _props$scrollRef, _props$spacing, _props$initialSpacing, _props$endSpacing, _props$horizontal, _props$rtl, _props$yAxisAtTop, _props$intactTopLabel, _props$isAnimated, _props$animationDurat, _props$lineConfig$ini, _props$lineConfig$cur, _props$lineConfig$cur2, _props$lineConfig$sho, _props$lineConfig$arr, _props$lineConfig$arr2, _defaultLineConfig$ar, _props$lineConfig$arr3, _props$lineConfig$arr4, _defaultLineConfig$ar2, _props$lineConfig$arr5, _props$lineConfig$arr6, _defaultLineConfig$ar3, _props$lineConfig$arr7, _props$lineConfig$arr8, _defaultLineConfig$ar4, _props$lineConfig$arr9, _props$lineConfig$arr10, _defaultLineConfig$ar5, _props$lineConfig$arr11, _props$lineConfig$arr12, _defaultLineConfig$ar6, _props$lineConfig$isS, _props$noOfSections, _props$stepHeight, _props$stepHeight2, _props$labelWidth, _props$scrollToEnd, _props$scrollAnimatio, _props$scrollEventThr, _props$labelsExtraHei, _props$maxValue, _props$mostNegativeVa, _props$stepValue, _props$noOfSectionsBe, _props$disableScroll, _props$showScrollIndi, _props$side, _props$rotateLabel, _props$opacity, _props$isThreeD, _props$showXAxisIndic, _props$xAxisIndicesHe, _props$xAxisIndicesWi, _props$xAxisIndicesCo, _props$xAxisThickness, _props$xAxisTextNumbe, _props$yAxisLabelWidt, _props$autoShiftLabel, _props$shiftX, _props$shiftY;\n  var scrollRef = (_props$scrollRef = props.scrollRef) != null ? _props$scrollRef : useRef(null);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    points = _useState2[0],\n    setPoints = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    arrowPoints = _useState4[0],\n    setArrowPoints = _useState4[1];\n  var _useState5 = useState(-1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedIndex = _useState6[0],\n    setSelectedIndex = _useState6[1];\n  var showLine = props.showLine || BarDefaults.showLine;\n  var spacing = (_props$spacing = props.spacing) != null ? _props$spacing : BarDefaults.spacing;\n  var initialSpacing = (_props$initialSpacing = props.initialSpacing) != null ? _props$initialSpacing : spacing;\n  var endSpacing = (_props$endSpacing = props.endSpacing) != null ? _props$endSpacing : spacing;\n  var showFractionalValues = props.showFractionalValues || AxesAndRulesDefaults.showFractionalValues;\n  var horizontal = (_props$horizontal = props.horizontal) != null ? _props$horizontal : BarDefaults.horizontal;\n  var rtl = (_props$rtl = props.rtl) != null ? _props$rtl : BarDefaults.rtl;\n  var yAxisAtTop = (_props$yAxisAtTop = props.yAxisAtTop) != null ? _props$yAxisAtTop : BarDefaults.yAxisAtTop;\n  var intactTopLabel = (_props$intactTopLabel = props.intactTopLabel) != null ? _props$intactTopLabel : BarDefaults.intactTopLabel;\n  var heightFromProps = horizontal ? props.width : props.height;\n  var widthFromProps = horizontal ? props.height : props.width;\n  var isAnimated = (_props$isAnimated = props.isAnimated) != null ? _props$isAnimated : BarDefaults.isAnimated;\n  var animationDuration = (_props$animationDurat = props.animationDuration) != null ? _props$animationDurat : BarDefaults.animationDuration;\n  var data = useMemo(function () {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(function (item) {\n        var _props$yAxisOffset;\n        item.value = item.value - ((_props$yAxisOffset = props.yAxisOffset) != null ? _props$yAxisOffset : 0);\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n  var secondaryData = getSecondaryDataWithOffsetIncluded(props.secondaryData, props.secondaryYAxis);\n  var lineData = useMemo(function () {\n    if (!props.lineData) {\n      var _props$stackData;\n      return (_props$stackData = props.stackData) != null ? _props$stackData : data;\n    }\n    if (props.yAxisOffset) {\n      return props.lineData.map(function (item) {\n        var _props$yAxisOffset2;\n        item.value = item.value - ((_props$yAxisOffset2 = props.yAxisOffset) != null ? _props$yAxisOffset2 : 0);\n        return item;\n      });\n    }\n    return props.lineData;\n  }, [props.yAxisOffset, props.lineData, data, props.stackData]);\n  var lineBehindBars = props.lineBehindBars || BarDefaults.lineBehindBars;\n  defaultLineConfig.initialSpacing = initialSpacing;\n  defaultLineConfig.endIndex = lineData.length - 1;\n  defaultLineConfig.animationDuration = animationDuration;\n  var lineConfig = props.lineConfig ? {\n    initialSpacing: (_props$lineConfig$ini = props.lineConfig.initialSpacing) != null ? _props$lineConfig$ini : defaultLineConfig.initialSpacing,\n    curved: props.lineConfig.curved || defaultLineConfig.curved,\n    curvature: (_props$lineConfig$cur = props.lineConfig.curvature) != null ? _props$lineConfig$cur : defaultLineConfig.curvature,\n    curveType: (_props$lineConfig$cur2 = props.lineConfig.curveType) != null ? _props$lineConfig$cur2 : defaultLineConfig.curveType,\n    isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n    animationDuration: props.lineConfig.animationDuration || defaultLineConfig.animationDuration,\n    thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n    color: props.lineConfig.color || defaultLineConfig.color,\n    hideDataPoints: props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n    dataPointsShape: props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n    dataPointsHeight: props.lineConfig.dataPointsHeight || defaultLineConfig.dataPointsHeight,\n    dataPointsWidth: props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n    dataPointsColor: props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n    dataPointsRadius: props.lineConfig.dataPointsRadius || defaultLineConfig.dataPointsRadius,\n    textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n    textFontSize: props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n    textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n    textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n    shiftX: props.lineConfig.shiftX || defaultLineConfig.shiftX,\n    shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n    delay: props.lineConfig.delay || defaultLineConfig.delay,\n    startIndex: props.lineConfig.startIndex || defaultLineConfig.startIndex,\n    endIndex: props.lineConfig.endIndex === 0 ? 0 : props.lineConfig.endIndex || defaultLineConfig.endIndex,\n    showArrow: (_props$lineConfig$sho = props.lineConfig.showArrow) != null ? _props$lineConfig$sho : defaultLineConfig.showArrow,\n    arrowConfig: {\n      length: (_props$lineConfig$arr = (_props$lineConfig$arr2 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr2.length) != null ? _props$lineConfig$arr : (_defaultLineConfig$ar = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar.length,\n      width: (_props$lineConfig$arr3 = (_props$lineConfig$arr4 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr4.width) != null ? _props$lineConfig$arr3 : (_defaultLineConfig$ar2 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar2.width,\n      strokeWidth: (_props$lineConfig$arr5 = (_props$lineConfig$arr6 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr6.strokeWidth) != null ? _props$lineConfig$arr5 : (_defaultLineConfig$ar3 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar3.strokeWidth,\n      strokeColor: (_props$lineConfig$arr7 = (_props$lineConfig$arr8 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr8.strokeColor) != null ? _props$lineConfig$arr7 : (_defaultLineConfig$ar4 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar4.strokeColor,\n      fillColor: (_props$lineConfig$arr9 = (_props$lineConfig$arr10 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr10.fillColor) != null ? _props$lineConfig$arr9 : (_defaultLineConfig$ar5 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar5.fillColor,\n      showArrowBase: (_props$lineConfig$arr11 = (_props$lineConfig$arr12 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr12.showArrowBase) != null ? _props$lineConfig$arr11 : (_defaultLineConfig$ar6 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar6.showArrowBase\n    },\n    customDataPoint: props.lineConfig.customDataPoint,\n    isSecondary: (_props$lineConfig$isS = props.lineConfig.isSecondary) != null ? _props$lineConfig$isS : defaultLineConfig.isSecondary\n  } : defaultLineConfig;\n  var noOfSections = (_props$noOfSections = props.noOfSections) != null ? _props$noOfSections : AxesAndRulesDefaults.noOfSections;\n  var containerHeight = heightFromProps != null ? heightFromProps : ((_props$stepHeight = props.stepHeight) != null ? _props$stepHeight : 0) * noOfSections || AxesAndRulesDefaults.containerHeight;\n  var horizSections = [{\n    value: '0'\n  }];\n  var stepHeight = (_props$stepHeight2 = props.stepHeight) != null ? _props$stepHeight2 : containerHeight / noOfSections;\n  var labelWidth = (_props$labelWidth = props.labelWidth) != null ? _props$labelWidth : AxesAndRulesDefaults.labelWidth;\n  var scrollToEnd = (_props$scrollToEnd = props.scrollToEnd) != null ? _props$scrollToEnd : BarDefaults.scrollToEnd;\n  var scrollAnimation = (_props$scrollAnimatio = props.scrollAnimation) != null ? _props$scrollAnimatio : BarDefaults.scrollAnimation;\n  var scrollEventThrottle = (_props$scrollEventThr = props.scrollEventThrottle) != null ? _props$scrollEventThr : BarDefaults.scrollEventThrottle;\n  var labelsExtraHeight = (_props$labelsExtraHei = props.labelsExtraHeight) != null ? _props$labelsExtraHei : AxesAndRulesDefaults.labelsExtraHeight;\n  var totalWidth = initialSpacing;\n  var maxItem = 0,\n    minItem = 0;\n  if (props.stackData) {\n    props.stackData.forEach(function (stackItem) {\n      var _ref, _stackItem$stacks$0$b;\n      var stackSum = stackItem.stacks.reduce(function (acc, stack) {\n        var _stack$value;\n        return acc + ((_stack$value = stack.value) != null ? _stack$value : 0);\n      }, 0);\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n      totalWidth += ((_ref = (_stackItem$stacks$0$b = stackItem.stacks[0].barWidth) != null ? _stackItem$stacks$0$b : props.barWidth) != null ? _ref : BarDefaults.barWidth) + spacing;\n    });\n  } else {\n    data.forEach(function (item) {\n      var _ref2, _item$barWidth, _item$spacing;\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n      totalWidth += ((_ref2 = (_item$barWidth = item.barWidth) != null ? _item$barWidth : props.barWidth) != null ? _ref2 : BarDefaults.barWidth) + ((_item$spacing = item.spacing) != null ? _item$spacing : spacing);\n    });\n  }\n  var secondaryMaxItem = 0,\n    secondaryMinItem = 0;\n  if (lineConfig.isSecondary) {\n    lineData.forEach(function (item) {\n      if (item.value > secondaryMaxItem) {\n        secondaryMaxItem = item.value;\n      }\n      if (item.value < secondaryMinItem) {\n        secondaryMinItem = item.value;\n      }\n    });\n  }\n  var maxAndMin = maxAndMinUtil(maxItem, minItem, props.roundToDigits, props.showFractionalValues);\n  var secondaryMaxAndMin = maxAndMinUtil(secondaryMaxItem, secondaryMinItem, props.roundToDigits, props.showFractionalValues);\n  var maxValue = (_props$maxValue = props.maxValue) != null ? _props$maxValue : maxAndMin.maxItem;\n  var secondaryMaxValue = lineConfig.isSecondary ? secondaryMaxAndMin.maxItem : maxValue;\n  var mostNegativeValue = (_props$mostNegativeVa = props.mostNegativeValue) != null ? _props$mostNegativeVa : maxAndMin.minItem;\n  var stepValue = (_props$stepValue = props.stepValue) != null ? _props$stepValue : maxValue / noOfSections;\n  var noOfSectionsBelowXAxis = (_props$noOfSectionsBe = props.noOfSectionsBelowXAxis) != null ? _props$noOfSectionsBe : -mostNegativeValue / stepValue;\n  var disableScroll = (_props$disableScroll = props.disableScroll) != null ? _props$disableScroll : BarDefaults.disableScroll;\n  var showScrollIndicator = (_props$showScrollIndi = props.showScrollIndicator) != null ? _props$showScrollIndi : BarDefaults.showScrollIndicator;\n  var side = (_props$side = props.side) != null ? _props$side : BarDefaults.side;\n  var rotateLabel = (_props$rotateLabel = props.rotateLabel) != null ? _props$rotateLabel : AxesAndRulesDefaults.rotateLabel;\n  var opacity = (_props$opacity = props.opacity) != null ? _props$opacity : BarDefaults.opacity;\n  var isThreeD = (_props$isThreeD = props.isThreeD) != null ? _props$isThreeD : BarDefaults.isThreeD;\n  var showXAxisIndices = (_props$showXAxisIndic = props.showXAxisIndices) != null ? _props$showXAxisIndic : AxesAndRulesDefaults.showXAxisIndices;\n  var xAxisIndicesHeight = (_props$xAxisIndicesHe = props.xAxisIndicesHeight) != null ? _props$xAxisIndicesHe : AxesAndRulesDefaults.xAxisIndicesHeight;\n  var xAxisIndicesWidth = (_props$xAxisIndicesWi = props.xAxisIndicesWidth) != null ? _props$xAxisIndicesWi : AxesAndRulesDefaults.xAxisIndicesWidth;\n  var xAxisIndicesColor = (_props$xAxisIndicesCo = props.xAxisIndicesColor) != null ? _props$xAxisIndicesCo : AxesAndRulesDefaults.xAxisIndicesColor;\n  var xAxisThickness = (_props$xAxisThickness = props.xAxisThickness) != null ? _props$xAxisThickness : AxesAndRulesDefaults.xAxisThickness;\n  var xAxisTextNumberOfLines = (_props$xAxisTextNumbe = props.xAxisTextNumberOfLines) != null ? _props$xAxisTextNumbe : AxesAndRulesDefaults.xAxisTextNumberOfLines;\n  var horizontalRulesStyle = props.horizontalRulesStyle;\n  var yAxisLabelWidth = (_props$yAxisLabelWidt = props.yAxisLabelWidth) != null ? _props$yAxisLabelWidt : props.hideYAxisText ? AxesAndRulesDefaults.yAxisEmptyLabelWidth : AxesAndRulesDefaults.yAxisLabelWidth;\n  var heightValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var opacValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var widthValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var autoShiftLabels = (_props$autoShiftLabel = props.autoShiftLabels) != null ? _props$autoShiftLabel : false;\n  var labelsAppear = useCallback(function () {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false\n    }).start();\n  }, [opacValue]);\n  var decreaseWidth = useCallback(function () {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: lineConfig.animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start();\n  }, [lineConfig.animationDuration, widthValue]);\n  useEffect(function () {\n    if (showLine) {\n      var _ref3, _$barWidth, _ref4, _props$stackData2;\n      var pp = '';\n      var firstBarWidth = (_ref3 = (_$barWidth = (_ref4 = (_props$stackData2 = props.stackData) != null ? _props$stackData2 : data) == null ? void 0 : _ref4[0].barWidth) != null ? _$barWidth : props.barWidth) != null ? _ref3 : 30;\n      if (!lineConfig.curved) {\n        for (var i = 0; i < lineData.length; i++) {\n          var _ref5, _data$i$barWidth, _data$i;\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          var currentBarWidth = (_ref5 = (_data$i$barWidth = data == null ? void 0 : (_data$i = data[i]) == null ? void 0 : _data$i.barWidth) != null ? _data$i$barWidth : props.barWidth) != null ? _ref5 : BarDefaults.barWidth;\n          var currentValue = props.lineData ? props.lineData[i].value : props.stackData ? props.stackData[i].stacks.reduce(function (total, item) {\n            return total + item.value;\n          }, 0) : data[i].value;\n          pp += 'L' + getXForLineInBar(i, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing) + ' ' + getYForLineInBar(currentValue, lineConfig.shiftY, containerHeight, lineConfig.isSecondary ? secondaryMaxValue : maxValue) + ' ';\n        }\n        setPoints(pp.replace('L', 'M'));\n        if (lineData.length > 1 && lineConfig.showArrow) {\n          var ppArray = pp.trim().split(' ');\n          var arrowTipY = parseInt(ppArray[ppArray.length - 1]);\n          var arrowTipX = parseInt(ppArray[ppArray.length - 2].replace('L', ''));\n          var y1 = parseInt(ppArray[ppArray.length - 3]);\n          var x1 = parseInt(ppArray[ppArray.length - 4].replace('L', ''));\n          var _arrowPoints = getArrowPoints(arrowTipX, arrowTipY, x1, y1, lineConfig.arrowConfig.length, lineConfig.arrowConfig.width, lineConfig.arrowConfig.showArrowBase);\n          setArrowPoints(_arrowPoints);\n        }\n      } else {\n        var p1Array = [];\n        for (var _i = 0; _i < lineData.length; _i++) {\n          var _ref6, _data$_i$barWidth, _data$_i;\n          if (_i < lineConfig.startIndex || _i > lineConfig.endIndex) continue;\n          var _currentBarWidth = (_ref6 = (_data$_i$barWidth = data == null ? void 0 : (_data$_i = data[_i]) == null ? void 0 : _data$_i.barWidth) != null ? _data$_i$barWidth : props.barWidth) != null ? _ref6 : BarDefaults.barWidth;\n          var _currentValue = props.lineData ? props.lineData[_i].value : props.stackData ? props.stackData[_i].stacks.reduce(function (total, item) {\n            return total + item.value;\n          }, 0) : data[_i].value;\n          p1Array.push([getXForLineInBar(_i, firstBarWidth, _currentBarWidth, yAxisLabelWidth, lineConfig, spacing), getYForLineInBar(_currentValue, lineConfig.shiftY, containerHeight, lineConfig.isSecondary ? secondaryMaxValue : maxValue)]);\n          var xx = svgPath(p1Array, lineConfig.curveType, lineConfig.curvature);\n          setPoints(xx);\n        }\n      }\n      if (lineConfig.isAnimated) {\n        setTimeout(function () {\n          return decreaseWidth();\n        }, lineConfig.delay || 0);\n      }\n    }\n    setTimeout(function () {\n      return labelsAppear();\n    }, animationDuration);\n  }, [animationDuration, containerHeight, data, lineData, decreaseWidth, initialSpacing, labelsAppear, lineConfig.initialSpacing, lineConfig.curved, lineConfig.dataPointsWidth, lineConfig.shiftY, lineConfig.isAnimated, lineConfig.delay, lineConfig.startIndex, lineConfig.endIndex, maxValue, props.barWidth, showLine, spacing, yAxisLabelWidth, lineConfig.showArrow, lineConfig.arrowConfig.length, lineConfig.arrowConfig.width, lineConfig.arrowConfig.showArrowBase]);\n  var animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%']\n  });\n  var appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1]\n  });\n  var animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth]\n  });\n  var renderChartContent = function renderChartContent() {\n    var getPropsCommonForBarAndStack = function getPropsCommonForBarAndStack(item, index) {\n      var _item$spacing2;\n      return {\n        key: index,\n        item: item,\n        index: index,\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        spacing: (_item$spacing2 = item.spacing) != null ? _item$spacing2 : spacing,\n        propSpacing: spacing,\n        xAxisThickness: xAxisThickness,\n        barWidth: props.barWidth,\n        opacity: opacity,\n        disablePress: item.disablePress || props.disablePress,\n        rotateLabel: rotateLabel,\n        showXAxisIndices: showXAxisIndices,\n        xAxisIndicesHeight: xAxisIndicesHeight,\n        xAxisIndicesWidth: xAxisIndicesWidth,\n        xAxisIndicesColor: xAxisIndicesColor,\n        horizontal: horizontal,\n        rtl: rtl,\n        intactTopLabel: intactTopLabel,\n        barBorderRadius: props.barBorderRadius,\n        barBorderTopLeftRadius: props.barBorderTopLeftRadius,\n        barBorderTopRightRadius: props.barBorderTopRightRadius,\n        barBorderBottomLeftRadius: props.barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: props.barBorderBottomRightRadius,\n        color: props.color,\n        showGradient: props.showGradient,\n        gradientColor: props.gradientColor,\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        onPress: props.onPress,\n        xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n        renderTooltip: props.renderTooltip,\n        leftShiftForTooltip: props.leftShiftForTooltip || 0,\n        initialSpacing: initialSpacing,\n        selectedIndex: selectedIndex,\n        setSelectedIndex: setSelectedIndex,\n        activeOpacity: props.activeOpacity || 0.2,\n        leftShiftForLastIndexTooltip: props.leftShiftForLastIndexTooltip || 0,\n        label: item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''),\n        labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle\n      };\n    };\n    if (props.stackData) {\n      return props.stackData.map(function (item, index) {\n        return _jsx(RenderStackBars, _objectSpread({\n          stackData: props.stackData || [],\n          isAnimated: isAnimated,\n          animationDuration: animationDuration\n        }, getPropsCommonForBarAndStack(item, index)));\n      });\n    } else {\n      return data.map(function (item, index) {\n        return _jsx(RenderBars, _objectSpread({\n          data: data,\n          side: side,\n          minHeight: props.minHeight || 0,\n          sideWidth: props.sideWidth,\n          labelWidth: labelWidth,\n          isThreeD: isThreeD,\n          isAnimated: isAnimated,\n          animationDuration: animationDuration,\n          animatedHeight: animatedHeight,\n          appearingOpacity: appearingOpacity,\n          roundedTop: props.roundedTop,\n          roundedBottom: props.roundedBottom,\n          frontColor: props.frontColor,\n          sideColor: props.sideColor,\n          topColor: props.topColor,\n          cappedBars: props.cappedBars,\n          capThickness: props.capThickness,\n          capColor: props.capColor,\n          capRadius: props.capRadius,\n          autoShiftLabels: autoShiftLabels,\n          barMarginBottom: props.barMarginBottom,\n          barStyle: props.barStyle\n        }, getPropsCommonForBarAndStack(item, index)));\n      });\n    }\n  };\n  var remainingScrollViewProps = {\n    onTouchStart: function onTouchStart(evt) {\n      if (props.renderTooltip) {\n        setSelectedIndex(-1);\n      }\n    }\n  };\n  var barAndLineChartsWrapperProps = {\n    chartType: chartTypes.BAR,\n    containerHeight: containerHeight,\n    noOfSectionsBelowXAxis: noOfSectionsBelowXAxis,\n    stepHeight: stepHeight,\n    labelsExtraHeight: labelsExtraHeight,\n    yAxisLabelWidth: yAxisLabelWidth,\n    horizontal: horizontal,\n    rtl: rtl,\n    shiftX: (_props$shiftX = props.shiftX) != null ? _props$shiftX : 0,\n    shiftY: (_props$shiftY = props.shiftY) != null ? _props$shiftY : 0,\n    scrollRef: scrollRef,\n    yAxisAtTop: yAxisAtTop,\n    initialSpacing: initialSpacing,\n    data: data,\n    stackData: props.stackData,\n    secondaryData: secondaryData,\n    barWidth: props.barWidth || BarDefaults.barWidth,\n    xAxisThickness: xAxisThickness,\n    totalWidth: totalWidth,\n    disableScroll: disableScroll,\n    showScrollIndicator: showScrollIndicator,\n    scrollToEnd: scrollToEnd,\n    scrollToIndex: props.scrollToIndex,\n    scrollAnimation: scrollAnimation,\n    scrollEventThrottle: scrollEventThrottle,\n    indicatorColor: props.indicatorColor,\n    setSelectedIndex: setSelectedIndex,\n    spacing: spacing,\n    showLine: showLine,\n    lineConfig: lineConfig,\n    maxValue: maxValue,\n    lineData: lineData,\n    animatedWidth: animatedWidth,\n    lineBehindBars: lineBehindBars,\n    points: points,\n    arrowPoints: arrowPoints,\n    renderChartContent: renderChartContent,\n    remainingScrollViewProps: remainingScrollViewProps,\n    width: widthFromProps,\n    horizSections: horizSections,\n    endSpacing: endSpacing,\n    horizontalRulesStyle: horizontalRulesStyle,\n    noOfSections: noOfSections,\n    showFractionalValues: showFractionalValues,\n    axesAndRulesProps: getAxesAndRulesProps(props, stepValue, secondaryMaxValue),\n    yAxisLabelTexts: props.yAxisLabelTexts,\n    yAxisOffset: props.yAxisOffset,\n    rotateYAxisTexts: props.rotateYAxisTexts,\n    hideAxesAndRules: props.hideAxesAndRules,\n    showXAxisIndices: showXAxisIndices,\n    xAxisIndicesHeight: xAxisIndicesHeight,\n    xAxisIndicesWidth: xAxisIndicesWidth,\n    xAxisIndicesColor: xAxisIndicesColor,\n    pointerConfig: null,\n    getPointerProps: null,\n    pointerIndex: 0,\n    pointerX: 0,\n    pointerY: 0\n  };\n  return _jsx(BarAndLineChartsWrapper, _objectSpread({}, barAndLineChartsWrapperProps));\n};","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","useRef","Animated","Easing","RenderBars","RenderStackBars","getArrowPoints","getAxesAndRulesProps","getSecondaryDataWithOffsetIncluded","getXForLineInBar","getYForLineInBar","maxAndMinUtil","svgPath","AxesAndRulesDefaults","BarDefaults","chartTypes","defaultLineConfig","BarAndLineChartsWrapper","jsx","_jsx","BarChart","props","_props$scrollRef","_props$spacing","_props$initialSpacing","_props$endSpacing","_props$horizontal","_props$rtl","_props$yAxisAtTop","_props$intactTopLabel","_props$isAnimated","_props$animationDurat","_props$lineConfig$ini","_props$lineConfig$cur","_props$lineConfig$cur2","_props$lineConfig$sho","_props$lineConfig$arr","_props$lineConfig$arr2","_defaultLineConfig$ar","_props$lineConfig$arr3","_props$lineConfig$arr4","_defaultLineConfig$ar2","_props$lineConfig$arr5","_props$lineConfig$arr6","_defaultLineConfig$ar3","_props$lineConfig$arr7","_props$lineConfig$arr8","_defaultLineConfig$ar4","_props$lineConfig$arr9","_props$lineConfig$arr10","_defaultLineConfig$ar5","_props$lineConfig$arr11","_props$lineConfig$arr12","_defaultLineConfig$ar6","_props$lineConfig$isS","_props$noOfSections","_props$stepHeight","_props$stepHeight2","_props$labelWidth","_props$scrollToEnd","_props$scrollAnimatio","_props$scrollEventThr","_props$labelsExtraHei","_props$maxValue","_props$mostNegativeVa","_props$stepValue","_props$noOfSectionsBe","_props$disableScroll","_props$showScrollIndi","_props$side","_props$rotateLabel","_props$opacity","_props$isThreeD","_props$showXAxisIndic","_props$xAxisIndicesHe","_props$xAxisIndicesWi","_props$xAxisIndicesCo","_props$xAxisThickness","_props$xAxisTextNumbe","_props$yAxisLabelWidt","_props$autoShiftLabel","_props$shiftX","_props$shiftY","scrollRef","_useState","_useState2","_slicedToArray","points","setPoints","_useState3","_useState4","arrowPoints","setArrowPoints","_useState5","_useState6","selectedIndex","setSelectedIndex","showLine","spacing","initialSpacing","endSpacing","showFractionalValues","horizontal","rtl","yAxisAtTop","intactTopLabel","heightFromProps","width","height","widthFromProps","isAnimated","animationDuration","data","yAxisOffset","map","item","_props$yAxisOffset","value","secondaryData","secondaryYAxis","lineData","_props$stackData","stackData","_props$yAxisOffset2","lineBehindBars","endIndex","length","lineConfig","curved","curvature","curveType","thickness","color","hideDataPoints","dataPointsShape","dataPointsHeight","dataPointsWidth","dataPointsColor","dataPointsRadius","textColor","textFontSize","textShiftX","textShiftY","shiftX","shiftY","delay","startIndex","showArrow","arrowConfig","strokeWidth","strokeColor","fillColor","showArrowBase","customDataPoint","isSecondary","noOfSections","containerHeight","stepHeight","horizSections","labelWidth","scrollToEnd","scrollAnimation","scrollEventThrottle","labelsExtraHeight","totalWidth","maxItem","minItem","forEach","stackItem","_ref","_stackItem$stacks$0$b","stackSum","stacks","reduce","acc","stack","_stack$value","barWidth","_ref2","_item$barWidth","_item$spacing","secondaryMaxItem","secondaryMinItem","maxAndMin","roundToDigits","secondaryMaxAndMin","maxValue","secondaryMaxValue","mostNegativeValue","stepValue","noOfSectionsBelowXAxis","disableScroll","showScrollIndicator","side","rotateLabel","opacity","isThreeD","showXAxisIndices","xAxisIndicesHeight","xAxisIndicesWidth","xAxisIndicesColor","xAxisThickness","xAxisTextNumberOfLines","horizontalRulesStyle","yAxisLabelWidth","hideYAxisText","yAxisEmptyLabelWidth","heightValue","Value","opacValue","widthValue","autoShiftLabels","labelsAppear","setValue","timing","toValue","duration","easing","ease","useNativeDriver","start","decreaseWidth","linear","_ref3","_$barWidth","_ref4","_props$stackData2","pp","firstBarWidth","i","_ref5","_data$i$barWidth","_data$i","currentBarWidth","currentValue","total","replace","ppArray","trim","split","arrowTipY","parseInt","arrowTipX","y1","x1","p1Array","_ref6","_data$_i$barWidth","_data$_i","push","xx","setTimeout","animatedHeight","interpolate","inputRange","outputRange","appearingOpacity","animatedWidth","renderChartContent","getPropsCommonForBarAndStack","index","_item$spacing2","key","propSpacing","disablePress","barBorderRadius","barBorderTopLeftRadius","barBorderTopRightRadius","barBorderBottomLeftRadius","barBorderBottomRightRadius","showGradient","gradientColor","barBackgroundPattern","patternId","onPress","renderTooltip","leftShiftForTooltip","activeOpacity","leftShiftForLastIndexTooltip","label","xAxisLabelTexts","labelTextStyle","xAxisLabelTextStyle","_objectSpread","minHeight","sideWidth","roundedTop","roundedBottom","frontColor","sideColor","topColor","cappedBars","capThickness","capColor","capRadius","barMarginBottom","barStyle","remainingScrollViewProps","onTouchStart","evt","barAndLineChartsWrapperProps","chartType","BAR","scrollToIndex","indicatorColor","axesAndRulesProps","yAxisLabelTexts","rotateYAxisTexts","hideAxesAndRules","pointerConfig","getPointerProps","pointerIndex","pointerX","pointerY"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-gifted-charts/src/BarChart/index.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useMemo, useState, useRef} from 'react';\nimport {Animated, Easing} from 'react-native';\nimport RenderBars from './RenderBars';\nimport RenderStackBars from './RenderStackBars';\nimport {\n  getArrowPoints,\n  getAxesAndRulesProps,\n  getSecondaryDataWithOffsetIncluded,\n  getXForLineInBar,\n  getYForLineInBar,\n  maxAndMinUtil,\n  svgPath,\n} from '../utils';\nimport {\n  AxesAndRulesDefaults,\n  BarDefaults,\n  chartTypes,\n  defaultLineConfig,\n} from '../utils/constants';\nimport BarAndLineChartsWrapper from '../Components/BarAndLineChartsWrapper';\nimport {BarChartPropsType, itemType} from './types';\nimport {BarAndLineChartsWrapperTypes} from '../utils/types';\n\nexport const BarChart = (props: BarChartPropsType) => {\n  const scrollRef = props.scrollRef ?? useRef(null);\n  const [points, setPoints] = useState('');\n  const [arrowPoints, setArrowPoints] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const showLine = props.showLine || BarDefaults.showLine;\n  const spacing = props.spacing ?? BarDefaults.spacing;\n  const initialSpacing = props.initialSpacing ?? spacing;\n  const endSpacing = props.endSpacing ?? spacing;\n  const showFractionalValues =\n    props.showFractionalValues || AxesAndRulesDefaults.showFractionalValues;\n\n  const horizontal = props.horizontal ?? BarDefaults.horizontal;\n  const rtl = props.rtl ?? BarDefaults.rtl;\n  const yAxisAtTop = props.yAxisAtTop ?? BarDefaults.yAxisAtTop;\n  const intactTopLabel = props.intactTopLabel ?? BarDefaults.intactTopLabel;\n\n  const heightFromProps = horizontal ? props.width : props.height;\n  const widthFromProps = horizontal ? props.height : props.width;\n\n  const isAnimated = props.isAnimated ?? BarDefaults.isAnimated;\n  const animationDuration =\n    props.animationDuration ?? BarDefaults.animationDuration;\n\n  const data = useMemo(() => {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(item => {\n        item.value = item.value - (props.yAxisOffset ?? 0);\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n\n  const secondaryData = getSecondaryDataWithOffsetIncluded(\n    props.secondaryData,\n    props.secondaryYAxis,\n  );\n\n  const lineData = useMemo(() => {\n    if (!props.lineData) {\n      return props.stackData ?? data;\n    }\n    if (props.yAxisOffset) {\n      return props.lineData.map(item => {\n        item.value = item.value - (props.yAxisOffset ?? 0);\n        return item;\n      });\n    }\n    return props.lineData;\n  }, [props.yAxisOffset, props.lineData, data, props.stackData]);\n\n  const lineBehindBars = props.lineBehindBars || BarDefaults.lineBehindBars;\n\n  defaultLineConfig.initialSpacing = initialSpacing;\n  defaultLineConfig.endIndex = lineData.length - 1;\n  defaultLineConfig.animationDuration = animationDuration;\n\n  const lineConfig = props.lineConfig\n    ? {\n        initialSpacing:\n          props.lineConfig.initialSpacing ?? defaultLineConfig.initialSpacing,\n        curved: props.lineConfig.curved || defaultLineConfig.curved,\n        curvature: props.lineConfig.curvature ?? defaultLineConfig.curvature,\n        curveType: props.lineConfig.curveType ?? defaultLineConfig.curveType,\n        isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n        animationDuration:\n          props.lineConfig.animationDuration ||\n          defaultLineConfig.animationDuration,\n        thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n        color: props.lineConfig.color || defaultLineConfig.color,\n        hideDataPoints:\n          props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n        dataPointsShape:\n          props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n        dataPointsHeight:\n          props.lineConfig.dataPointsHeight ||\n          defaultLineConfig.dataPointsHeight,\n        dataPointsWidth:\n          props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n        dataPointsColor:\n          props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n        dataPointsRadius:\n          props.lineConfig.dataPointsRadius ||\n          defaultLineConfig.dataPointsRadius,\n        textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n        textFontSize:\n          props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n        textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n        textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n        shiftX: props.lineConfig.shiftX || defaultLineConfig.shiftX,\n        shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n        delay: props.lineConfig.delay || defaultLineConfig.delay,\n        startIndex: props.lineConfig.startIndex || defaultLineConfig.startIndex,\n        endIndex:\n          props.lineConfig.endIndex === 0\n            ? 0\n            : props.lineConfig.endIndex || defaultLineConfig.endIndex,\n\n        showArrow: props.lineConfig.showArrow ?? defaultLineConfig.showArrow,\n        arrowConfig: {\n          length:\n            props.lineConfig.arrowConfig?.length ??\n            defaultLineConfig.arrowConfig?.length,\n          width:\n            props.lineConfig.arrowConfig?.width ??\n            defaultLineConfig.arrowConfig?.width,\n\n          strokeWidth:\n            props.lineConfig.arrowConfig?.strokeWidth ??\n            defaultLineConfig.arrowConfig?.strokeWidth,\n\n          strokeColor:\n            props.lineConfig.arrowConfig?.strokeColor ??\n            defaultLineConfig.arrowConfig?.strokeColor,\n\n          fillColor:\n            props.lineConfig.arrowConfig?.fillColor ??\n            defaultLineConfig.arrowConfig?.fillColor,\n\n          showArrowBase:\n            props.lineConfig.arrowConfig?.showArrowBase ??\n            defaultLineConfig.arrowConfig?.showArrowBase,\n        },\n        customDataPoint: props.lineConfig.customDataPoint,\n        isSecondary:\n          props.lineConfig.isSecondary ?? defaultLineConfig.isSecondary,\n      }\n    : defaultLineConfig;\n  const noOfSections = props.noOfSections ?? AxesAndRulesDefaults.noOfSections;\n  const containerHeight =\n    heightFromProps ??\n    ((props.stepHeight ?? 0) * noOfSections ||\n      AxesAndRulesDefaults.containerHeight);\n  const horizSections = [{value: '0'}];\n  const stepHeight = props.stepHeight ?? containerHeight / noOfSections;\n  const labelWidth = props.labelWidth ?? AxesAndRulesDefaults.labelWidth;\n  const scrollToEnd = props.scrollToEnd ?? BarDefaults.scrollToEnd;\n  const scrollAnimation = props.scrollAnimation ?? BarDefaults.scrollAnimation;\n  const scrollEventThrottle =\n    props.scrollEventThrottle ?? BarDefaults.scrollEventThrottle;\n  const labelsExtraHeight =\n    props.labelsExtraHeight ?? AxesAndRulesDefaults.labelsExtraHeight;\n\n  let totalWidth = initialSpacing;\n  let maxItem = 0,\n    minItem = 0;\n  if (props.stackData) {\n    props.stackData.forEach(stackItem => {\n      let stackSum = stackItem.stacks.reduce(\n        (acc, stack) => acc + (stack.value ?? 0),\n        0,\n      );\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n      totalWidth +=\n        (stackItem.stacks[0].barWidth ??\n          props.barWidth ??\n          BarDefaults.barWidth) + spacing;\n    });\n  } else {\n    data.forEach((item: itemType) => {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n      totalWidth +=\n        (item.barWidth ?? props.barWidth ?? BarDefaults.barWidth) +\n        (item.spacing ?? spacing);\n    });\n  }\n\n  let secondaryMaxItem = 0,\n    secondaryMinItem = 0;\n\n  if (lineConfig.isSecondary) {\n    lineData.forEach((item: itemType) => {\n      if (item.value > secondaryMaxItem) {\n        secondaryMaxItem = item.value;\n      }\n      if (item.value < secondaryMinItem) {\n        secondaryMinItem = item.value;\n      }\n    });\n  }\n\n  const maxAndMin = maxAndMinUtil(\n    maxItem,\n    minItem,\n    props.roundToDigits,\n    props.showFractionalValues,\n  );\n\n  const secondaryMaxAndMin = maxAndMinUtil(\n    secondaryMaxItem,\n    secondaryMinItem,\n    props.roundToDigits,\n    props.showFractionalValues,\n  );\n\n  const maxValue = props.maxValue ?? maxAndMin.maxItem;\n  const secondaryMaxValue = lineConfig.isSecondary\n    ? secondaryMaxAndMin.maxItem\n    : maxValue;\n  const mostNegativeValue = props.mostNegativeValue ?? maxAndMin.minItem;\n\n  const stepValue = props.stepValue ?? maxValue / noOfSections;\n  const noOfSectionsBelowXAxis =\n    props.noOfSectionsBelowXAxis ?? -mostNegativeValue / stepValue;\n  const disableScroll = props.disableScroll ?? BarDefaults.disableScroll;\n  const showScrollIndicator =\n    props.showScrollIndicator ?? BarDefaults.showScrollIndicator;\n  const side = props.side ?? BarDefaults.side;\n  const rotateLabel = props.rotateLabel ?? AxesAndRulesDefaults.rotateLabel;\n  const opacity = props.opacity ?? BarDefaults.opacity;\n  const isThreeD = props.isThreeD ?? BarDefaults.isThreeD;\n\n  const showXAxisIndices =\n    props.showXAxisIndices ?? AxesAndRulesDefaults.showXAxisIndices;\n  const xAxisIndicesHeight =\n    props.xAxisIndicesHeight ?? AxesAndRulesDefaults.xAxisIndicesHeight;\n  const xAxisIndicesWidth =\n    props.xAxisIndicesWidth ?? AxesAndRulesDefaults.xAxisIndicesWidth;\n  const xAxisIndicesColor =\n    props.xAxisIndicesColor ?? AxesAndRulesDefaults.xAxisIndicesColor;\n\n  const xAxisThickness =\n    props.xAxisThickness ?? AxesAndRulesDefaults.xAxisThickness;\n\n  const xAxisTextNumberOfLines =\n    props.xAxisTextNumberOfLines ?? AxesAndRulesDefaults.xAxisTextNumberOfLines;\n  const horizontalRulesStyle = props.horizontalRulesStyle;\n  const yAxisLabelWidth =\n    props.yAxisLabelWidth ??\n    (props.hideYAxisText\n      ? AxesAndRulesDefaults.yAxisEmptyLabelWidth\n      : AxesAndRulesDefaults.yAxisLabelWidth);\n\n  const heightValue = useMemo(() => new Animated.Value(0), []);\n  const opacValue = useMemo(() => new Animated.Value(0), []);\n  const widthValue = useMemo(() => new Animated.Value(0), []);\n  const autoShiftLabels = props.autoShiftLabels ?? false;\n\n  const labelsAppear = useCallback(() => {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false,\n    }).start();\n  }, [opacValue]);\n\n  const decreaseWidth = useCallback(() => {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: lineConfig.animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start();\n  }, [lineConfig.animationDuration, widthValue]);\n\n  useEffect(() => {\n    if (showLine) {\n      let pp = '';\n      const firstBarWidth =\n        (props.stackData ?? data)?.[0].barWidth ?? props.barWidth ?? 30;\n      if (!lineConfig.curved) {\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            data?.[i]?.barWidth ?? props.barWidth ?? BarDefaults.barWidth;\n          const currentValue = props.lineData\n            ? props.lineData[i].value\n            : props.stackData\n            ? props.stackData[i].stacks.reduce(\n                (total, item) => total + item.value,\n                0,\n              )\n            : data[i].value;\n          pp +=\n            'L' +\n            getXForLineInBar(\n              i,\n              firstBarWidth,\n              currentBarWidth,\n              yAxisLabelWidth,\n              lineConfig,\n              spacing,\n            ) +\n            ' ' +\n            getYForLineInBar(\n              currentValue,\n              lineConfig.shiftY,\n              containerHeight,\n              lineConfig.isSecondary ? secondaryMaxValue : maxValue,\n            ) +\n            ' ';\n        }\n        setPoints(pp.replace('L', 'M'));\n        if (lineData.length > 1 && lineConfig.showArrow) {\n          let ppArray = pp.trim().split(' ');\n          let arrowTipY = parseInt(ppArray[ppArray.length - 1]);\n          let arrowTipX = parseInt(\n            ppArray[ppArray.length - 2].replace('L', ''),\n          );\n          let y1 = parseInt(ppArray[ppArray.length - 3]);\n          let x1 = parseInt(ppArray[ppArray.length - 4].replace('L', ''));\n\n          let arrowPoints = getArrowPoints(\n            arrowTipX,\n            arrowTipY,\n            x1,\n            y1,\n            lineConfig.arrowConfig.length,\n            lineConfig.arrowConfig.width,\n            lineConfig.arrowConfig.showArrowBase,\n          );\n\n          setArrowPoints(arrowPoints);\n        }\n      } else {\n        let p1Array: Array<Array<number>> = [];\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            data?.[i]?.barWidth ?? props.barWidth ?? BarDefaults.barWidth;\n          const currentValue = props.lineData\n            ? props.lineData[i].value\n            : props.stackData\n            ? props.stackData[i].stacks.reduce(\n                (total, item) => total + item.value,\n                0,\n              )\n            : data[i].value;\n          p1Array.push([\n            getXForLineInBar(\n              i,\n              firstBarWidth,\n              currentBarWidth,\n              yAxisLabelWidth,\n              lineConfig,\n              spacing,\n            ),\n            getYForLineInBar(\n              currentValue,\n              lineConfig.shiftY,\n              containerHeight,\n              lineConfig.isSecondary ? secondaryMaxValue : maxValue,\n            ),\n          ]);\n          let xx = svgPath(p1Array, lineConfig.curveType, lineConfig.curvature);\n          setPoints(xx);\n        }\n      }\n      if (lineConfig.isAnimated) {\n        setTimeout(() => decreaseWidth(), lineConfig.delay || 0);\n      }\n    }\n    setTimeout(() => labelsAppear(), animationDuration);\n  }, [\n    animationDuration,\n    containerHeight,\n    data,\n    lineData,\n    decreaseWidth,\n    initialSpacing,\n    labelsAppear,\n    lineConfig.initialSpacing,\n    lineConfig.curved,\n    lineConfig.dataPointsWidth,\n    lineConfig.shiftY,\n    lineConfig.isAnimated,\n    lineConfig.delay,\n    lineConfig.startIndex,\n    lineConfig.endIndex,\n    maxValue,\n    props.barWidth,\n    showLine,\n    spacing,\n    yAxisLabelWidth,\n    lineConfig.showArrow,\n    lineConfig.arrowConfig.length,\n    lineConfig.arrowConfig.width,\n    lineConfig.arrowConfig.showArrowBase,\n  ]);\n\n  const animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%'],\n  });\n  const appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n  });\n\n  const animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth],\n  });\n\n  const renderChartContent = () => {\n    const getPropsCommonForBarAndStack = (item, index) => {\n      return {\n        key: index,\n        item: item,\n        index: index,\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        spacing: item.spacing ?? spacing,\n        propSpacing: spacing,\n        xAxisThickness: xAxisThickness,\n        barWidth: props.barWidth,\n        opacity: opacity,\n        disablePress: item.disablePress || props.disablePress,\n        rotateLabel: rotateLabel,\n        showXAxisIndices: showXAxisIndices,\n        xAxisIndicesHeight: xAxisIndicesHeight,\n        xAxisIndicesWidth: xAxisIndicesWidth,\n        xAxisIndicesColor: xAxisIndicesColor,\n        horizontal: horizontal,\n        rtl: rtl,\n        intactTopLabel: intactTopLabel,\n        barBorderRadius: props.barBorderRadius,\n        barBorderTopLeftRadius: props.barBorderTopLeftRadius,\n        barBorderTopRightRadius: props.barBorderTopRightRadius,\n        barBorderBottomLeftRadius: props.barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: props.barBorderBottomRightRadius,\n        color: props.color,\n        showGradient: props.showGradient,\n        gradientColor: props.gradientColor,\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        onPress: props.onPress,\n        xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n        renderTooltip: props.renderTooltip,\n        leftShiftForTooltip: props.leftShiftForTooltip || 0,\n        initialSpacing: initialSpacing,\n        selectedIndex: selectedIndex,\n        setSelectedIndex: setSelectedIndex,\n        activeOpacity: props.activeOpacity || 0.2,\n\n        leftShiftForLastIndexTooltip: props.leftShiftForLastIndexTooltip || 0,\n        label:\n          item.label ||\n          (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n            ? props.xAxisLabelTexts[index]\n            : ''),\n        labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle,\n      };\n    };\n    if (props.stackData) {\n      return props.stackData.map((item, index) => {\n        return (\n          <RenderStackBars\n            stackData={props.stackData || []}\n            isAnimated={isAnimated}\n            animationDuration={animationDuration}\n            {...getPropsCommonForBarAndStack(item, index)}\n          />\n        );\n      });\n    } else {\n      return data.map((item, index) => (\n        <RenderBars\n          data={data}\n          side={side}\n          minHeight={props.minHeight || 0}\n          sideWidth={props.sideWidth}\n          labelWidth={labelWidth}\n          isThreeD={isThreeD}\n          isAnimated={isAnimated}\n          animationDuration={animationDuration}\n          animatedHeight={animatedHeight}\n          appearingOpacity={appearingOpacity}\n          roundedTop={props.roundedTop}\n          roundedBottom={props.roundedBottom}\n          frontColor={props.frontColor}\n          sideColor={props.sideColor}\n          topColor={props.topColor}\n          cappedBars={props.cappedBars}\n          capThickness={props.capThickness}\n          capColor={props.capColor}\n          capRadius={props.capRadius}\n          autoShiftLabels={autoShiftLabels}\n          barMarginBottom={props.barMarginBottom}\n          barStyle={props.barStyle}\n          {...getPropsCommonForBarAndStack(item, index)}\n        />\n      ));\n    }\n  };\n\n  const remainingScrollViewProps = {\n    onTouchStart: evt => {\n      if (props.renderTooltip) {\n        setSelectedIndex(-1);\n      }\n    },\n  };\n\n  const barAndLineChartsWrapperProps: BarAndLineChartsWrapperTypes = {\n    chartType: chartTypes.BAR,\n    containerHeight,\n    noOfSectionsBelowXAxis,\n    stepHeight,\n    labelsExtraHeight,\n    yAxisLabelWidth,\n    horizontal,\n    rtl,\n    shiftX: props.shiftX ?? 0,\n    shiftY: props.shiftY ?? 0,\n    scrollRef,\n    yAxisAtTop,\n    initialSpacing,\n    data,\n    stackData: props.stackData,\n    secondaryData: secondaryData,\n    barWidth: props.barWidth || BarDefaults.barWidth,\n    xAxisThickness,\n    totalWidth,\n    disableScroll,\n    showScrollIndicator,\n    scrollToEnd,\n    scrollToIndex: props.scrollToIndex,\n    scrollAnimation,\n    scrollEventThrottle,\n    indicatorColor: props.indicatorColor,\n    setSelectedIndex,\n    spacing,\n    showLine,\n    lineConfig,\n    maxValue,\n    lineData,\n    animatedWidth,\n    lineBehindBars,\n    points,\n    arrowPoints,\n    renderChartContent,\n    remainingScrollViewProps,\n\n    //horizSectionProps-\n    width: widthFromProps,\n    horizSections,\n    endSpacing,\n    horizontalRulesStyle,\n    noOfSections,\n    showFractionalValues,\n\n    axesAndRulesProps: getAxesAndRulesProps(\n      props,\n      stepValue,\n      secondaryMaxValue,\n    ),\n\n    yAxisLabelTexts: props.yAxisLabelTexts,\n    yAxisOffset: props.yAxisOffset,\n    rotateYAxisTexts: props.rotateYAxisTexts,\n    hideAxesAndRules: props.hideAxesAndRules,\n\n    showXAxisIndices,\n    xAxisIndicesHeight,\n    xAxisIndicesWidth,\n    xAxisIndicesColor,\n\n    // These are Not needed but passing this prop to maintain consistency (between LineChart and BarChart props)\n    pointerConfig: null,\n    getPointerProps: null,\n    pointerIndex: 0,\n    pointerX: 0,\n    pointerY: 0,\n  };\n\n  return <BarAndLineChartsWrapper {...barAndLineChartsWrapperProps} />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}