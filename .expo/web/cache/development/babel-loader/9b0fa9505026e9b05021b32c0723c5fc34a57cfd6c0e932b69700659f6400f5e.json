{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"type\"],\n  _excluded2 = [\"style\"],\n  _excluded3 = [\"parse\", \"childrenProps\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport TextExtraction from \"./lib/TextExtraction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var PATTERNS = {\n  url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.(xn--)?[a-z0-9-]{2,20}\\b([-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+\\]~#?&\\/=])*/i,\n  phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n  email: /\\S+@\\S+\\.\\S+/\n};\nvar defaultParseShape = PropTypes.shape(_objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  type: PropTypes.oneOf(Object.keys(PATTERNS)).isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number\n}));\nvar customParseShape = PropTypes.shape(_objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  pattern: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)]).isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number\n}));\nvar ParsedText = function (_React$Component) {\n  _inherits(ParsedText, _React$Component);\n  var _super = _createSuper(ParsedText);\n  function ParsedText() {\n    _classCallCheck(this, ParsedText);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ParsedText, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"getPatterns\",\n    value: function getPatterns() {\n      return this.props.parse.map(function (option) {\n        var type = option.type,\n          patternOption = _objectWithoutProperties(option, _excluded);\n        if (type) {\n          if (!PATTERNS[type]) {\n            throw new Error(option.type + \" is not a supported type\");\n          }\n          patternOption.pattern = PATTERNS[type];\n        }\n        return patternOption;\n      });\n    }\n  }, {\n    key: \"getParsedText\",\n    value: function getParsedText() {\n      var _this = this;\n      if (!this.props.parse) {\n        return this.props.children;\n      }\n      if (typeof this.props.children !== 'string') {\n        return this.props.children;\n      }\n      var textExtraction = new TextExtraction(this.props.children, this.getPatterns());\n      return textExtraction.parse().map(function (props, index) {\n        var parentStyle = _this.props.style;\n        var style = props.style,\n          remainder = _objectWithoutProperties(props, _excluded2);\n        return _jsx(Text, _objectSpread(_objectSpread({\n          style: [parentStyle, style]\n        }, _this.props.childrenProps), remainder), \"parsedText-\" + index);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = _objectSpread({}, this.props),\n        parse = _this$props.parse,\n        childrenProps = _this$props.childrenProps,\n        remainder = _objectWithoutProperties(_this$props, _excluded3);\n      return _jsx(Text, _objectSpread(_objectSpread({\n        ref: function ref(_ref) {\n          return _this2._root = _ref;\n        }\n      }, remainder), {}, {\n        children: this.getParsedText()\n      }));\n    }\n  }]);\n  return ParsedText;\n}(React.Component);\nParsedText.displayName = 'ParsedText';\nParsedText.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  parse: PropTypes.arrayOf(PropTypes.oneOfType([defaultParseShape, customParseShape])),\n  childrenProps: PropTypes.shape(Text.propTypes)\n});\nParsedText.defaultProps = {\n  parse: null,\n  childrenProps: {}\n};\nexport default ParsedText;","map":{"version":3,"names":["React","Text","PropTypes","TextExtraction","jsx","_jsx","PATTERNS","url","phone","email","defaultParseShape","shape","_objectSpread","propTypes","type","oneOf","Object","keys","isRequired","nonExhaustiveMaxMatchCount","number","customParseShape","pattern","oneOfType","string","instanceOf","RegExp","ParsedText","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","setNativeProps","nativeProps","_root","getPatterns","props","parse","map","option","patternOption","_objectWithoutProperties","_excluded","Error","getParsedText","_this","children","textExtraction","index","parentStyle","style","remainder","_excluded2","childrenProps","render","_this2","_this$props","_excluded3","ref","Component","displayName","arrayOf","defaultProps"],"sources":["C:/xando/sa/sa.ReactNative2semestre/node_modules/react-native-parsed-text/src/ParsedText.js"],"sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport TextExtraction from './lib/TextExtraction';\n\n/**\n * This is a list of the known patterns that are provided by this library\n * @typedef {('url'|'phone'|'email')} KnownParsePattern\n */\n/**\n * @type {Object.<string, RegExp>}\n * // The keys really should be KnownParsePattern -- but this is unsupported in jsdoc, sadly\n */\nexport const PATTERNS = {\n  /**\n   * Segments/Features:\n   *  - http/https support https?\n   *  - auto-detecting loose domains if preceded by `www.`\n   *  - Localized & Long top-level domains \\.(xn--)?[a-z0-9-]{2,20}\\b\n   *  - Allowed query parameters & values, it's two blocks of matchers\n   *    ([-a-zA-Z0-9@:%_\\+,.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+~#?&\\/=])*\n   *    - First block is [-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]* -- this matches parameter names & values (including commas, dots, opening & closing brackets)\n   *    - The first block must be followed by a closing block [-a-zA-Z0-9@:%_\\+\\]~#?&\\/=] -- this doesn't match commas, dots, and opening brackets\n   */\n  url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.(xn--)?[a-z0-9-]{2,20}\\b([-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+\\]~#?&\\/=])*/i,\n  phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n  email: /\\S+@\\S+\\.\\S+/,\n};\n\n/**\n * This is for built-in-patterns already supported by this library\n * Note: any additional keys/props are permitted, and will be passed along as props to the <Text> component!\n * @typedef {Object} DefaultParseShape\n * @property {KnownParsePattern} [type] key of the known pattern you'd like to configure\n * @property {number} [nonExhaustiveModeMaxMatchCount] Enables \"non-exhaustive mode\", where you can limit how many matches are found. -- Must be a positive integer or Infinity matches are permitted\n * @property {Function} [renderText] arbitrary function to rewrite the matched string into something else\n * @property {Function} [onPress]\n * @property {Function} [onLongPress]\n */\nconst defaultParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  type: PropTypes.oneOf(Object.keys(PATTERNS)).isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number,\n});\n\nconst customParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  pattern: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)])\n    .isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number,\n});\n\n/**\n * The props added by this component\n * @typedef {DefaultParseShape|import('./lib/TextExtraction').CustomParseShape} ParsedTextAddedProps\n * @property {ParseShape[]} parse\n * @property {import('react-native').TextProps} childrenProps -- the props set on each child Text component\n */\n/** @typedef {ParsedTextAddedProps & import('react-native').TextProps} ParsedTextProps */\n\n/** @type {import('react').ComponentClass<ParsedTextProps>} */\nclass ParsedText extends React.Component {\n  static displayName = 'ParsedText';\n\n  static propTypes = {\n    ...Text.propTypes,\n    parse: PropTypes.arrayOf(\n      PropTypes.oneOfType([defaultParseShape, customParseShape]),\n    ),\n    childrenProps: PropTypes.shape(Text.propTypes),\n  };\n\n  static defaultProps = {\n    parse: null,\n    childrenProps: {},\n  };\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n  /** @returns {import('./lib/TextExtraction').CustomParseShape[]} */\n  getPatterns() {\n    return this.props.parse.map((option) => {\n      const { type, ...patternOption } = option;\n      if (type) {\n        if (!PATTERNS[type]) {\n          throw new Error(`${option.type} is not a supported type`);\n        }\n        patternOption.pattern = PATTERNS[type];\n      }\n\n      return patternOption;\n    });\n  }\n\n  getParsedText() {\n    if (!this.props.parse) {\n      return this.props.children;\n    }\n    if (typeof this.props.children !== 'string') {\n      return this.props.children;\n    }\n\n    const textExtraction = new TextExtraction(\n      this.props.children,\n      this.getPatterns(),\n    );\n\n    return textExtraction.parse().map((props, index) => {\n      const { style: parentStyle } = this.props;\n      const { style, ...remainder } = props;\n      return (\n        <Text\n          key={`parsedText-${index}`}\n          style={[parentStyle, style]}\n          {...this.props.childrenProps}\n          {...remainder}\n        />\n      );\n    });\n  }\n\n  render() {\n    // Discard custom props before passing remainder to Text\n    const { parse, childrenProps, ...remainder } = { ...this.props };\n\n    return (\n      <Text ref={(ref) => (this._root = ref)} {...remainder}>\n        {this.getParsedText()}\n      </Text>\n    );\n  }\n}\n\nexport default ParsedText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}