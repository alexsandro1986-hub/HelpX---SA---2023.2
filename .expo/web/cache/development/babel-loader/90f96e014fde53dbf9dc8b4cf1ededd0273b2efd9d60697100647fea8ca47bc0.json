{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTouchableRippleColors = void 0;\nvar _color = _interopRequireDefault(require(\"color\"));\nvar getUnderlayColor = function getUnderlayColor(_ref) {\n  var theme = _ref.theme,\n    calculatedRippleColor = _ref.calculatedRippleColor,\n    underlayColor = _ref.underlayColor;\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n  if (theme.isV3) {\n    return (0, _color.default)(calculatedRippleColor).rgb().string();\n  }\n  return (0, _color.default)(calculatedRippleColor).fade(0.5).rgb().string();\n};\nvar getRippleColor = function getRippleColor(_ref2) {\n  var theme = _ref2.theme,\n    rippleColor = _ref2.rippleColor;\n  if (rippleColor) {\n    return rippleColor;\n  }\n  if (theme.isV3) {\n    return (0, _color.default)(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n  if (theme.dark) {\n    return (0, _color.default)(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return (0, _color.default)(theme.colors.text).alpha(0.2).rgb().string();\n};\nvar getTouchableRippleColors = exports.getTouchableRippleColors = function getTouchableRippleColors(_ref3) {\n  var theme = _ref3.theme,\n    rippleColor = _ref3.rippleColor,\n    underlayColor = _ref3.underlayColor;\n  var calculatedRippleColor = getRippleColor({\n    theme: theme,\n    rippleColor: rippleColor\n  });\n  return {\n    calculatedRippleColor: calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme: theme,\n      calculatedRippleColor: calculatedRippleColor,\n      underlayColor: underlayColor\n    })\n  };\n};","map":{"version":3,"names":["_color","_interopRequireDefault","require","getUnderlayColor","_ref","theme","calculatedRippleColor","underlayColor","isV3","color","rgb","string","fade","getRippleColor","_ref2","rippleColor","colors","onSurface","alpha","dark","text","getTouchableRippleColors","exports","_ref3","calculatedUnderlayColor"],"sources":["C:\\Users\\erick_ribeiro-souza\\Desktop\\s.a 2\\sa.ReactNative2semestre-1\\node_modules\\react-native-paper\\src\\components\\TouchableRipple\\utils.ts"],"sourcesContent":["import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getUnderlayColor = ({\n  theme,\n  calculatedRippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  calculatedRippleColor: ColorValue;\n  underlayColor?: string;\n}) => {\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n\n  if (theme.isV3) {\n    return color(calculatedRippleColor).rgb().string();\n  }\n\n  return color(calculatedRippleColor).fade(0.5).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  rippleColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n}) => {\n  if (rippleColor) {\n    return rippleColor;\n  }\n\n  if (theme.isV3) {\n    return color(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.2).rgb().string();\n};\n\nexport const getTouchableRippleColors = ({\n  theme,\n  rippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n  underlayColor?: string;\n}) => {\n  const calculatedRippleColor = getRippleColor({ theme, rippleColor });\n  return {\n    calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme,\n      calculatedRippleColor,\n      underlayColor,\n    }),\n  };\n};\n"],"mappings":";;;;;AAEA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAGC,IAAA,EAQnB;EAAA,IAPJC,KAAK,GAOND,IAAA,CAPCC,KAAK;IACLC,qBAAqB,GAMtBF,IAAA,CANCE,qBAAqB;IACrBC,aAAA,GAKDH,IAAA,CALCG,aAAA;EAMA,IAAIA,aAAa,IAAI,IAAI,EAAE;IACzB,OAAOA,aAAa;EACtB;EAEA,IAAIF,KAAK,CAACG,IAAI,EAAE;IACd,OAAO,IAAAC,cAAK,EAACH,qBAAqB,CAAC,CAACI,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EACpD;EAEA,OAAO,IAAAF,cAAK,EAACH,qBAAqB,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC,CAACF,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;AAC9D,CAAC;AAED,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,KAAA,EAMjB;EAAA,IALJT,KAAK,GAKNS,KAAA,CALCT,KAAK;IACLU,WAAA,GAIDD,KAAA,CAJCC,WAAA;EAKA,IAAIA,WAAW,EAAE;IACf,OAAOA,WAAW;EACpB;EAEA,IAAIV,KAAK,CAACG,IAAI,EAAE;IACd,OAAO,IAAAC,cAAK,EAACJ,KAAK,CAACW,MAAM,CAACC,SAAS,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EACjE;EAEA,IAAIN,KAAK,CAACc,IAAI,EAAE;IACd,OAAO,IAAAV,cAAK,EAACJ,KAAK,CAACW,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EAC5D;EACA,OAAO,IAAAF,cAAK,EAACJ,KAAK,CAACW,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;AAC3D,CAAC;AAEM,IAAMU,wBAAwB,GAAAC,OAAA,CAAAD,wBAAA,GAAG,SAA3BA,wBAAwBA,CAAGE,KAAA,EAQlC;EAAA,IAPJlB,KAAK,GAONkB,KAAA,CAPClB,KAAK;IACLU,WAAW,GAMZQ,KAAA,CANCR,WAAW;IACXR,aAAA,GAKDgB,KAAA,CALChB,aAAA;EAMA,IAAMD,qBAAqB,GAAGO,cAAc,CAAC;IAAER,KAAK,EAALA,KAAK;IAAEU,WAAA,EAAAA;EAAY,CAAC,CAAC;EACpE,OAAO;IACLT,qBAAqB,EAArBA,qBAAqB;IACrBkB,uBAAuB,EAAErB,gBAAgB,CAAC;MACxCE,KAAK,EAALA,KAAK;MACLC,qBAAqB,EAArBA,qBAAqB;MACrBC,aAAA,EAAAA;IACF,CAAC;EACH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}