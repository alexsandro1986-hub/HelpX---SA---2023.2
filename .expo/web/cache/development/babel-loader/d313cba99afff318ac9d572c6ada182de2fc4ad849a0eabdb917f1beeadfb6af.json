{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { NavigationActionContainer, NavigationContainer } from '@react-navigation/native';\nimport { teste } from \"./mimo/teste.js\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    cont = _useState2[0],\n    setCont = _useState2[1];\n  function clicando() {\n    setCont(Math.ceil(Math.random() * 6));\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.textocor,\n      children: \"noob\"\n    }), _jsx(Text, {\n      style: styles.cor,\n      children: \"Crud Master\"\n    }), _jsx(Text, {\n      style: styles.h3,\n      children: cont\n    }), _jsx(TouchableOpacity, {\n      style: styles.botao,\n      onPress: clicando,\n      children: _jsx(Text, {\n        style: styles.textocor,\n        children: \"Aumentar\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    gap: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textocor: {\n    color: 'red',\n    fontSize: 30\n  },\n  cor: {\n    color: 'blue',\n    fontSize: 60\n  },\n  botao: {\n    width: 180,\n    height: 70,\n    backgroundColor: '#666666',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 25\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","TouchableOpacity","View","Image","TextInput","ScrollView","FontAwesome","Feather","NavigationActionContainer","NavigationContainer","teste","createNativeStackNavigator","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","cont","setCont","clicando","Math","ceil","random","style","styles","container","children","textocor","cor","h3","botao","onPress","create","flex","backgroundColor","gap","alignItems","justifyContent","color","fontSize","width","height","display","borderRadius"],"sources":["C:/xando/olmundo/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport {  StyleSheet, Text, TouchableOpacity, View, Image, TextInput, ScrollView } from 'react-native';\n//import { TextInput } from 'react-native-web';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { NavigationActionContainer, NavigationContainer } from '@react-navigation/native';\nimport { teste } from './mimo/teste.js'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\n\nexport default function App() {\n  const  [cont, setCont] = useState(0)\n  \n   function clicando() {\n    setCont(Math.ceil(Math.random()*6))\n   }\n  \n    return (\n  \n      <View style={styles.container}>\n        <Text style={styles.textocor}>noob</Text>\n        <Text style={styles.cor}>Crud Master</Text> \n        <Text style={styles.h3}>{cont}</Text>\n      \n        <TouchableOpacity style={styles.botao} onPress={ clicando }>\n          <Text style={styles.textocor}>Aumentar</Text>\n        </TouchableOpacity>\n        \n       \n      </View>\n    );\n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      gap:5,\n      alignItems: 'center',\n      justifyContent: 'center',\n  \n    },\n     textocor: {\n        color:'red',\n        fontSize:30,\n      },\n      cor:{\n        color:'blue',\n        fontSize:60,\n      },\n      botao:{\n        width:180,\n        height:70,\n       \n        backgroundColor:'#666666',\n        display: 'flex',\n        alignItems:'center',\n        justifyContent:'center',\n        borderRadius:25,\n  \n  \n      }\n  \n  });\n\n//  function Header() {\n//       return(\n//         <View style={{height:70, backgroundcolor:red,width:'100%',\n//justifycontent:'center', alingItens:'center'}}>\n//         <Text>\n//           Eu sou o Header\n//         </Text>\n//         </View>\n//       )\n//      }\n//  function Body() {\n//       return(\n//         <View style={{flex:1,width:'100%', backgroundcolor:'#121212'}}>\n//         <Text style={{alingItens:center}}>\n//           Eu sou o Body\n//         </Text>\n//         </View>\n//       )\n//      }\n//  function Footer() {\n//       return(\n//         <View style={{height:21, backgroundcolor:#00ff00}}>\n//         <Text>\n//           Eu sou o footer\n//         </Text>\n//         </View>\n//       )\n//      }\n\n\n// import React from 'react';\n// import { useState } from 'react';\n// import { StyleSheet, View } from 'react-native';\n// import { Input, Text } from 'react-native-elements';\n// import { Button } from 'react-native-elements';\n// import Icon from 'react-native-vector-icons/FontAwesome';\n// import { createStackNavigator } from '@react-navigation/stack';\n// import { NavigationContainer } from '@react-navigation/native';\n// import login from './screens/login';\n// import principal from './screens/principal';\n// import cadastro  from './screens/cadastro';\n\n// const Stack =createStackNavigator();\n\n// function MyStack() {\n//   return(\n//     <Stack.Navigator>\n//       <Stack.Screen name='login' component={login} />\n//       <Stack.Screen name='principal' component={principal} />\n//       <Stack.Screen name='cadastro' component={cadastro} />\n//     </Stack.Navigator>\n//   )\n// }\n\n// export default function App() {\n//  return(\n//   <NavigationContainer>\n//     <MyStack/>\n//   </NavigationContainer>\n//  )\n//   }\n\n\n\n \n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAG5C,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,OAAO,MAAM,4BAA4B;AAChD,SAASC,yBAAyB,EAAEC,mBAAmB,QAAQ,0BAA0B;AACzF,SAASC,KAAK;AACd,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAyBN,QAAQ,CAAC,CAAC,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,SAASI,QAAQA,CAAA,EAAG;IACnBD,OAAO,CAACE,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;EACpC;EAEC,OAEEV,KAAA,CAACd,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhB,IAAA,CAACd,IAAI;MAAC2B,KAAK,EAAEC,MAAM,CAACG,QAAS;MAAAD,QAAA,EAAC;IAAI,CAAM,CAAC,EACzChB,IAAA,CAACd,IAAI;MAAC2B,KAAK,EAAEC,MAAM,CAACI,GAAI;MAAAF,QAAA,EAAC;IAAW,CAAM,CAAC,EAC3ChB,IAAA,CAACd,IAAI;MAAC2B,KAAK,EAAEC,MAAM,CAACK,EAAG;MAAAH,QAAA,EAAET;IAAI,CAAO,CAAC,EAErCP,IAAA,CAACb,gBAAgB;MAAC0B,KAAK,EAAEC,MAAM,CAACM,KAAM;MAACC,OAAO,EAAGZ,QAAU;MAAAO,QAAA,EACzDhB,IAAA,CAACd,IAAI;QAAC2B,KAAK,EAAEC,MAAM,CAACG,QAAS;QAAAD,QAAA,EAAC;MAAQ,CAAM;IAAC,CAC7B,CAAC;EAAA,CAGf,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAG7B,UAAU,CAACqC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,GAAG,EAAC,CAAC;IACLC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAElB,CAAC;EACAV,QAAQ,EAAE;IACPW,KAAK,EAAC,KAAK;IACXC,QAAQ,EAAC;EACX,CAAC;EACDX,GAAG,EAAC;IACFU,KAAK,EAAC,MAAM;IACZC,QAAQ,EAAC;EACX,CAAC;EACDT,KAAK,EAAC;IACJU,KAAK,EAAC,GAAG;IACTC,MAAM,EAAC,EAAE;IAETP,eAAe,EAAC,SAAS;IACzBQ,OAAO,EAAE,MAAM;IACfN,UAAU,EAAC,QAAQ;IACnBC,cAAc,EAAC,QAAQ;IACvBM,YAAY,EAAC;EAGf;AAEJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}